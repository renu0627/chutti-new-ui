{"version":3,"sources":["webpack:///./node_modules/ng4-geoautocomplete/auto-complete.component.d.ts.AutoCompleteComponent.html","webpack:///./src/app/admin-module/employee/add-employee/add-employee.component.html","webpack:///./src/app/admin-module/employee/add-employee/add-employee.component.ts","webpack:///./src/app/admin-module/employee/edit-employee/edit-employee.component.html","webpack:///./src/app/admin-module/employee/edit-employee/edit-employee.component.ts","webpack:///./src/app/admin-module/employee/employee-list/employee-list.component.html","webpack:///./src/app/admin-module/employee/employee-list/employee-list.component.ts","webpack:///./src/app/admin-module/employee/employee.module.ts","webpack:///./src/app/admin-module/employee/employee.routing.ts"],"names":[],"mappings":"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","file":"employee-employee-module-ngfactory-es2015.js","sourcesContent":["\n    <div class=\"custom-autocomplete\" *ngIf=\"!isSettingsError\">\n      <div class=\"custom-autocomplete__container\" >\n        <div class=\"custom-autocomplete__input\" [ngClass]=\"{'button-included':settings.showSearchButton}\">\n          <input  [(ngModel)]=\"locationInput\" (click)=\"searchinputClickCallback($event)\"  (keyup)=\"searchinputCallback($event)\"\n           type=\"search\" name=\"search\" id=\"search_places\" placeholder=\"{{settings.inputPlaceholderText}}\" autocomplete=\"off\">\n          <button class=\"search-icon\" *ngIf=\"settings.showSearchButton\" (click)=\"userQuerySubmit()\">\n            <i *ngIf=\"settings.searchIconUrl\" [ngStyle]=\"{'background-image': 'url(' + settings.searchIconUrl + ')'}\"></i>\n            <i *ngIf=\"!settings.searchIconUrl\" class=\"search-default-icon\"></i>\n          </button>\n        </div>\n        <pre class=\"custom-autocomplete__loader\" *ngIf=\"gettingCurrentLocationFlag\"><i class=\"gif\"></i></pre>\n      </div>\n      <ul class=\"custom-autocomplete__dropdown\" *ngIf=\"dropdownOpen && (settings.showCurrentLocation || queryItems.length)\">\n        <li *ngIf=\"settings.showCurrentLocation\" class=\"currentlocation\">\n          <a href=\"javascript:;\" (click)=\"currentLocationSelected()\">\n            <i class=\"location-icon\" *ngIf=\"settings.currentLocIconUrl\" [ngStyle]=\"{'background-image': 'url(' + settings.currentLocIconUrl + ')'}\"></i>Use Current Location\n            <i class=\"location-icon current-default-icon\" *ngIf=\"!settings.currentLocIconUrl\"></i>\n          </a>\n        </li>\n        <li class=\"heading heading-recent\" *ngIf=\"!recentDropdownOpen && queryItems.length\"><span>Locations</span><span class=\"line line-location\"></span></li>\n        <li class=\"heading heading-recent\" *ngIf=\"recentDropdownOpen && queryItems.length\">\n          <span>Recent Searches</span><span class=\"line line-recent\"></span>\n        </li>\n        <li *ngFor = \"let data of queryItems;let $index = index\" [ngClass]=\"{'active': data.active}\">\n          <a href=\"javascript:;\" (mouseover)=\"activeListNode($index)\" (click)=\"selectedListNode($index)\">\n            <i class=\"custom-icon\" *ngIf=\"settings.locationIconUrl\" [ngStyle]=\"{'background-image': 'url(' + settings.locationIconUrl + ')'}\"></i>\n            <i class=\"custom-icon location-default-icon\" *ngIf=\"!settings.locationIconUrl\"></i>\n              <span class=\"main-text\">\n                {{data.structured_formatting?.main_text ? data.structured_formatting.main_text : data.description}}\n              </span>\n              <span class=\"secondary_text\" *ngIf=\"data.structured_formatting?.secondary_text\">{{data.structured_formatting.secondary_text}}</span>\n          </a>\n        </li>\n      </ul>\n    </div>\n    <div class=\"custom-autocomplete--error\" *ngIf=\"isSettingsError\">{{settingsErrorMsg}}</div>\n  ","<ngx-loading-bar [color]=\"'#6747D4'\" [includeSpinner]=\"false\"></ngx-loading-bar>\n<div class=\"dashboard__content\">\n    <h3> Employee</h3>\n    <div class=\"inner__section employee_add__page\">\n        <h5>Add Employee</h5>\n        <p class=\"float-right alert-danger\">{{errorMessage}}</p>\n        <span class=\"icon_arrow_up1\"></span>\n        <div class=\"nav nav-tabs employee__tab mt-4\" id=\"nav-tab\" role=\"tablist\">\n            <a class=\" active ml-0\" id=\"nav-general-tab\" data-toggle=\"tab\" href=\"#nav-general\" role=\"tab\"\n                aria-controls=\"nav-general\" aria-selected=\"true\">\n                <div class=\"steps_num align-self-center\">\n                    <p>1</p>\n                </div>\n                <div class=\" align-self-center\">General <span> -----</span></div>\n            </a>\n\n            <a class=\"\" id=\"nav-company-info-tab\" data-toggle=\"tab\" href=\"#nav-company-info\" role=\"tab\"\n                aria-controls=\"nav-company-info\" (click)=\"goToNextTab()\" aria-selected=\"false\">\n                <div class=\"steps_num align-self-center\">\n                    <p>2</p>\n                </div>\n                <div class=\" align-self-center\">Company Information </div>\n            </a>\n        </div>\n\n        <!-- General Tab Content        -->\n        <div class=\"tab-content employee--input h-100\" id=\"nav-tabContent\">\n            <div class=\"tab-pane fade show active h-100\" id=\"nav-general\" role=\"tabpanel\"\n                aria-labelledby=\"nav-general-tab\">\n                <form [formGroup]=\"generalForm\">\n                    <div class=\"new__organization row mt-lg-2 mx-0\">\n\n                        <div class=\"col-lg-10 pr-lg-5\">\n                            <div class=\"row\">\n                                <div class=\"col-lg-6  pr-lg-5\">\n                                    <div class=\"form-group\">\n                                        <label for=\"\" class=\"form-label\">First Name</label>\n                                        <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" />\n                                        <div *ngIf=\"generalForm.get('firstName').errors \n                                            && (generalForm.get('firstName').dirty\n                                            || generalForm.get('firstName').touched\n                                            || submitted) \" class=\"error error-msg\">\n                                            <div [hidden]=\"!generalForm.get('firstName').errors.required\">\n                                                <small>First Name is required.</small>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-lg-6\">\n                                    <div class=\"form-group\">\n                                        <label for=\"\" class=\"form-label\">Last Name</label>\n                                        <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" />\n                                        <div *ngIf=\"generalForm.get('lastName').errors \n                                            && (generalForm.get('lastName').dirty\n                                            || generalForm.get('lastName').touched\n                                            || submitted) \" class=\"error error-msg\">\n                                            <div [hidden]=\"!generalForm.get('lastName').errors.required\">\n                                                <small>Last Name is required.</small>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-lg-6  pr-lg-5\">\n                                    <div class=\"form-group\">\n                                        <label for=\"\" class=\"form-label\">Date of Birth</label>\n                                        <span data-toggle=\"modal\" data-target=\".bd-example-modal-lg\">\n                                            <input class=\"form-control\" name=\"daterange\" type=\"text\" [max]=\"maxDate\"\n                                                formControlName=\"dob\" (selected)=\"onDateOfBirthDate($event)\">\n                                            <span class=\"calender_icon icon_date_picker\"></span>\n                                        </span>\n                                        <div *ngIf=\"generalForm.get('dob').errors \n                                        && (generalForm.get('dob').dirty\n                                        || generalForm.get('dob').touched \n                                        || submitted) \" class=\"error error-msg\">\n                                            <div [hidden]=\"!generalForm.get('dob').errors.required\">\n                                                <small>Date of Birth is required.</small>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-lg-6\">\n                                    <div class=\"form-group\">\n                                        <label for=\"\" class=\"form-label\">Personal Email ID</label>\n                                        <input type=\"text\" formControlName=\"personalEmailId\" class=\"form-control\">\n                                        <div *ngIf=\"generalForm.get('personalEmailId').errors \n                                            && (generalForm.get('personalEmailId').dirty\n                                            || generalForm.get('personalEmailId').touched \n                                            || submitted) \" class=\"error error-msg\">\n                                            <div [hidden]=\"!generalForm.get('personalEmailId').errors.required\">\n                                                <small>Personal email address is required.</small>\n                                            </div>\n                                            <div [hidden]=\"!generalForm.get('personalEmailId').errors.pattern\">\n                                                <small>Enter valid email address.</small>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-lg-6  pr-lg-5\">\n                                    <div class=\"form-group\">\n                                        <label for=\"\" class=\"form-label\">Emergency Contact Number</label>\n                                        <input type=\"text\" formControlName=\"emergencyContactNo\"\n                                            (keypress)=\"onKeyPress($event)\" maxlength=\"10\" class=\"form-control\" />\n                                        <div *ngIf=\"generalForm.get('emergencyContactNo').errors \n                                            && (generalForm.get('emergencyContactNo').dirty\n                                            || generalForm.get('emergencyContactNo').touched \n                                            || submitted)\" class=\"error error-msg\">\n                                            <div [hidden]=\"!generalForm.get('emergencyContactNo').errors.required\">\n                                                <small>Emergency contact number is required.</small>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-lg-6\">\n                                    <div class=\"form-group\">\n                                        <label for=\"\" class=\"form-label\">Blood Group</label>\n                                        <select class=\"form-control\" formControlName=\"bloodGroup\">\n                                            <option [value]=\"\"></option>\n                                            <option value=\"O-\">O-</option>\n                                            <option value=\"O+\">O+</option>\n                                            <option value=\"A-\">A-</option>\n                                            <option value=\"A+\">A+</option>\n                                            <option value=\"B-\">B-</option>\n                                            <option value=\"B+\">B+</option>\n                                            <option value=\"AB-\">AB-</option>\n                                            <option value=\"AB+\">AB+</option>\n                                        </select>\n                                        <div *ngIf=\"generalForm.get('bloodGroup').errors \n                                        && (generalForm.get('bloodGroup').dirty\n                                        || generalForm.get('bloodGroup').touched \n                                        || submitted)\" class=\"error error-msg\">\n                                            <div [hidden]=\"!generalForm.get('bloodGroup').errors.required \">\n                                                <small>Blood group is required.</small>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-lg-6  pr-lg-5\">\n                                    <div class=\"form-group\">\n                                        <label for=\"\" class=\"form-label\">Contact No</label>\n                                        <input type=\"text\" formControlName=\"contactNo\" (keypress)=\"onKeyPress($event)\"\n                                            maxlength=\"10\" class=\"form-control\" />\n                                        <div *ngIf=\"generalForm.get('contactNo').errors \n                                            && (generalForm.get('contactNo').dirty\n                                            || generalForm.get('contactNo').touched\n                                            || submitted)\" class=\"error error-msg\">\n                                            <div [hidden]=\"!generalForm.get('contactNo').errors.required\">\n                                                <small>Contact number is required.</small>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-lg-6\">\n                                    <div class=\"form-group\">\n                                        <label for=\"\" class=\"form-label\">Gender</label>\n                                        <div class=\"form-group mb-0 quick__apply--type\">\n                                            <div class=\"radio\">\n                                                <input id=\"radio-1\" name=\"employeeGender\"\n                                                    formControlName=\"employeeGender\" value=\"M\" type=\"radio\">\n                                                <label for=\"radio-1\" class=\"radio-label\">\n                                                    <div class=\"checker\"></div> Male\n                                                </label>\n                                            </div>\n\n                                            <div class=\"radio\">\n                                                <input id=\"radio-2\" name=\"employeeGender\"\n                                                    formControlName=\"employeeGender\" value=\"F\" type=\"radio\">\n                                                <label for=\"radio-2\" class=\"radio-label\">\n                                                    <div class=\"checker\"></div> Female\n                                                </label>\n                                            </div>\n                                        </div>\n                                        <div *ngIf=\"generalForm.get('employeeGender').errors \n                                        && (generalForm.get('employeeGender').dirty\n                                        || generalForm.get('employeeGender').touched \n                                        || submitted)\" class=\"error error-msg\">\n                                            <div [hidden]=\"!generalForm.get('employeeGender').errors.required\">\n                                                <small>Gender is required.</small>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>\n                        <div class=\"col-lg-2\">\n                            <div class=\"company__logo d-flex justify-content-center\" id=\"uploadClick\">\n                                <div class=\"upload__logo text-center  align-self-center\">\n                                    <label class=\"fileUpload\">\n                                        <img id=\"upload_img\"\n                                            src=\"../../../../../assets/images/admin/upload-to-cloud.svg\">\n                                        Upload Logo\n                                        <input id=\"fileInput\" type=\"file\" class=\"custom-file-input\" for=\"uploadClick\"\n                                            accept=\"image/png,image/jpg\" (change)=\"onSelectFile($event)\">\n                                    </label>\n                                </div>\n\n                            </div>\n                            <p class=\"company__logo--info d-flex mt-2\">Image size should be below 1MB Supported Formats\n                                (.png,\n                                .jpeg)\n                            </p>\n                        </div>\n                        <div class=\"col-lg-12\">\n\n                            <div class=\"row\">\n\n                                <div class=\"col-12\">\n                                    <h6 class=\"text-uppercase\">CURRENT ADDRESS</h6>\n                                </div>\n                                <div class=\"col-lg-4\">\n                                    <ng4geo-autocomplete [userSettings]=\"userSettings\"\n                                        (componentCallback)=\"autoCompleteCallback1($event)\"></ng4geo-autocomplete>\n                                </div>\n                                <div class=\"col-lg-2\">\n                                    <div class=\"form-group\">\n                                        <label for=\"\" class=\"form-label\">Door No.</label>\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"curDoorNo\" />\n                                        <div *ngIf=\"generalForm.get('curDoorNo').errors \n                                            && (generalForm.get('curDoorNo').dirty\n                                            || generalForm.get('curDoorNo').touched \n                                            || submitted)\" class=\"error error-msg\">\n                                            <div [hidden]=\"!generalForm.get('curDoorNo').errors.required\">\n                                                <small>Door no is required.</small>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-lg-3\">\n                                    <div class=\"form-group\">\n                                        <label for=\"\" class=\"form-label\">Street</label>\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"curStreet\" />\n                                        <div *ngIf=\"generalForm.get('curStreet').errors \n                                            && (generalForm.get('curStreet').dirty\n                                            || generalForm.get('curStreet').touched \n                                            || submitted)\" class=\"error error-msg\">\n                                            <div [hidden]=\"!generalForm.get('curStreet').errors.required\">\n                                                <small>Street is required.</small>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-lg-3\">\n                                    <div class=\"form-group\">\n                                        <label for=\"\" class=\"form-label\">City</label>\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"curCity\" />\n                                        <div *ngIf=\"generalForm.get('curCity').errors \n                                            && (generalForm.get('curCity').dirty\n                                            || generalForm.get('curCity').touched \n                                            || submitted)\" class=\"error error-msg\">\n                                            <div [hidden]=\"!generalForm.get('curCity').errors.required\">\n                                                <small>City is required.</small>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-lg-4\">\n                                    <div class=\"form-group\">\n                                        <label for=\"\" class=\"form-label\">State</label>\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"curState\" />\n                                        <div *ngIf=\"generalForm.get('curState').errors \n                                        && (generalForm.get('curState').dirty\n                                        || generalForm.get('curState').touched \n                                        || submitted)\" class=\"error error-msg\">\n                                            <div [hidden]=\"!generalForm.get('curState').errors.required\">\n                                                <small>State is required.</small>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class=\"col-lg-4\">\n                                    <div class=\"form-group\">\n                                        <label for=\"\" class=\"form-label\">Pincode</label>\n                                        <input type=\"text\" (keypress)=\"onKeyPress($event)\" class=\"form-control\" maxlength=\"6\"\n                                            formControlName=\"curPincode\" />\n                                        <div *ngIf=\"generalForm.get('curPincode').errors \n                                            && (generalForm.get('curPincode').dirty\n                                            || generalForm.get('curPincode').touched \n                                            || submitted)\" class=\"error error-msg\">\n                                            <div [hidden]=\"!generalForm.get('curPincode').errors.required\">\n                                                <small>Pincode is required.</small>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-lg-4\">\n                                    <div class=\"form-group\">\n                                        <label for=\"\" class=\"form-label\">Country</label>\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"curCountry\" />\n                                        <div *ngIf=\"generalForm.get('curCountry').errors \n                                            && (generalForm.get('curCountry').dirty\n                                            || generalForm.get('curCountry').touched \n                                            || submitted)\" class=\"error error-msg\">\n                                            <div [hidden]=\"!generalForm.get('curCountry').errors.required\">\n                                                <small>Country is required.</small>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-12\">\n                                    <div class=\"d-flex\">\n                                        <h6 class=\"text-uppercase align-self-center mb-0 pr-3\"> PERMANENT ADDRESS </h6>\n                                        <div class=\"form-group align-self-center\">\n                                            <div class=\"custom-control custom-checkbox\">\n                                                <input type=\"checkbox\" class=\"custom-control-input\"\n                                                    id=\"attendance__requests\" [checked]=\"isSameAddress\"\n                                                    (change)=\"checkSameAddress($event)\">\n                                                <label class=\"custom-control-label\" for=\"attendance__requests\"> <span\n                                                        class=\"attendance__requests\">Same as Current\n                                                        Address</span></label>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div *ngIf=\"!isSameAddress\" class=\"col-12 permanent__address\">\n                                    <div class=\"col-lg-2\">\n                                        <div class=\"form-group\">\n                                            <label for=\"\" class=\"form-label\">Door No.</label>\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"perDoorNo\" />\n                                        </div>\n                                    </div>\n                                    <div class=\"col-lg-7\">\n                                        <div class=\"form-group\">\n                                            <label for=\"\" class=\"form-label\">Street</label>\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"perStreet\" />\n                                        </div>\n                                    </div>\n                                    <div class=\"col-lg-3\">\n                                        <div class=\"form-group\">\n                                            <label for=\"\" class=\"form-label\">City</label>\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"perCity\" />\n                                        </div>\n                                    </div>\n                                    <div class=\"col-lg-4\">\n                                        <div class=\"form-group\">\n                                            <label for=\"\" class=\"form-label\">State</label>\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"perState\" />\n                                        </div>\n                                    </div>\n\n                                    <div class=\"col-lg-4\">\n                                        <div class=\"form-group\">\n                                            <label for=\"\" class=\"form-label\">Pincode</label>\n                                            <input type=\"text\" class=\"form-control\" (keypress)=\"onKeyPress($event)\" formControlName=\"perPincode\" />\n                                        </div>\n                                    </div>\n                                    <div class=\"col-lg-4\">\n                                        <div class=\"form-group\">\n                                            <label for=\"\" class=\"form-label\">Country</label>\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"perCountry\" />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"col-12\">\n                                <div class=\"bottom__btn mt-0\">\n                                    <button class=\"btn btn-primary cancel\" type=\"button\"\n                                        [routerLink]=\"['/admin/employee']\">Cancel</button>\n                                    <button class=\"btn btn-primary submit\" data-target=\"#nav-company-info\"\n                                        type=\"button\"><a (click)=\"goToNextTab()\" data-toggle=\"tab\">Next</a></button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n\n            <div class=\"tab-pane fade\" id=\"nav-companyinfo\" role=\"tabpanel\" aria-labelledby=\"nav-company-info-tab\">\n                <form [formGroup]=\"companyInfoForm\">\n                    <div class=\"row px-2 mt-3\">\n                        <div class=\"col-md-4\">\n                            <div class=\"form-group\">\n                                <label class=\"form-label\">Attendance ID</label>\n                                <input type=\"text\" formControlName=\"attendanceId\" class=\"form-control\" />\n                                <div *ngIf=\"companyInfoForm.get('attendanceId').errors \n                                && (companyInfoForm.get('attendanceId').dirty\n                                || companyInfoForm.get('attendanceId').touched \n                                || submittedBtn2)\" class=\"error error-msg\">\n                                    <div [hidden]=\"!companyInfoForm.get('attendanceId').errors.required\">\n                                        <small>Attendance id is required.</small>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                            <div class=\"form-group\">\n                                <label for=\"\" class=\"form-label\">Date of Joining</label>\n                                <span data-toggle=\"modal\" data-target=\".doj-example-modal-lg\">\n                                    <input class=\"form-control\" name=\"dateofJoining\" type=\"text\"\n                                        formControlName=\"dateofJoining\" (selected)=\"onDateOfJoiningDate($event)\">\n                                    <span class=\"calender_icon icon_date_picker\"></span>\n                                </span>\n                                <div *ngIf=\"companyInfoForm.get('dateofJoining').errors \n                                && (companyInfoForm.get('dateofJoining').dirty\n                                || companyInfoForm.get('dateofJoining').touched \n                                || submittedBtn2)\" class=\"error error-msg\">\n                                    <div [hidden]=\"!companyInfoForm.get('dateofJoining').errors.required\">\n                                        <small>Join date is required.</small>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <!-- </div> -->\n                        <div class=\"col-md-4\">\n                            <div class=\"form-group\">\n                                <label class=\"form-label\">Work Location</label>\n                                <input type=\"text\" formControlName=\"workLocation\" class=\"form-control\" />\n                                <div *ngIf=\"companyInfoForm.get('workLocation').errors \n                                    && (companyInfoForm.get('workLocation').dirty\n                                    || companyInfoForm.get('workLocation').touched \n                                    || submittedBtn2)\" class=\"error error-msg\">\n                                    <div [hidden]=\"!companyInfoForm.get('workLocation').errors.required\">\n                                        <small>Work location is required.</small>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                            <div class=\"form-group\">\n                                <label class=\"form-label\">Department</label>\n                                <select class=\"form-control\" formControlName=\"department\"\n                                    [(ngModel)]=\"selectedDepartment\"\n                                    (ngModelChange)=\"getDesignationByDepartment($event)\">\n                                    <option *ngFor=\"let department of departments\" [ngValue]=\"department\">\n                                        {{department.departmentName}}</option>\n                                </select>\n                                <div *ngIf=\"companyInfoForm.get('department').errors \n                                && (companyInfoForm.get('department').dirty\n                                || companyInfoForm.get('department').touched \n                                || submittedBtn2)\" class=\"error error-msg\">\n                                    <div [hidden]=\"!companyInfoForm.get('department').errors.required\">\n                                        <small>Department is required.</small>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                            <div class=\"form-group\">\n                                <label class=\"form-label\">Designation</label>\n                                <select class=\"form-control\" formControlName=\"designation\">\n                                    <option *ngFor=\"let designation of designations\" [ngValue]=\"designation\">\n                                        {{designation.gemsDesignationName}}\n                                    </option>\n                                </select>\n                                <div *ngIf=\"companyInfoForm.get('designation').errors \n                                && (companyInfoForm.get('designation').dirty\n                                || companyInfoForm.get('designation').touched \n                                || submittedBtn2)\" class=\"error error-msg\">\n                                    <div [hidden]=\"!companyInfoForm.get('designation').errors.required\">\n                                        <small>Desination is required.</small>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                            <div class=\"form-group\">\n                                <label class=\"form-label\">Role</label>\n                                <select class=\"form-control\" formControlName=\"role\">\n                                    <option *ngFor=\"let role of roles\" [ngValue]=\"role\">\n                                        {{role.roleName}}\n                                    </option>\n                                </select>\n                                <div *ngIf=\"companyInfoForm.get('role').errors \n                                && (companyInfoForm.get('role').dirty\n                                || companyInfoForm.get('role').touched \n                                || submittedBtn2)\" class=\"error error-msg\">\n                                    <div [hidden]=\"!companyInfoForm.get('role').errors.required\">\n                                        <small>Role is required.</small>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                            <div class=\"form-group\">\n                                <label class=\"form-label\">Reporting Manager</label>\n                                <select class=\"form-control\" formControlName=\"reportingManager\">\n                                    <option *ngFor=\"let employee of employeesList\" [ngValue]=\"employee\">\n                                        {{employee.employeeFirstName}} ({{employee.employeeCode}})\n                                    </option>\n                                </select>\n                                <div *ngIf=\"companyInfoForm.get('reportingManager').errors \n                                && (companyInfoForm.get('reportingManager').dirty\n                                || companyInfoForm.get('reportingManager').touched \n                                || submittedBtn2)\" class=\"error error-msg\">\n                                    <div [hidden]=\"!companyInfoForm.get('reportingManager').errors.required\">\n                                        <small>Reporting manager is required.</small>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                            <div class=\"form-group\">\n                                <label class=\"form-label\">Employee Shift</label>\n                                <select class=\"form-control\" formControlName=\"employeeShift\">\n                                    <option *ngFor=\"let shift of shifts\" [ngValue]=\"shift\">{{shift.shiftName}}\n                                    </option>\n                                </select>\n                                <div *ngIf=\"companyInfoForm.get('employeeShift').errors \n                                && (companyInfoForm.get('employeeShift').dirty\n                                || companyInfoForm.get('employeeShift').touched \n                                || submittedBtn2)\" class=\"error error-msg\">\n                                    <div [hidden]=\"!companyInfoForm.get('employeeShift').errors.required\">\n                                        <small>Employee shift is required.</small>\n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                            <div class=\"form-group\">\n                                <label class=\"form-label\">Company Email ID</label>\n                                <input type=\"text\" formControlName=\"companyMailId\" class=\"form-control\" />\n                                <div *ngIf=\"companyInfoForm.get('companyMailId').errors \n                                    && (companyInfoForm.get('companyMailId').dirty\n                                    || companyInfoForm.get('companyMailId').touched \n                                    || submittedBtn2)\" class=\"error error-msg\">\n                                    <div [hidden]=\"!companyInfoForm.get('companyMailId').errors.required\">\n                                        <small>Company email address is required.</small>\n                                    </div>\n                                    <div [hidden]=\"!companyInfoForm.get('companyMailId').errors.pattern\">\n                                        <small>Enter valid email address.</small>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                            <div class=\"form-group\">\n                                <label class=\"form-label\">Employee Code</label>\n                                <input type=\"text\" formControlName=\"employeeCode\" class=\"form-control\" />\n                                <div *ngIf=\"companyInfoForm.get('employeeCode').errors \n                                    && (companyInfoForm.get('employeeCode').dirty\n                                    || companyInfoForm.get('employeeCode').touched \n                                    || submittedBtn2)\" class=\"error error-msg\">\n                                    <div [hidden]=\"!companyInfoForm.get('employeeCode').errors.required\">\n                                        <small>Employee code is required.</small>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                            <div class=\"form-group\">\n                                <label class=\"form-label\">Employee Status</label>\n                                <select class=\"form-control\" formControlName=\"employeeStatus\">\n                                    <option *ngFor=\"let status of employeeStatus\" [ngValue]=\"status\">\n                                        {{status.statusDescription}}\n                                    </option>\n                                </select>\n                                <div *ngIf=\"companyInfoForm.get('employeeStatus').errors \n                                && (companyInfoForm.get('employeeStatus').dirty\n                                || companyInfoForm.get('employeeStatus').touched \n                                || submittedBtn2)\" class=\"error error-msg\">\n                                    <div [hidden]=\"!companyInfoForm.get('employeeStatus').errors.required\">\n                                        <small>Employee status is required.</small>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n                <div class=\"row justify-content-end mx-0 px-0 mt-4\">\n                    <div class=\"col-6  text-right time__submit\">\n                        <button type=\"button\" class=\"btn cancel-button\"\n                            [routerLink]=\"['/admin/employee']\">Cancel</button>\n                        <button type=\"submit\" (click)=\"submitGeneralForm()\"\n                            class=\"btn theme__btn btn-hover color-3\">Save</button>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<!-- Date Of Birth DatePicker -->\n\n<div class=\"modal fade bd-example-modal-lg\" tabindex=\"-1\" id=\"dobmodel\" role=\"dialog\"\n    aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\" data-backdrop=\"static\" data-keyboard=\"false\">\n    <div class=\"modal-dialog modal-lg modal-dialog-centered permissionModel\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header row mx-0 px-0 mt-3 date__picker--header\">\n                <div class=\"col-md-4 align-self-center time__title\">\n\n                </div>\n\n                <div class=\"col-md-8 float-right text-right datePicker__header--right align-self-center\">\n                    <a class=\"reset-permission  align-self-center\" href=\"javascript:void(0);\"\n                        (click)=\"resetBirthDate()\">Reset</a>\n                    <span class=\"pl-2 ml-2 permissionDate  align-self-center\"><span class=\"icon_date_picker\"></span>\n                        {{dobDate}}</span>\n                    <span class=\"pl-2 ml-2 permissionStartTimepicker  text-right  align-self-center\"><span\n                            class=\"icon_time  align-self-center\"></span>\n                    </span>\n\n                </div>\n            </div>\n            <div class=\"row justify-content-center px-0 mx-0\">\n                <div class=\"col-7 text-center\">\n                    <ngb-datepicker #d (select)=\"onDateOfBirthDate($event)\" [maxDate]=\"maxDate\" class=\"date__table\">\n                    </ngb-datepicker>\n                </div>\n\n\n            </div>\n\n            <div class=\"row justify-content-end mx-0 px-0 mb-5\">\n                <div class=\"col-6  text-right time__submit\">\n                    <button type=\"button\" class=\"btn cancel-button\" data-dismiss=\"modal\">Cancel</button>\n                    <button type=\"button\" class=\"btn theme__btn btn-hover color-3\" data-dismiss=\"modal\">Done</button>\n                </div>\n\n            </div>\n\n        </div>\n    </div>\n</div>\n\n\n<!-- Date Of Joining DatePicker -->\n\n<div class=\"modal fade doj-example-modal-lg\" tabindex=\"-1\" id=\"dobmodel\" role=\"dialog\"\n    aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\" data-backdrop=\"static\" data-keyboard=\"false\">\n    <div class=\"modal-dialog modal-lg modal-dialog-centered permissionModel\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header row mx-0 px-0 mt-3 date__picker--header\">\n                <div class=\"col-md-4 align-self-center time__title\">\n\n                </div>\n\n                <div class=\"col-md-8 float-right text-right datePicker__header--right align-self-center\">\n                    <a class=\"reset-permission  align-self-center\" href=\"javascript:void(0);\"\n                        (click)=\"resetDateOfJoining()\">Reset</a>\n                    <span class=\"pl-2 ml-2 permissionDate  align-self-center\"><span class=\"icon_date_picker\"></span>\n                        {{dojDate}}</span>\n                    <span class=\"pl-2 ml-2 permissionStartTimepicker  text-right  align-self-center\"><span\n                            class=\"icon_time  align-self-center\"></span>\n                    </span>\n\n                </div>\n            </div>\n            <div class=\"row justify-content-center px-0 mx-0\">\n                <div class=\"col-7 text-center\">\n                    <ngb-datepicker #d (select)=\"onDateOfJoiningDate($event)\" [maxDate]=\"maxDate\" class=\"date__table\">\n                    </ngb-datepicker>\n                </div>\n\n\n            </div>\n\n            <div class=\"row justify-content-end mx-0 px-0 mb-5\">\n                <div class=\"col-6  text-right time__submit\">\n                    <button type=\"button\" class=\"btn cancel-button\" data-dismiss=\"modal\">Cancel</button>\n                    <button type=\"button\" class=\"btn theme__btn btn-hover color-3\" data-dismiss=\"modal\">Done</button>\n                </div>\n\n            </div>\n\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n// import { NgbDateStruct, NgbCalendar } from '@ng-bootstrap/ng-bootstrap';\nimport { Genericservice } from 'src/app/services/genericservices';\nimport { LoadingBarService } from '@ngx-loading-bar/core';\nimport { UrlConstant } from 'src/app/services/urlConstant';\nimport { EncryptDecryptLocalStorageService } from 'src/app/services/encrypt-decrypt-localstorage.service';\nimport { NgbDate, NgbCalendar } from '@ng-bootstrap/ng-bootstrap';\nimport { DataSharingService } from 'src/app/services/dataSharing.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-employee',\n  templateUrl: './add-employee.component.html',\n  styleUrls: ['./add-employee.component.scss']\n})\nexport class AddEmployeeComponent implements OnInit {\n  public generalForm: FormGroup;\n  isSameAddress: boolean = true;\n  // model: NgbDateStruct;\n  date: { year: number, month: number };\n  departmentListURL = UrlConstant.departmentlistApi;\n  designationListURL = UrlConstant.designationlistApi;\n  getEmployeeListURL = UrlConstant.getEmployeeListApi;\n  saveEmployeeURL = UrlConstant.saveEmployeeApi;\n  roleListURL = UrlConstant.rolelistApi;\n  shiftListURL = UrlConstant.shiftlistApi;\n  employeeStatusListURL = UrlConstant.employeeStatusListApi;\n  saveContactURL = UrlConstant.saveContactApi;\n  departments: any;\n  designations: any;\n  public companyInfoForm: FormGroup;\n  selectedDepartment: any;\n  designationsList: any[] = [];\n  roles: any;\n  shifts: any;\n  employees: any = [];\n  profileImgData: any;\n  currentFileUpload: File;\n  reportingManager: any[] = [];\n  employeeStatus: any;\n  orgId: any;\n  dobDate = 'DATE';\n  dojDate = 'DATE';\n  userId: any;\n  errorMessage: string = '';\n  employeesList: any = [];\n  Date = new Date();\n  maxDate: any;\n  submittedBtn2: boolean = false;\n  submitted: boolean = false;\n  userSettings ={\n    'showCurrentLocation': false,\n    'inputPlaceholderText': 'Search Your Address',\n    'showSearchButton': false\n  }\n  emailRegex = '^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$';\n\n  constructor(private calendar: NgbCalendar,\n    private encryptdecryptlocalstorage: EncryptDecryptLocalStorageService,\n    private genericservice: Genericservice,\n    private loadingBar: LoadingBarService,\n    private router: Router,\n    private dataSharingService: DataSharingService) {\n\n    this.maxDate = { year: this.Date.getFullYear(), \"month\": this.Date.getMonth() + 1, \"day\": this.Date.getDate() };\n  }\n\n  ngOnInit() {\n    this.orgId = this.encryptdecryptlocalstorage.getLocalStorage('organizationId');\n    this.createForms();\n    this.subcribeForm();\n    this.getDepartments();\n    this.getDesignations();\n    this.getRoles();\n    this.getShifts();\n    this.getEmployees();\n    this.getEmployeeStatus();\n    this.inputActive();\n    this.removeclass();\n  }\n\n\n  subcribeForm() {\n    this.generalForm.valueChanges.subscribe(value => {\n      console.log(value);\n\n    })\n    this.companyInfoForm.valueChanges.subscribe(value => {\n      console.log(value);\n\n    })\n  }\n\n  removeclass() {\n    $(function () {\n      $(\".select__date\").on(\"click\", function (e) {\n        $('.main').addClass(\"wide\");\n        $('.daterangepicker').addClass(\"active\");\n        e.stopPropagation()\n      });\n      $(document).on(\"click\", function (e) {\n        if ($(e.target).is(\".daterangepicker\") === false) {\n          $(\".main\").removeClass(\"wide\");\n          $(\".daterangepicker\").removeClass(\"active\");\n        }\n      });\n    });\n  }\n  createForms() {\n    this.generalForm = new FormGroup({\n      firstName: new FormControl('', [Validators.required]),\n      lastName: new FormControl('', [Validators.required]),\n      dob: new FormControl('', [Validators.required]),\n      personalEmailId: new FormControl('', [Validators.required, Validators.pattern(this.emailRegex)]),\n      emergencyContactNo: new FormControl('', [Validators.required]),\n      bloodGroup: new FormControl('', [Validators.required]),\n      contactNo: new FormControl('', [Validators.required]),\n      employeeGender: new FormControl('', [Validators.required]),\n      curDoorNo: new FormControl('', [Validators.required]),\n      curStreet: new FormControl('', [Validators.required]),\n      curCity: new FormControl('', [Validators.required]),\n      curCountry: new FormControl('', [Validators.required]),\n      curState: new FormControl('', [Validators.required]),\n      curPincode: new FormControl('', [Validators.required]),\n      perDoorNo: new FormControl(''),\n      perStreet: new FormControl(''),\n      perCity: new FormControl(''),\n      perCountry: new FormControl(''),\n      perState: new FormControl(''),\n      perPincode: new FormControl(''),\n\n\n    });\n    this.companyInfoForm = new FormGroup({\n      attendanceId: new FormControl('', [Validators.required]),\n      dateofJoining: new FormControl('', [Validators.required]),\n      workLocation: new FormControl('', [Validators.required]),\n      department: new FormControl('', [Validators.required]),\n      designation: new FormControl('', [Validators.required]),\n      role: new FormControl('', [Validators.required]),\n      reportingManager: new FormControl('', [Validators.required]),\n      employeeShift: new FormControl('', [Validators.required]),\n      companyMailId: new FormControl('', [Validators.required, Validators.pattern(this.emailRegex)]),\n      employeeCode: new FormControl('', [Validators.required]),\n      employeeStatus: new FormControl('', [Validators.required]),\n    })\n  }\n  checkSameAddress(event) {\n    this.isSameAddress = event.target.checked === true ? true : false;\n  }\n\n  getDepartments() {\n    let requestPayload = {\n      \"gemsOrganisation\": {\n        \"gemsOrgId\": this.orgId\n      }\n    }\n    this.genericservice.post(this.departmentListURL, requestPayload, false).subscribe(response => {\n      this.departments = response.data;\n    })\n\n  }\n  getDesignations() {\n    let requestPayload = {\n      \"gemsOrganisation\": {\n        \"gemsOrgId\": this.orgId\n      }\n    }\n    this.genericservice.post(this.designationListURL, requestPayload, false).subscribe(response => {\n      this.designationsList = response.data;\n    })\n  }\n  getDesignationByDepartment(department) {\n    this.designations = [];\n    for (let obj of this.designationsList) {\n      if (obj.gemsDepartment.gemsDepartmentId === department.gemsDepartmentId) {\n        this.designations.push(obj);\n      }\n    }\n\n  }\n\n  getRoles() {\n    let requestPayload = {\n      \"gemsOrganisation\": {\n        \"gemsOrgId\": this.orgId\n      }\n    }\n    this.genericservice.post(this.roleListURL, requestPayload, false).subscribe(response => {\n      this.roles = response.data;\n    })\n\n  }\n  getShifts() {\n    let requestPayload = {\n      \"gemsOrganisation\": {\n        \"gemsOrgId\": this.orgId\n      }\n    }\n    this.genericservice.post(this.shiftListURL, requestPayload, false).subscribe(response => {\n      this.shifts = response.data;\n    })\n  }\n  getEmployees() {\n    let requestPayload = {\n      \"gemsOrganisationId\": this.orgId,\n      \"isActive\": true\n    }\n    this.genericservice.post(this.getEmployeeListURL, requestPayload, false).subscribe(response => {\n      this.employeesList = response.data;\n    })\n  }\n  getEmployeeStatus() {\n    let requestPayload = {\n      \"gemsOrganisationId\": this.orgId,\n      \"isActive\": true\n    }\n    this.genericservice.post(this.employeeStatusListURL, requestPayload, false).subscribe(response => {\n      this.employeeStatus = response.data;\n    })\n\n  }\n\n\n\n  submitGeneralForm() {\n    this.submittedBtn2 = true;\n    if (this.companyInfoForm.valid) {\n      // this.errorMessage='';\n      // if (this.profileImgData) {\n      //   this.profileImgData = this.profileImgData.split(',')[1];\n      // } else {\n      //   this.errorMessage = 'profile Image is required';\n      // }\n      let requestPayload = {\n        \"attendanceId\": this.companyInfoForm.value.attendanceId,\n        \"createdBy\": this.encryptdecryptlocalstorage.getLocalStorage('employeeId'),\n        'createdOn': new Date(),\n        \"currentEmployeeStatus\": this.companyInfoForm.value.employeeStatus,\n        \"currentReportingTo\": this.companyInfoForm.value.reportingManager,\n        \"dateOfJoining\": new Date(this.companyInfoForm.value.dateofJoining),\n        \"emergencyContactNumber\": this.generalForm.value.emergencyContactNo,\n        \"employeeCode\": this.companyInfoForm.value.employeeCode,\n        \"employeeDob\": new Date(this.generalForm.value.dob),\n        \"employeeFirstName\": this.generalForm.value.firstName,\n        \"employeeGender\": this.generalForm.value.employeeGender,\n        \"employeeLastName\": this.generalForm.value.lastName,\n        \"employeeLocation\": this.companyInfoForm.value.workLocation,\n        \"employeeMiddleName\": null,\n        \"gemsDepartment\": this.selectedDepartment,\n        \"gemsDesignation\": this.companyInfoForm.value.designation,\n        \"gemsEmployeeContactDetail\": null,\n        \"bloodGroup\": this.generalForm.value.bloodGroup,\n        \"gemsEmployeeMasterId\": null,\n        \"gemsEmployeeShiftDetail\": this.companyInfoForm.value.employeeShift,\n        \"gemsOrganisation\": this.companyInfoForm.value.designation.gemsOrganisation,\n        'gemsUserMaster': {\n          \"gemsRoleMaster\":\n            this.companyInfoForm.value.role,\n          \"profileImgData\": this.profileImgData,\n        },\n        'isActive': true,\n        'isRequiredLogin': true,\n        \"leaveAllocationStatus\": null,\n        \"leaveApproveNotification\": true,\n        'leaveStatusNotification': true,\n        \"maritalStatus\": null,\n        \"officeContactNumber\": this.generalForm.value.contactNo,\n        \"officialEmailid\": this.companyInfoForm.value.companyMailId,\n        \"panCardNumber\": null,\n        \"personalContactNumber\": this.generalForm.value.contactNo,\n        \"personalEmailId\": this.generalForm.value.personalEmailId,\n        \"pfAccountNumber\": null,\n        \"requiredLogin\": 0,\n        \"roleMasterId\": null,\n        \"selectedUser\": \"\",\n        'ssnNumber': null,\n        'updatedBy': this.encryptdecryptlocalstorage.getLocalStorage('employeeId'),\n        \"updatedOn\": new Date(),\n      }\n      this.genericservice.post(this.saveEmployeeURL, requestPayload, false).subscribe(response => {\n        this.employees = response.data;\n        this.userId = response.data.gemsUserMaster.gemsUserMasterId;\n        if (this.userId) { this.profile(); }\n      });\n    }\n    else if (this.companyInfoForm.invalid) {\n      return;\n    }\n\n  }\n  saveContact() {\n    var reqPayload;\n    if (this.isSameAddress) {\n      reqPayload = {\n        \"correspondenseAddressCity\": this.generalForm.value.curCity,\n        \"correspondenseAddressCountry\": this.generalForm.value.curCountry,\n        \"correspondenseAddressState\": this.generalForm.value.curState,\n        \"correspondenseAddressStreet1\": this.generalForm.value.curDoorNo,\n        \"correspondenseAddressStreet2\": this.generalForm.value.curStreet,\n        \"correspondenseAddressZipCode\": this.generalForm.value.curPincode,\n        \"gemsEmployeeMaster\": this.employees,\n        \"gemsEmployeeMasterId\": null,\n        \"isActive\": true,\n        \"permanentAddressCity\": this.generalForm.value.curCity,\n        \"permanentAddressCountry\": this.generalForm.value.curCountry,\n        \"permanentAddressState\": this.generalForm.value.curState,\n        \"permanentAddressStreet1\": this.generalForm.value.curDoorNo,\n        \"permanentAddressStreet2\": this.generalForm.value.curStreet,\n        \"permanentAddressZipCode\": this.generalForm.value.curPincode,\n      }\n    }\n    if (!this.isSameAddress) {\n      reqPayload = {\n        \"correspondenseAddressCity\": this.generalForm.value.curCity,\n        \"correspondenseAddressCountry\": this.generalForm.value.curCountry,\n        \"correspondenseAddressState\": this.generalForm.value.curState,\n        \"correspondenseAddressStreet1\": this.generalForm.value.curDoorNo,\n        \"correspondenseAddressStreet2\": this.generalForm.value.curStreet,\n        \"correspondenseAddressZipCode\": this.generalForm.value.curPincode,\n        \"gemsEmployeeMaster\": this.employees,\n        \"gemsEmployeeMasterId\": null,\n        \"isActive\": true,\n        \"permanentAddressCity\": this.generalForm.value.perCity,\n        \"permanentAddressCountry\": this.generalForm.value.perCountry,\n        \"permanentAddressState\": this.generalForm.value.perState,\n        \"permanentAddressStreet1\": this.generalForm.value.perDoorNo,\n        \"permanentAddressStreet2\": this.generalForm.value.perStreet,\n        \"permanentAddressZipCode\": this.generalForm.value.perPincode,\n      }\n    }\n    this.genericservice.post(this.saveContactURL, reqPayload, false).subscribe(res => {\n      console.log(res);\n      if (res.status.success) {\n        this.dataSharingService.successMessage(res.status.message);\n        this.router.navigate(['/admin/employee']);\n      }\n    })\n  }\n  onSelectFile(event) {\n    if (event.target.files && event.target.files[0]) {\n      this.errorMessage = '';\n      if (event.target.files[0].size <= 300000) {\n        var fileReader: FileReader = new FileReader();\n        this.currentFileUpload = event.target.files[0];\n        fileReader.readAsDataURL(event.target.files[0]); // read file as data url\n        fileReader.onload = (event: any) => { // called once readAsDataURL is completed\n          this.profileImgData = fileReader.result;\n          $('#upload_img').attr('src', this.profileImgData)\n        }\n      }\n      else {\n        this.dataSharingService.failureMessage('Picture size should not excceed 300KB..');\n      }\n    }\n  }\n  inputActive() {\n    $(function () {\n      const inputValueCheck = $(this).val();\n      if (inputValueCheck === '') {\n        $('.form-group').addClass('focused');\n      }\n    });\n\n    $('.form-control').focus(function () {\n      $(this)\n        .parents('.form-group')\n        .addClass('focused');\n    });\n\n    $('.form-control').blur(function () {\n      const inputValue = $(this).val();\n      if (inputValue === '') {\n        $(this).removeClass('filled');\n        $(this)\n          .parents('.form-group')\n          .removeClass('focused');\n      } else {\n        $(this).addClass('filled');\n      }\n    });\n  }\n\n  goToNextTab() {\n    this.submitted = true;\n    if (this.generalForm.valid) {\n      this.errorMessage = '';\n      if (this.profileImgData) {\n        this.profileImgData = this.profileImgData.split(',')[1];\n\n        $('#nav-general-tab').removeClass('active');\n        $('#nav-general').removeClass('active');\n        $('#nav-general').removeClass('show');\n        $('#nav-general').removeClass('h-100');\n        $('#nav-company-info-tab').addClass('active');\n        $('#nav-companyinfo').addClass('active');\n        $('#nav-companyinfo').addClass('show');\n        $('#nav-companyinfo').addClass('h-100');\n      } else {\n        this.errorMessage = 'profile Image is required';\n      }\n    }\n    else if (this.generalForm.invalid) {\n      return;\n    }\n  }\n  onDateOfBirthDate(e) {\n\n    var date = e.year + '-' + e.month + '-' + e.day\n    this.dobDate = this.formatDate(date);\n    this.generalForm.controls['dob'].setValue(this.dobDate);\n  }\n\n  onDateOfJoiningDate(e) {\n    var date = e.year + '-' + e.month + '-' + e.day\n    this.dojDate = this.formatDate(date);\n    this.companyInfoForm.controls['dateofJoining'].setValue(this.dojDate);\n  }\n  resetBirthDate() {\n    this.companyInfoForm.controls['dob'].setValue('')\n  }\n  resetDateOfJoining() {\n    this.companyInfoForm.controls['dateofJoining'].setValue('');\n  }\n\n  formatDate(paramdate) {\n    var date = new Date(paramdate);\n    var months = ['JAN', 'FEB', 'MAR', 'APR', 'MAY',\n      'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'];\n    var day = date.getDate();\n    var year = date.getFullYear();\n    var month = months[date.getMonth()];\n    return day + \" \" + month + \" \" + year;\n  }\n  profile() {\n    this.currentFileUpload = this.currentFileUpload ? this.currentFileUpload : null;\n    if (this.currentFileUpload != null) {\n      return this.genericservice.imageUpload(this.currentFileUpload, this.userId).subscribe(data => {\n        if (data.type == 4) {\n          console.log(data);\n          this.saveContact();\n        }\n      }, error => {\n        console.log(error)\n      })\n    }\n  }\n  onKeyPress(event: any) {\n    const pattern = /[0-9]/;\n    const inputChar = String.fromCharCode(event.charCode);\n    if (event.keyCode !== 8 && !pattern.test(inputChar)) {\n      event.preventDefault();\n    }\n  }\n  setPermissionValues() {\n    console.log('log')\n  }\n\n  resetPermissionForm() {\n  console.log('log')\n  }\n\n\n  autoCompleteCallback1(EventObject) {\n    if (EventObject.data !== undefined) {\n      const doc = new DOMParser().parseFromString(EventObject.data.adr_address, 'text/html');\n      const taglength = doc.activeElement.querySelectorAll('span').length;\n      this.generalForm.controls.curStreet.setValue('');\n      this.generalForm.controls.curCity.setValue('');\n      this.generalForm.controls.curState.setValue('');\n      this.generalForm.controls.curCountry.setValue('');\n      this.generalForm.controls.curPincode.setValue('');\n      for (let K = 0; K < taglength; K++) {\n        const address_object_attribute = doc.activeElement.querySelectorAll('span')[K].getAttribute('class');\n        const addressobject = doc.activeElement.querySelectorAll('span')[K].innerText;\n        if (address_object_attribute === 'locality') {\n          this.generalForm.controls.curCity.setValue(addressobject);\n        }\n        if (address_object_attribute === 'region') {\n          this.generalForm.controls.curState.setValue(addressobject);\n        }\n        if (address_object_attribute === 'postal-code') {\n          this.generalForm.controls.curPincode.setValue(addressobject);\n        }\n        if (address_object_attribute === 'country-name') {\n          this.generalForm.controls.curCountry.setValue(addressobject);\n        }\n        if (address_object_attribute === 'extended-address') {\n          this.generalForm.controls.curStreet.setValue(addressobject);\n        }\n        this.generalForm.controls.curDoorNo.setValue(EventObject.data.formatted_address.split(',')[0]);\n        console.log(EventObject.data.formatted_address);\n      }\n    }\n  }\n\n\n}\n","<ngx-loading-bar [color]=\"'#6747D4'\" [includeSpinner]=\"false\"></ngx-loading-bar>\n<div class=\"dashboard__content\">\n    <h3> Employee</h3>\n    <div class=\"inner__section employee_add__page\">\n        <h5>Edit Employee</h5>\n        <span class=\"icon_arrow_up1\"></span>\n        <div class=\"nav nav-tabs employee__tab mt-4\" id=\"nav-tab\" role=\"tablist\">\n            <a class=\" active ml-0\" id=\"nav-general-tab\" data-toggle=\"tab\" href=\"#nav-general\" role=\"tab\"\n                aria-controls=\"nav-general\" aria-selected=\"true\">\n                <div class=\"steps_num align-self-center\">\n                    <p>1</p>\n                </div>\n                <div class=\" align-self-center\">General <span> -----</span></div>\n            </a>\n\n            <a class=\"\" id=\"nav-company-info-tab\" data-toggle=\"tab\" href=\"#nav-company-info\" role=\"tab\"\n                aria-controls=\"nav-company-info\" (click)=\"goToNextTab()\" aria-selected=\"false\">\n                <div class=\"steps_num align-self-center\">\n                    <p>2</p>\n                </div>\n                <div class=\" align-self-center\">Company Information </div>\n            </a>\n        </div>\n\n        <!-- General Tab Content        -->\n        <div class=\"tab-content employee--input h-100\" id=\"nav-tabContent\">\n            <div class=\"tab-pane fade show active h-100\" id=\"nav-general\" role=\"tabpanel\"\n                aria-labelledby=\"nav-general-tab\">\n                <form [formGroup]=\"generalForm\">\n                    <div class=\"new__organization row mt-lg-2 mx-0\">\n\n                        <div class=\"col-lg-10 pr-lg-5\">\n                            <div class=\"row\">\n                                <div class=\"col-lg-6  pr-lg-5\">\n                                    <div class=\"form-group\">\n                                        <label for=\"\" class=\"form-label\">First Name</label>\n                                        <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" />\n                                        <div *ngIf=\"generalForm.get('lastName').errors \n                                        && (generalForm.get('lastName').dirty\n                                        || generalForm.get('lastName').touched\n                                        || submitted) \" class=\"error error-msg\">\n                                            <div [hidden]=\"!generalForm.get('firstName').errors.required\">\n                                                <small>First Name is required.</small>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-lg-6\">\n                                    <div class=\"form-group\">\n                                        <label for=\"\" class=\"form-label\">Last Name</label>\n                                        <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" />\n                                        <div *ngIf=\"generalForm.get('lastName').errors \n                                        && (generalForm.get('lastName').dirty\n                                        || generalForm.get('lastName').touched\n                                        || submitted) \" class=\"error error-msg\">\n                                            <div [hidden]=\"!generalForm.get('lastName').errors.required\">\n                                                <small>Last Name is required.</small>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-lg-6  pr-lg-5\">\n                                    <div class=\"form-group\">\n                                        <label for=\"\" class=\"form-label\">Date of Birth</label>\n                                        <span data-toggle=\"modal\" data-target=\".bd-example-modal-lg\">\n                                            <input class=\"form-control\" name=\"daterange\" type=\"text\"\n                                                formControlName=\"dob\" (selected)=\"onDateOfBirthDate($event)\">\n                                            <span class=\"calender_icon icon_date_picker\"></span>\n                                        </span>\n                                        <div *ngIf=\"generalForm.get('dob').errors \n                                        && (generalForm.get('dob').dirty\n                                        || generalForm.get('dob').touched \n                                        || submitted) \" class=\"error error-msg\">\n                                            <div [hidden]=\"!generalForm.get('dob').errors.required\">\n                                                <small>Date of Birth is required.</small>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-lg-6\">\n                                    <div class=\"form-group\">\n                                        <label for=\"\" class=\"form-label\">Personal Email ID</label>\n                                        <input type=\"text\" formControlName=\"personalEmailId\" class=\"form-control\">\n                                        <div *ngIf=\"generalForm.get('personalEmailId').errors \n                                        && (generalForm.get('personalEmailId').dirty\n                                        || generalForm.get('personalEmailId').touched \n                                        || submitted) \" class=\"error error-msg\">\n                                            <div [hidden]=\"!generalForm.get('personalEmailId').errors.required\">\n                                                <small>Personal email address is required.</small>\n                                            </div>\n                                            <div [hidden]=\"!generalForm.get('personalEmailId').errors.pattern\">\n                                                <small>Please enter valid email address.</small>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-lg-6  pr-lg-5\">\n                                    <div class=\"form-group\">\n                                        <label for=\"\" class=\"form-label\">Emergency Contact Number</label>\n                                        <input type=\"text\" formControlName=\"emergencyContactNo\"\n                                            (keypress)=\"onKeyPress($event)\" maxlength=\"10\" class=\"form-control\">\n                                        <div *ngIf=\"generalForm.get('emergencyContactNo').errors \n                                                    && (generalForm.get('emergencyContactNo').dirty\n                                                    || generalForm.get('emergencyContactNo').touched \n                                                    || submitted)\" class=\"error error-msg\">\n                                            <div [hidden]=\"!generalForm.get('emergencyContactNo').errors.required\">\n                                                <small>Emergency contact number is required.</small>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-lg-6\">\n                                    <div class=\"form-group\">\n                                        <label for=\"\" class=\"form-label\">Blood Group</label>\n                                        <select class=\"form-control\" formControlName=\"bloodGroup\">\n                                            <option [value]=\"\"></option>\n                                            <option value=\"O-\">O-</option>\n                                            <option value=\"O+\">O+</option>\n                                            <option value=\"A-\">A-</option>\n                                            <option value=\"A+\">A+</option>\n                                            <option value=\"B-\">B-</option>\n                                            <option value=\"B+\">B+</option>\n                                            <option value=\"AB-\">AB-</option>\n                                            <option value=\"AB+\">AB+</option>\n                                        </select>\n                                        <div *ngIf=\"generalForm.get('bloodGroup').errors \n                                        && (generalForm.get('bloodGroup').dirty\n                                        || generalForm.get('bloodGroup').touched \n                                        || submitted)\" class=\"error error-msg\">\n                                            <div [hidden]=\"!generalForm.get('bloodGroup').errors.required \">\n                                                <small>Blood group is required.</small>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-lg-6  pr-lg-5\">\n                                    <div class=\"form-group\">\n                                        <label for=\"\" class=\"form-label\">Contact No</label>\n                                        <input type=\"text\" formControlName=\"contactNo\" (keypress)=\"onKeyPress($event)\"\n                                            maxlength=\"10\" class=\"form-control\" />\n                                        <div *ngIf=\"generalForm.get('contactNo').errors \n                                        && (generalForm.get('contactNo').dirty\n                                        || generalForm.get('contactNo').touched\n                                        || submitted)\" class=\"error error-msg\">\n                                            <div [hidden]=\"!generalForm.get('contactNo').errors.required\">\n                                                <small>Contact number is required.</small>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-lg-3\">\n                                    <div class=\"form-group\">\n                                        <label for=\"\" class=\"form-label\">Gender</label>\n                                        <div class=\"form-group mb-0 quick__apply--type\">\n                                            <div class=\"radio\">\n                                                <input id=\"radio-1\" name=\"employeeGender\"\n                                                    formControlName=\"employeeGender\" value=\"M\" type=\"radio\"\n                                                    [checked]=\"true\">\n                                                <label for=\"radio-1\" class=\"radio-label\">\n                                                    <div class=\"checker\"></div> Male\n                                                </label>\n                                            </div>\n\n                                            <div class=\"radio\">\n                                                <input id=\"radio-2\" name=\"employeeGender\"\n                                                    formControlName=\"employeeGender\" value=\"F\" type=\"radio\">\n                                                <label for=\"radio-2\" class=\"radio-label\">\n                                                    <div class=\"checker\"></div> Female\n                                                </label>\n                                            </div>\n                                        </div>\n                                        <div *ngIf=\"generalForm.get('employeeGender').errors \n                                        && (generalForm.get('employeeGender').dirty\n                                        || generalForm.get('employeeGender').touched \n                                        || submitted)\" class=\"error error-msg\">\n                                            <div [hidden]=\"!generalForm.get('employeeGender').errors.required\">\n                                                <small>Gender is required.</small>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n\n                            </div>\n                        </div>\n                        <div class=\"col-lg-2\">\n                            <div class=\"company__logo d-flex justify-content-center\" id=\"uploadClick\">\n                                <div class=\"upload__logo text-center  align-self-center\">\n                                    <label class=\"fileUpload\">\n                                        <img id=\"upload_img\" src=\"../../../../assets/images/admin/upload-to-cloud.svg\">\n                                        pload Logo\n                                        <input id=\"fileInput\" class=\"custom-file-input\" type=\"file\" for=\"uploadClick\"\n                                            accept=\"image/png,image/jpg\" (change)=\"onSelectFile($event)\">\n                                    </label>\n                                </div>\n\n                            </div>\n                            <p class=\"company__logo--info d-flex mt-2\">Image size should be below 1MB Supported Formats\n                                (.png,\n                                .jpeg)\n                            </p>\n                        </div>\n                        <div class=\"col-lg-12\">\n\n                            <div class=\"row\">\n\n                                <div class=\"col-12\">\n                                    <h6 class=\"text-uppercase\">CURRENT ADDRESS</h6>\n                                </div>\n                                <div class=\"col-lg-4\">\n                                    <ng4geo-autocomplete [userSettings]=\"userSettings\"\n                                        (componentCallback)=\"autoCompleteCallback1($event)\"></ng4geo-autocomplete>\n                                </div>\n                                <div class=\"col-lg-2\">\n                                    <div class=\"form-group\">\n                                        <label for=\"\" class=\"form-label\">Door No.</label>\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"curDoorNo\" />\n                                        <div *ngIf=\"generalForm.get('curDoorNo').errors \n                                        && (generalForm.get('curDoorNo').dirty\n                                        || generalForm.get('curDoorNo').touched \n                                        || submitted)\" class=\"error error-msg\">\n                                            <div [hidden]=\"!generalForm.get('curDoorNo').errors.required\">\n                                                <small>Door no is required.</small>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-lg-3\">\n                                    <div class=\"form-group\">\n                                        <label for=\"\" class=\"form-label\">Street</label>\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"curStreet\" />\n                                        <div *ngIf=\"generalForm.get('curStreet').errors \n                                        && (generalForm.get('curStreet').dirty\n                                        || generalForm.get('curStreet').touched \n                                        || submitted)\" class=\"error error-msg\">\n                                            <div [hidden]=\"!generalForm.get('curStreet').errors.required\">\n                                                <small>Street is required.</small>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-lg-3\">\n                                    <div class=\"form-group\">\n                                        <label for=\"\" class=\"form-label\">City</label>\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"curCity\" />\n                                        <div *ngIf=\"generalForm.get('curCity').errors \n                                        && (generalForm.get('curCity').dirty\n                                        || generalForm.get('curCity').touched \n                                        || submitted)\" class=\"error error-msg\">\n                                            <div [hidden]=\"!generalForm.get('curCity').errors.required\">\n                                                <small>City is required.</small>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-lg-4\">\n                                    <div class=\"form-group\">\n                                        <label for=\"\" class=\"form-label\">State</label>\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"curState\" />\n                                        <div *ngIf=\"generalForm.get('curState').errors \n                                        && (generalForm.get('curState').dirty\n                                        || generalForm.get('curState').touched \n                                        || submitted)\" class=\"error error-msg\">\n                                            <div [hidden]=\"!generalForm.get('curState').errors.required\">\n                                                <small>State is required.</small>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class=\"col-lg-4\">\n                                    <div class=\"form-group\">\n                                        <label for=\"\" class=\"form-label\">Pincode</label>\n                                        <input type=\"text\" class=\"form-control\" (keypress)=\"onKeyPress($event)\" formControlName=\"curPincode\" maxlength=\"6\" />\n                                        <div *ngIf=\"generalForm.get('curPincode').errors \n                                        && (generalForm.get('curPincode').dirty\n                                        || generalForm.get('curPincode').touched \n                                        || submitted)\" class=\"error error-msg\">\n                                            <div [hidden]=\"!generalForm.get('curPincode').errors.required\">\n                                                <small>Pincode is required.</small>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-lg-4\">\n                                    <div class=\"form-group\">\n                                        <label for=\"\" class=\"form-label\">Country</label>\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"curCountry\" />\n                                        <div *ngIf=\"generalForm.get('curCountry').errors \n                                        && (generalForm.get('curCountry').dirty\n                                        || generalForm.get('curCountry').touched \n                                        || submitted)\" class=\"error error-msg\">\n                                            <div [hidden]=\"!generalForm.get('curCountry').errors.required\">\n                                                <small>Country is required.</small>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-12\">\n                                    <div class=\"d-flex\">\n                                        <h6 class=\"text-uppercase align-self-center mb-0 pr-3\"> PERMANENT ADDRESS </h6>\n                                        <div class=\"form-group align-self-center\">\n                                            <div class=\"custom-control custom-checkbox\">\n                                                <input type=\"checkbox\" class=\"custom-control-input\"\n                                                    id=\"attendance__requests\" [checked]=\"isSameAddress\"\n                                                    (change)=\"checkSameAddress($event)\">\n                                                <label class=\"custom-control-label\" for=\"attendance__requests\"> <span\n                                                        class=\"attendance__requests\">Same as Current\n                                                        Address</span></label>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div *ngIf=\"!isSameAddress\" class=\"col-12 permanent__address\">\n                                    <div class=\"col-lg-2\">\n                                        <div class=\"form-group\">\n                                            <label for=\"\" class=\"form-label\">Door No.</label>\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"perDoorNo\" />\n                                            <!-- <div *ngIf=\"generalForm.get('perDoorNo').errors \n                                            && (generalForm.get('perDoorNo').dirty\n                                            || generalForm.get('perDoorNo').touched \n                                            || submitted)\" class=\"error error-msg\">\n                                                <div [hidden]=\"!generalForm.get('perDoorNo').errors.required\">\n                                                    <small>Door no is required.</small>\n                                                </div>\n                                            </div> -->\n                                        </div>\n                                    </div>\n                                    <div class=\"col-lg-7\">\n                                        <div class=\"form-group\">\n                                            <label for=\"\" class=\"form-label\">Street</label>\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"perStreet\" />\n                                            <!-- <div *ngIf=\"generalForm.get('perStreet').errors \n                                            && (generalForm.get('perStreet').dirty\n                                            || generalForm.get('perStreet').touched \n                                            || submitted)\"  class=\"error error-msg\">\n                                                <div [hidden]=\"!generalForm.get('perStreet').errors.required\">\n                                                    <small>Street is required.</small>\n                                                </div>\n                                            </div> -->\n                                        </div>\n                                    </div>\n                                    <div class=\"col-lg-3\">\n                                        <div class=\"form-group\">\n                                            <label for=\"\" class=\"form-label\">City</label>\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"perCity\" />\n                                            <!-- <div *ngIf=\"generalForm.get('perCity').errors \n                                            && (generalForm.get('perCity').dirty\n                                            || generalForm.get('perCity').touched \n                                            || submitted)\" class=\"error error-msg\">\n                                                <div [hidden]=\"!generalForm.get('perCity').errors.required\">\n                                                    <small>City is required.</small>\n                                                </div>\n                                            </div> -->\n                                        </div>\n                                    </div>\n                                    <div class=\"col-lg-4\">\n                                        <div class=\"form-group\">\n                                            <label for=\"\" class=\"form-label\">State</label>\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"perState\" />\n                                            <!-- <div *ngIf=\"generalForm.get('perState').errors \n                                            && (generalForm.get('perState').dirty\n                                            || generalForm.get('perState').touched \n                                            || submitted)\" class=\"error error-msg\">\n                                                <div [hidden]=\"!generalForm.get('perState').errors.required\">\n                                                    <small>State is required.</small>\n                                                </div>\n                                            </div> -->\n                                        </div>\n                                    </div>\n\n                                    <div class=\"col-lg-4\">\n                                        <div class=\"form-group\">\n                                            <label for=\"\" class=\"form-label\">Pincode</label>\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"perPincode\" (keypress)=\"onKeyPress($event)\" />\n                                            <!-- <div *ngIf=\"generalForm.get('perPincode').errors \n                                            && (generalForm.get('perPincode').dirty\n                                            || generalForm.get('perPincode').touched \n                                            || submitted)\" class=\"error error-msg\">\n                                                <div [hidden]=\"!generalForm.get('perPincode').errors.required\">\n                                                    <small>Pincode is required.</small>\n                                                </div>\n                                            </div> -->\n                                        </div>\n                                    </div>\n                                    <div class=\"col-lg-4\">\n                                        <div class=\"form-group\">\n                                            <label for=\"\" class=\"form-label\">Country</label>\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"perCountry\" />\n                                            <!-- <div *ngIf=\"generalForm.get('perCountry').errors \n                                            && (generalForm.get('perCountry').dirty\n                                            || generalForm.get('perCountry').touched \n                                            || submitted)\"\n                                                class=\"error error-msg\">\n                                                <div [hidden]=\"!generalForm.get('perCountry').errors.required\">\n                                                    <small>Country is required.</small>\n                                                </div> \n                                            </div> -->\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"col-12\">\n                                <div class=\"bottom__btn mt-0\">\n                                    <button class=\"btn btn-primary cancel\" type=\"submit\"\n                                        [routerLink]=\"['/admin/employee']\">Cancel</button>\n                                    <button class=\"btn btn-primary submit\" data-target=\"#nav-company-info\"\n                                        type=\"submit\"><a (click)=\"goToNextTab()\" data-toggle=\"tab\">Next</a></button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n\n            <div class=\"tab-pane fade\" id=\"nav-companyinfo\" role=\"tabpanel\" aria-labelledby=\"nav-company-info-tab\">\n                <form [formGroup]=\"companyInfoForm\">\n                    <div class=\"row px-2 mt-3\">\n                        <div class=\"col-md-4\">\n                            <div class=\"form-group\">\n                                <label class=\"form-label\">Attendance ID</label>\n                                <input type=\"text\" formControlName=\"attendanceId\" class=\"form-control\" />\n                                <div *ngIf=\"companyInfoForm.get('attendanceId').errors \n                                && (companyInfoForm.get('attendanceId').dirty\n                                || companyInfoForm.get('attendanceId').touched \n                                || submittedBtn2)\" class=\"error error-msg\">\n                                    <div [hidden]=\"!companyInfoForm.get('attendanceId').errors.required\">\n                                        <small>Attendance id is required.</small>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                            <div class=\"form-group\">\n                                <label for=\"\" class=\"form-label\">Date of Joining</label>\n                                <!-- <div class=\"input-group\"> -->\n                                <span data-toggle=\"modal\" data-target=\".doj-example-modal-lg\">\n                                    <input class=\"form-control\" name=\"dateofJoining\" type=\"text\"\n                                        formControlName=\"dateofJoining\" (selected)=\"onDateOfJoiningDate($event)\">\n                                    <span class=\"calender_icon icon_date_picker\"></span>\n                                </span>\n                                <div *ngIf=\"companyInfoForm.get('dateofJoining').errors \n                                && (companyInfoForm.get('dateofJoining').dirty\n                                || companyInfoForm.get('dateofJoining').touched \n                                || submittedBtn2)\" class=\"error error-msg\">\n                                    <div [hidden]=\"!companyInfoForm.get('dateofJoining').errors.required\">\n                                        <small>Join date is required.</small>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <!-- </div> -->\n                        <div class=\"col-md-4\">\n                            <div class=\"form-group\">\n                                <label class=\"form-label\">Work Location</label>\n                                <input type=\"text\" formControlName=\"workLocation\" class=\"form-control\" />\n                                <div *ngIf=\"companyInfoForm.get('workLocation').errors \n                                && (companyInfoForm.get('workLocation').dirty\n                                || companyInfoForm.get('workLocation').touched \n                                || submittedBtn2)\" class=\"error error-msg\">\n                                    <div [hidden]=\"!companyInfoForm.get('workLocation').errors.required\">\n                                        <small>Work location is required.</small>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                            <div class=\"form-group\">\n                                <label class=\"form-label\">Department</label>\n                                <select class=\"form-control\" formControlName=\"department\"\n                                    (ngModelChange)=\"getDesignationByDepartment($event)\">\n                                    <option [value]=\"\"></option>\n                                    <option *ngFor=\"let department of departmentList\"\n                                        [value]=\"department.gemsDepartmentId\" >\n                                        {{department.departmentName}}</option>\n                                </select>\n                                <div *ngIf=\"companyInfoForm.get('department').errors \n                                && (companyInfoForm.get('department').dirty\n                                || companyInfoForm.get('department').touched \n                                || submittedBtn2)\" class=\"error error-msg\">\n                                    <div [hidden]=\"!companyInfoForm.get('department').errors.required\">\n                                        <small>Department is required.</small>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                            <div class=\"form-group\">\n                                <label class=\"form-label\">Designation</label>\n                                <select class=\"form-control\" formControlName=\"designation\">\n                                    <option [value]=\"\"></option>\n                                    <option *ngFor=\"let designation of designations\"\n                                        [value]=\"designation.gemsDesignationId\" >\n                                        {{designation.gemsDesignationName}}\n                                    </option>\n                                </select>\n                                <div *ngIf=\"companyInfoForm.get('designation').errors \n                                && (companyInfoForm.get('designation').dirty\n                                || companyInfoForm.get('designation').touched \n                                || submittedBtn2)\" class=\"error error-msg\">\n                                    <div [hidden]=\"!companyInfoForm.get('designation').errors.required\">\n                                        <small>Designation is required.</small>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                            <div class=\"form-group\">\n                                <label class=\"form-label\">Role</label>\n                                <select class=\"form-control\" formControlName=\"role\">\n                                    <option [value]=\"\"></option>\n                                    <option *ngFor=\"let role of roleList\" [value]=\"role.gemsRoleMasterId\">\n                                        {{role.roleName}}\n                                    </option>\n                                </select>\n                                <div *ngIf=\"companyInfoForm.get('role').errors \n                                && (companyInfoForm.get('role').dirty\n                                || companyInfoForm.get('role').touched \n                                || submittedBtn2)\" class=\"error error-msg\">\n                                    <div [hidden]=\"!companyInfoForm.get('role').errors.required\">\n                                        <small>Role is required.</small>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                            <div class=\"form-group\">\n                                <label class=\"form-label\">Reporting Manager</label>\n                                <select class=\"form-control\" formControlName=\"reportingManager\">\n                                    <option [value]=\"\"></option>\n                                    <option *ngFor=\"let employee of employeeList\"\n                                        [value]=\"employee.gemsEmployeeMasterId\" >\n                                        {{employee.employeeFirstName}} ({{employee.employeeCode}})\n                                    </option>\n                                </select>\n                                <div *ngIf=\"companyInfoForm.get('reportingManager').errors \n                                && (companyInfoForm.get('reportingManager').dirty\n                                || companyInfoForm.get('reportingManager').touched \n                                || submittedBtn2)\" class=\"error error-msg\">\n                                    <div [hidden]=\"!companyInfoForm.get('reportingManager').errors.required\">\n                                        <small>Reporting manager is required.</small>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                            <div class=\"form-group\">\n                                <label class=\"form-label\">Employee Shift</label>\n                                <select class=\"form-control\" formControlName=\"employeeShift\">\n                                    <option [value]=\"\"></option>\n                                    <option *ngFor=\"let shift of shifts\" [value]=\"shift.shiftDetailId\">{{shift.shiftName}}\n                                    </option>\n                                </select>\n                                <div *ngIf=\"companyInfoForm.get('employeeShift').errors \n                                && (companyInfoForm.get('employeeShift').dirty\n                                || companyInfoForm.get('employeeShift').touched \n                                || submittedBtn2)\" class=\"error error-msg\">\n                                    <div [hidden]=\"!companyInfoForm.get('employeeShift').errors.required\">\n                                        <small>Employee shift is required.</small>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                            <div class=\"form-group\">\n                                <label class=\"form-label\">Company Email ID</label>\n                                <input type=\"text\" formControlName=\"companyMailId\" class=\"form-control\" />\n                                <div *ngIf=\"companyInfoForm.get('companyMailId').errors \n                                && (companyInfoForm.get('companyMailId').dirty\n                                || companyInfoForm.get('companyMailId').touched \n                                || submittedBtn2)\" class=\"error error-msg\">\n                                    <div [hidden]=\"!companyInfoForm.get('companyMailId').errors.required\">\n                                        <small>Company email address is required.</small>\n                                    </div>\n                                    <div [hidden]=\"!companyInfoForm.get('companyMailId').errors.pattern\">\n                                        <small>Please enter valid email address.</small>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                            <div class=\"form-group\">\n                                <label class=\"form-label\">Employee Code</label>\n                                <input type=\"text\" formControlName=\"employeeCode\" class=\"form-control\" />\n                                <div *ngIf=\"companyInfoForm.get('employeeCode').errors \n                                && (companyInfoForm.get('employeeCode').dirty\n                                || companyInfoForm.get('employeeCode').touched \n                                || submittedBtn2)\" class=\"error error-msg\">\n                                    <div [hidden]=\"!companyInfoForm.get('employeeCode').errors.required\">\n                                        <small>Employee code is required.</small>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                            <div class=\"form-group\">\n                                <label class=\"form-label\">Employee Status</label>\n                                <select class=\"form-control\" formControlName=\"employeeStatus\">\n                                    <option [value]=\"\"></option>\n                                    <option *ngFor=\"let status of employeeStatusList\"\n                                        [value]=\"status.gemsEmploymentStatusId\" >\n                                        {{status.statusDescription}}\n                                    </option>\n                                </select>\n                                <div *ngIf=\"companyInfoForm.get('employeeStatus').errors \n                                && (companyInfoForm.get('employeeStatus').dirty\n                                || companyInfoForm.get('employeeStatus').touched \n                                || submittedBtn2)\" class=\"error error-msg\">\n                                    <div [hidden]=\"!companyInfoForm.get('employeeStatus').errors.required\">\n                                        <small>Employee status is required.</small>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n                </form>\n                <div class=\"row justify-content-end mx-0 px-0 mt-4\">\n                    <div class=\"col-6  text-right time__submit\">\n                        <button type=\"button\" class=\"btn cancel-button\"\n                            [routerLink]=\"['/admin/employee']\">Cancel</button>\n                        <button type=\"button\" (click)=\"submitGeneralForm()\"\n                            class=\"btn theme__btn btn-hover color-3\">Save</button>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<!-- Date Of Birth DatePicker -->\n\n<div class=\"modal fade bd-example-modal-lg\" tabindex=\"-1\" id=\"dobmodel\" role=\"dialog\"\n    aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\" data-backdrop=\"static\" data-keyboard=\"false\">\n    <div class=\"modal-dialog modal-lg modal-dialog-centered permissionModel\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header row mx-0 px-0 mt-3 date__picker--header\">\n                <div class=\"col-md-4 align-self-center time__title\">\n\n                </div>\n\n                <div class=\"col-md-8 float-right text-right datePicker__header--right align-self-center\">\n                    <a class=\"reset-permission  align-self-center\" href=\"javascript:void(0);\"\n                        (click)=\"resetDateOfBirth()\">Reset</a>\n                    <span class=\"pl-2 ml-2 permissionDate  align-self-center\"><span class=\"icon_date_picker\"></span>\n                        {{dobDate}}</span>\n                    <span class=\"pl-2 ml-2 permissionStartTimepicker  text-right  align-self-center\"><span\n                            class=\"icon_time  align-self-center\"></span>\n                    </span>\n\n                </div>\n            </div>\n            <div class=\"row justify-content-center px-0 mx-0\">\n                <div class=\"col-7 text-center\">\n                    <ngb-datepicker #d (select)=\"onDateOfBirthDate($event)\" [maxDate]=\"maxDate\" class=\"date__table\">\n                    </ngb-datepicker>\n                </div>\n\n\n            </div>\n\n            <div class=\"row justify-content-end mx-0 px-0 mb-5\">\n                <div class=\"col-6  text-right time__submit\">\n                    <button type=\"button\" class=\"btn cancel-button\" data-dismiss=\"modal\">Cancel</button>\n                    <button type=\"button\" class=\"btn theme__btn btn-hover color-3\" data-dismiss=\"modal\">Done</button>\n                </div>\n\n            </div>\n\n        </div>\n    </div>\n</div>\n\n\n<!-- Date Of Joining DatePicker -->\n\n<div class=\"modal fade doj-example-modal-lg\" tabindex=\"-1\" id=\"dobmodel\" role=\"dialog\"\n    aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\" data-backdrop=\"static\" data-keyboard=\"false\">\n    <div class=\"modal-dialog modal-lg modal-dialog-centered permissionModel\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header row mx-0 px-0 mt-3 date__picker--header\">\n                <div class=\"col-md-4 align-self-center time__title\">\n\n                </div>\n\n                <div class=\"col-md-8 float-right text-right datePicker__header--right align-self-center\">\n                    <a class=\"reset-permission  align-self-center\" href=\"javascript:void(0);\"\n                        (click)=\"resetDateOfJoining()\">Reset</a>\n                    <span class=\"pl-2 ml-2 permissionDate  align-self-center\"><span class=\"icon_date_picker\"></span>\n                        {{dojDate}}</span>\n                    <span class=\"pl-2 ml-2 permissionStartTimepicker  text-right  align-self-center\"><span\n                            class=\"icon_time  align-self-center\"></span>\n                    </span>\n\n                </div>\n            </div>\n            <div class=\"row justify-content-center px-0 mx-0\">\n                <div class=\"col-7 text-center\">\n                    <ngb-datepicker #d (select)=\"onDateOfJoiningDate($event)\" [maxDate]=\"maxDate\" class=\"date__table\">\n                    </ngb-datepicker>\n                </div>\n\n\n            </div>\n\n            <div class=\"row justify-content-end mx-0 px-0 mb-5\">\n                <div class=\"col-6  text-right time__submit\">\n                    <button type=\"button\" class=\"btn cancel-button\" data-dismiss=\"modal\">Cancel</button>\n                    <button type=\"button\" class=\"btn theme__btn btn-hover color-3\" data-dismiss=\"modal\">Done</button>\n                </div>\n\n            </div>\n\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n// import { NgbDateStruct, NgbCalendar } from '@ng-bootstrap/ng-bootstrap';\nimport { Genericservice } from 'src/app/services/genericservices';\nimport { LoadingBarService } from '@ngx-loading-bar/core';\nimport { UrlConstant } from 'src/app/services/urlConstant';\nimport { EncryptDecryptLocalStorageService } from 'src/app/services/encrypt-decrypt-localstorage.service';\nimport { NgbDate, NgbCalendar } from '@ng-bootstrap/ng-bootstrap';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { DataSharingService } from 'src/app/services/dataSharing.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-edit-employee',\n  templateUrl: './edit-employee.component.html',\n  styleUrls: ['./edit-employee.component.scss']\n})\nexport class EditEmployeeComponent implements OnInit {\n\n  public generalForm: FormGroup;\n  isSameAddress: boolean = true;\n  // model: NgbDateStruct;\n  date: { year: number, month: number };\n  departmentListURL = UrlConstant.departmentlistApi;\n  designationListURL = UrlConstant.designationlistApi;\n  getEmployeeListURL = UrlConstant.getEmployeeListApi;\n  saveEmployeeURL = UrlConstant.saveEmployeeApi;\n  roleListURL = UrlConstant.rolelistApi;\n  shiftListURL = UrlConstant.shiftlistApi;\n  employeeStatusListURL = UrlConstant.employeeStatusListApi;\n  getEmployeeByIdURL = UrlConstant.getEmployeeByIdApi;\n  getEmployeeContactByIdURL = UrlConstant.getEmployeeContactByIdApi;\n  saveContactURL = UrlConstant.saveContactApi;\n  departmentList: any = [];\n  designations: any = [];\n  public companyInfoForm: FormGroup;\n  selectedDepartment: any = [];\n  designationsList: any[] = [];\n  roleList: any = [];\n  shifts: any = [];\n  employees: any = [];\n  profileImgData: any;\n  currentFileUpload: File;\n  reportingManager: any;\n  employeeStatusList: any = [];\n  orgId: any;\n  dobDate = 'DATE';\n  dojDate = 'DATE';\n  userId: any;\n  editEmployeeMasterId: any;\n  employeeMaster: any;\n  employeeContactMaster: any;\n  employeeList: any = [];\n  Date = new Date();\n  maxDate: any;\n  submitted: boolean = false;\n  submittedBtn2: boolean = false;\n  userSettings ={\n    'showCurrentLocation': false,\n    'inputPlaceholderText': 'Search Your Address',\n    'showSearchButton': false\n  }\n  emailRegex = '^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$';\n\n  constructor(private calendar: NgbCalendar,\n    private domSanitizer: DomSanitizer,\n    private encryptdecryptlocalstorage: EncryptDecryptLocalStorageService,\n    private genericservice: Genericservice,\n    private loadingBar: LoadingBarService, private router: Router,\n    private dataSharingService: DataSharingService) {\n    this.maxDate = { year: this.Date.getFullYear(), \"month\": this.Date.getMonth() + 1, \"day\": this.Date.getDate() };\n    this.editEmployeeMasterId = this.encryptdecryptlocalstorage.getLocalStorage('editEmpId');\n  }\n\n  ngOnInit() {\n    this.orgId = this.encryptdecryptlocalstorage.getLocalStorage('organizationId');\n    this.createForms();\n    this.subcribeForm();\n    this.getDepartments();\n    this.getDesignations();\n    this.getRoles();\n    this.getShifts();\n    this.getEmployees();\n    this.getEmployeeStatus();\n    this.inputActive();\n    this.removeclass();\n    this.getEmployeeById();\n\n  }\n\n  subcribeForm() {\n    this.generalForm.valueChanges.subscribe(value => {\n      console.log(value);\n\n    })\n    this.companyInfoForm.valueChanges.subscribe(value => {\n      console.log(value);\n    })\n  }\n\n  getEmployeeById() {\n    let employeePayload = {\n      \"gemsEmployeeMasterId\": this.editEmployeeMasterId\n    }\n    this.genericservice.post(this.getEmployeeByIdURL, employeePayload, false).subscribe(res => {\n      console.log(res.data);\n      this.employeeMaster = res.data;\n      this.generalForm.controls['firstName'].setValue(this.employeeMaster.employeeFirstName);\n      this.generalForm.controls['lastName'].setValue(this.employeeMaster.employeeLastName);\n      this.generalForm.controls['dob'].setValue(this.employeeMaster.employeeDob);\n      this.generalForm.controls['personalEmailId'].setValue(this.employeeMaster.personalEmailId);\n      this.generalForm.controls['emergencyContactNo'].setValue(this.employeeMaster.emergencyContactNumber);\n      this.generalForm.controls['bloodGroup'].setValue(this.employeeMaster.bloodGroup);\n      this.generalForm.controls['contactNo'].setValue(this.employeeMaster.personalContactNumber);\n      this.generalForm.controls['employeeGender'].setValue(this.employeeMaster.employeeGender);\n      if (this.employeeMaster.employeeGender) {\n        if (this.employeeMaster.employeeGender.toLowerCase() == 'm') {\n          document.getElementById('radio-2')['checked'] = 0;\n          document.getElementById('radio-1')['checked'] = 1;\n\n        }\n        if (this.employeeMaster.employeeGender.toLowerCase() == 'f') {\n          document.getElementById('radio-2')['checked'] = 1;\n          document.getElementById('radio-1')['checked'] = 0;\n        }\n      }\n\n      this.companyInfoForm.controls['attendanceId'].setValue(this.employeeMaster.attendanceId);\n      this.companyInfoForm.controls['dateofJoining'].setValue(this.employeeMaster.dateOfJoining);\n      this.companyInfoForm.controls['workLocation'].setValue(this.employeeMaster.employeeLocation);\n      this.companyInfoForm.controls['department'].setValue(this.employeeMaster.gemsDepartment?this.employeeMaster.gemsDepartment.gemsDepartmentId:'');\n      this.companyInfoForm.controls['designation'].setValue(this.employeeMaster.gemsDesignation ? this.employeeMaster.gemsDesignation.gemsDesignationId : '');\n      this.companyInfoForm.controls['role'].setValue(this.employeeMaster.gemsUserMaster.gemsRoleMaster?this.employeeMaster.gemsUserMaster.gemsRoleMaster.gemsRoleMasterId:'');\n      this.companyInfoForm.controls['gemsUserMaster'].setValue(this.employeeMaster.gemsUserMaster);\n      this.companyInfoForm.controls['reportingManager'].setValue(this.employeeMaster.currentReportingTo ? this.employeeMaster.currentReportingTo.gemsEmployeeMasterId : '');\n      this.companyInfoForm.controls['employeeShift'].setValue(this.employeeMaster.gemsEmployeeShiftDetail?this.employeeMaster.gemsEmployeeShiftDetail.shiftDetailId:'');\n      this.companyInfoForm.controls['companyMailId'].setValue(this.employeeMaster.officialEmailid);\n      this.companyInfoForm.controls['employeeCode'].setValue(this.employeeMaster.employeeCode);\n      this.companyInfoForm.controls['employeeStatus'].setValue(this.employeeMaster.currentEmployeeStatus.gemsEmploymentStatusId);\n      this.companyInfoForm.controls['gemsEmployeeMasterId'].setValue(this.employeeMaster.gemsEmployeeMasterId);\n      this.companyInfoForm.controls['gemsOrganisation'].setValue(this.employeeMaster.gemsOrganisation);\n      console.log(this.companyInfoForm.controls);\n\n      this.profileImgData = this.employeeMaster.gemsUserMaster.profileImgData ? 'data:image/jpg;base64,' +\n        this.employeeMaster.gemsUserMaster.profileImgData :\n        '../../../../assets/images/admin/upload-to-cloud.svg';\n      $('#upload_img').attr('src', this.profileImgData);\n      this.genericservice.post(this.getEmployeeContactByIdURL, this.employeeMaster, false).subscribe(response => {\n        this.employeeContactMaster = response.data;\n        this.generalForm.controls['curDoorNo'].setValue(this.employeeContactMaster ? this.employeeContactMaster.correspondenseAddressStreet1 : '');\n        this.generalForm.controls['curStreet'].setValue(this.employeeContactMaster ? this.employeeContactMaster.correspondenseAddressStreet2 : '');\n        this.generalForm.controls['curCity'].setValue(this.employeeContactMaster ? this.employeeContactMaster.correspondenseAddressCity : '');\n        this.generalForm.controls['curCountry'].setValue(this.employeeContactMaster ? this.employeeContactMaster.correspondenseAddressCountry : '');\n        this.generalForm.controls['curState'].setValue(this.employeeContactMaster ? this.employeeContactMaster.correspondenseAddressState : '');\n        this.generalForm.controls['curPincode'].setValue(this.employeeContactMaster ? this.employeeContactMaster.correspondenseAddressZipCode : '');\n        this.generalForm.controls['perDoorNo'].setValue(this.employeeContactMaster ? this.employeeContactMaster.permanentAddressStreet1 : '');\n        this.generalForm.controls['perStreet'].setValue(this.employeeContactMaster ? this.employeeContactMaster.permanentAddressStreet2 : '');\n        this.generalForm.controls['perCity'].setValue(this.employeeContactMaster ? this.employeeContactMaster.permanentAddressCity : '');\n        this.generalForm.controls['perCountry'].setValue(this.employeeContactMaster ? this.employeeContactMaster.permanentAddressCountry : '');\n        this.generalForm.controls['perState'].setValue(this.employeeContactMaster ? this.employeeContactMaster.permanentAddressState : '');\n        this.generalForm.controls['perPincode'].setValue(this.employeeContactMaster ? this.employeeContactMaster.permanentAddressZipCode : '');\n        this.generalForm.controls['gemsEmployeeMasterId'].setValue(this.employeeContactMaster ? this.employeeContactMaster.gemsEmployeeMasterId : '');\n        console.log(this.generalForm.controls);\n\n      })\n\n\n    })\n  }\n  removeclass() {\n    $(function () {\n      $(\".select__date\").on(\"click\", function (e) {\n        $('.main').addClass(\"wide\");\n        $('.daterangepicker').addClass(\"active\");\n        e.stopPropagation()\n      });\n      $(document).on(\"click\", function (e) {\n        if ($(e.target).is(\".daterangepicker\") === false) {\n          $(\".main\").removeClass(\"wide\");\n          $(\".daterangepicker\").removeClass(\"active\");\n        }\n      });\n    });\n  }\n  createForms() {\n    this.generalForm = new FormGroup({\n      firstName: new FormControl('', [Validators.required]),\n      lastName: new FormControl('', [Validators.required]),\n      dob: new FormControl('', [Validators.required]),\n      personalEmailId: new FormControl('', [Validators.required,Validators.pattern(this.emailRegex)]),\n      emergencyContactNo: new FormControl('', [Validators.required]),\n      bloodGroup: new FormControl('', [Validators.required]),\n      contactNo: new FormControl('', [Validators.required]),\n      employeeGender: new FormControl('', [Validators.required]),\n      curDoorNo: new FormControl('', [Validators.required]),\n      curStreet: new FormControl('', [Validators.required]),\n      curCity: new FormControl('', [Validators.required]),\n      curCountry: new FormControl('', [Validators.required]),\n      curState: new FormControl('', [Validators.required]),\n      curPincode: new FormControl('', [Validators.required]),\n      perDoorNo: new FormControl(''),\n      perStreet: new FormControl(''),\n      perCity: new FormControl(''),\n      perCountry: new FormControl(''),\n      perState: new FormControl(''),\n      perPincode: new FormControl(''),\n      gemsEmployeeMasterId: new FormControl(''),\n\n\n    });\n    this.companyInfoForm = new FormGroup({\n      attendanceId: new FormControl('', [Validators.required]),\n      dateofJoining: new FormControl('', [Validators.required]),\n      workLocation: new FormControl('', [Validators.required]),\n      department: new FormControl('', [Validators.required]),\n      designation: new FormControl('', [Validators.required]),\n      role: new FormControl('', [Validators.required]),\n      reportingManager: new FormControl('', [Validators.required]),\n      employeeShift: new FormControl('', [Validators.required]),\n      companyMailId: new FormControl('', [Validators.required, Validators.pattern(this.emailRegex)]),\n      employeeCode: new FormControl('', [Validators.required]),\n      employeeStatus: new FormControl('', [Validators.required]),\n      gemsEmployeeMasterId: new FormControl(''),\n      gemsUserMaster: new FormControl(''),\n      gemsOrganisation: new FormControl('')\n\n    })\n  }\n  checkSameAddress(event) {\n    this.isSameAddress = event.target.checked === true ? true : false;\n  }\n\n  getDepartments() {\n    let requestPayload = {\n      \"gemsOrganisation\": {\n        \"gemsOrgId\": this.orgId\n      }\n    }\n    this.genericservice.post(this.departmentListURL, requestPayload, false).subscribe(response => {\n      this.departmentList = response.data;\n    });\n\n  }\n  getDesignations() {\n    let requestPayload = {\n      \"gemsOrganisation\": {\n        \"gemsOrgId\": this.orgId\n      }\n    }\n    this.genericservice.post(this.designationListURL, requestPayload, false).subscribe(response => {\n      this.designationsList = response.data;\n    })\n  }\n  getDesignationByDepartment(department) {\n    this.designations = [];\n    for (let obj of this.designationsList) {\n      if (obj.gemsDepartment.gemsDepartmentId === department) {\n        this.designations.push(obj);\n      }\n    }\n\n  }\n\n  getRoles() {\n    let requestPayload = {\n      \"gemsOrganisation\": {\n        \"gemsOrgId\": this.orgId\n      }\n    }\n    this.genericservice.post(this.roleListURL, requestPayload, false).subscribe(response => {\n      this.roleList = response.data;\n    })\n\n  }\n  getShifts() {\n    let requestPayload = {\n      \"gemsOrganisation\": {\n        \"gemsOrgId\": this.orgId\n      }\n    }\n    this.genericservice.post(this.shiftListURL, requestPayload, false).subscribe(response => {\n      this.shifts = response.data;\n    })\n  }\n  getEmployees() {\n    let requestPayload = {\n      \"gemsOrganisationId\": this.orgId,\n      \"isActive\": true\n    }\n    this.genericservice.post(this.getEmployeeListURL, requestPayload, false).subscribe(response => {\n      this.employeeList = response.data;\n    })\n  }\n  getEmployeeStatus() {\n    let requestPayload = {\n      \"gemsOrganisationId\": this.orgId,\n      \"isActive\": true\n    }\n    this.genericservice.post(this.employeeStatusListURL, requestPayload, false).subscribe(response => {\n      this.employeeStatusList = response.data;\n    })\n\n  }\n\n  getSelectedDepartment(event) {\n    for (let design of this.departmentList) {\n      if (design.gemsDepartmentId == event) {\n        return design;\n      }\n    }\n  }\n\n\n  getSelectedDesignation(event) {\n    for (let design of this.designationsList) {\n      if (design.gemsDesignationId == event) {\n        return design;\n      }\n    }\n  }\n\n  getSelectedRole(event) {\n    for (let role of this.roleList) {\n      if (role.gemsRoleMasterId == event) {\n        return role;\n      }\n    }\n  }\n\n\n\n  getSelectedReportingManger(event) {\n    for (let emp of this.employeeList) {\n      if (emp.gemsEmployeeMasterId == event) {\n        return emp;\n      }\n    }\n  }\n\n\n  getSelecteEmployeeShift(event) {\n    for (let empshift of this.shifts) {\n      if (empshift.shiftDetailId == event) {\n        return empshift;\n      }\n    }\n  }\n\n  getSelectedEmployeeStatus(event) {\n    for (let empstatus of this.employeeStatusList) {\n      if (empstatus.gemsEmploymentStatusId == event) {\n        return empstatus;\n      }\n    }\n  }\n\n\n  submitGeneralForm() {\n    this.submittedBtn2 = true;\n    if (this.companyInfoForm.valid) {\n      let requestPayload = {\n        \"attendanceId\": this.companyInfoForm.value.attendanceId,\n        \"createdBy\": this.encryptdecryptlocalstorage.getLocalStorage('employeeId'),\n        'createdOn': new Date(),\n        \"currentEmployeeStatus\": this.getSelectedEmployeeStatus(this.companyInfoForm.value.employeeStatus),\n        \"currentReportingTo\": this.getSelectedReportingManger(this.companyInfoForm.value.reportingManager),\n        \"dateOfJoining\": new Date(this.companyInfoForm.value.dateofJoining),\n        \"emergencyContactNumber\": this.generalForm.value.emergencyContactNo,\n        \"employeeCode\": this.companyInfoForm.value.employeeCode,\n        \"employeeDob\": new Date(this.generalForm.value.dob),\n        \"employeeFirstName\": this.generalForm.value.firstName,\n        \"employeeGender\": this.generalForm.value.employeeGender,\n        \"employeeLastName\": this.generalForm.value.lastName,\n        \"employeeLocation\": this.companyInfoForm.value.workLocation,\n        \"employeeMiddleName\": null,\n        \"gemsDepartment\": this.getSelectedDepartment(this.companyInfoForm.value.department),\n        \"gemsDesignation\": this.getSelectedDesignation(this.companyInfoForm.value.designation),\n        \"gemsEmployeeContactDetail\": null,\n        \"bloodGroup\": this.generalForm.value.bloodGroup,\n        \"gemsEmployeeMasterId\": this.companyInfoForm.value.gemsEmployeeMasterId,\n        \"gemsEmployeeShiftDetail\": this.getSelecteEmployeeShift(this.companyInfoForm.value.employeeShift),\n        \"gemsOrganisation\": this.companyInfoForm.value.gemsOrganisation,\n        'gemsUserMaster': {\n          \"gemsUserMasterId\": this.companyInfoForm.value.gemsUserMaster.gemsUserMasterId,\n          \"gemsRoleMaster\": this.getSelectedRole(this.companyInfoForm.value.role),\n        },\n        'isActive': true,\n        'isRequiredLogin': true,\n        \"leaveAllocationStatus\": null,\n        \"leaveApproveNotification\": true,\n        'leaveStatusNotification': true,\n        \"maritalStatus\": null,\n        \"officeContactNumber\": this.generalForm.value.contactNo,\n        \"officialEmailid\": this.companyInfoForm.value.companyMailId,\n        \"panCardNumber\": null,\n        \"personalContactNumber\": this.generalForm.value.contactNo,\n        \"personalEmailId\": this.generalForm.value.personalEmailId,\n        \"pfAccountNumber\": null,\n        \"requiredLogin\": 0,\n        \"roleMasterId\": null,\n        \"selectedUser\": \"\",\n        'ssnNumber': null,\n        'updatedBy': this.encryptdecryptlocalstorage.getLocalStorage('employeeId'),\n        \"updatedOn\": new Date(),\n      }\n      this.genericservice.post(this.saveEmployeeURL, requestPayload, false).subscribe(response => {\n        //debugger;\n        this.employees = response.data;\n        this.userId = response.data.gemsUserMaster.gemsUserMasterId;\n        if (this.userId) {\n          this.saveContact();\n        }\n        this.profile();\n      })\n    }\n    else if (this.companyInfoForm.invalid) {\n\n      return;\n    }\n  }\n  saveContact() {\n    var reqPayload;\n    if (this.isSameAddress) {\n      reqPayload = {\n        \"correspondenseAddressCity\": this.generalForm.value.curCity,\n        \"correspondenseAddressCountry\": this.generalForm.value.curCountry,\n        \"correspondenseAddressState\": this.generalForm.value.curState,\n        \"correspondenseAddressStreet1\": this.generalForm.value.curDoorNo,\n        \"correspondenseAddressStreet2\": this.generalForm.value.curStreet,\n        \"correspondenseAddressZipCode\": this.generalForm.value.curPincode,\n        \"gemsEmployeeMaster\": this.employees,\n        \"gemsEmployeeMasterId\": this.generalForm.value.gemsEmployeeMasterId,\n        \"isActive\": true,\n        \"permanentAddressCity\": this.generalForm.value.curCity,\n        \"permanentAddressCountry\": this.generalForm.value.curCountry,\n        \"permanentAddressState\": this.generalForm.value.curState,\n        \"permanentAddressStreet1\": this.generalForm.value.curDoorNo,\n        \"permanentAddressStreet2\": this.generalForm.value.curStreet,\n        \"permanentAddressZipCode\": this.generalForm.value.curPincode,\n      }\n    }\n    if (!this.isSameAddress) {\n      reqPayload = {\n        \"correspondenseAddressCity\": this.generalForm.value.curCity,\n        \"correspondenseAddressCountry\": this.generalForm.value.curCountry,\n        \"correspondenseAddressState\": this.generalForm.value.curState,\n        \"correspondenseAddressStreet1\": this.generalForm.value.curDoorNo,\n        \"correspondenseAddressStreet2\": this.generalForm.value.curStreet,\n        \"correspondenseAddressZipCode\": this.generalForm.value.curPincode,\n        \"gemsEmployeeMaster\": this.employees,\n        \"gemsEmployeeMasterId\": this.generalForm.value.gemsEmployeeMasterId,\n        \"isActive\": true,\n        \"permanentAddressCity\": this.generalForm.value.perCity,\n        \"permanentAddressCountry\": this.generalForm.value.perCountry,\n        \"permanentAddressState\": this.generalForm.value.perState,\n        \"permanentAddressStreet1\": this.generalForm.value.perDoorNo,\n        \"permanentAddressStreet2\": this.generalForm.value.perStreet,\n        \"permanentAddressZipCode\": this.generalForm.value.perPincode,\n      }\n    }\n    this.genericservice.post(this.saveContactURL, reqPayload, false).subscribe(res => {\n      if (res.status.success) {\n        this.dataSharingService.successMessage(res.status.message);\n        this.router.navigate(['/admin/employee']);\n      }\n    })\n  }\n  onSelectFile(event) {\n    if (event.target.files && event.target.files[0]) {\n      if (event.target.files[0].size <= 300000) {\n        var fileReader: FileReader = new FileReader();\n        this.currentFileUpload = event.target.files[0];\n        fileReader.readAsDataURL(event.target.files[0]); // read file as data url\n        fileReader.onload = (event: any) => { // called once readAsDataURL is completed\n          this.profileImgData = fileReader.result;\n          $('#upload_img').attr('src', this.profileImgData)\n        }\n      }\n      else {\n        this.dataSharingService.failureMessage('Picture size should not excceed 300KB..');\n      }\n    }\n\n  }\n  inputActive() {\n    $(function () {\n      const inputValueCheck = $(this).val();\n      if (inputValueCheck === '') {\n        $('.form-group').addClass('focused');\n      }\n    });\n\n    $('.form-control').focus(function () {\n      $(this)\n        .parents('.form-group')\n        .addClass('focused');\n    });\n\n    $('.form-control').blur(function () {\n      const inputValue = $(this).val();\n      if (inputValue === '') {\n        $(this).removeClass('filled');\n        $(this)\n          .parents('.form-group')\n          .removeClass('focused');\n      } else {\n        $(this).addClass('filled');\n      }\n    });\n  }\n\n  goToNextTab() {\n    this.submitted = true;\n    if (this.generalForm.valid) {\n      $('#nav-general-tab').removeClass('active');\n      $('#nav-general').removeClass('active');\n      $('#nav-general').removeClass('show');\n      $('#nav-general').removeClass('h-100');\n      $('#nav-company-info-tab').addClass('active');\n      $('#nav-companyinfo').addClass('active');\n      $('#nav-companyinfo').addClass('show');\n      $('#nav-companyinfo').addClass('h-100');\n    }\n    else if (this.generalForm.invalid) {\n      return;\n    }\n  }\n  onDateOfBirthDate(e) {\n    var date = e.year + '-' + e.month + '-' + e.day\n    this.dobDate = this.formatDate(date);\n    this.generalForm.controls['dob'].setValue(this.dobDate);\n  }\n\n  onDateOfJoiningDate(e) {\n    var date = e.year + '-' + e.month + '-' + e.day\n    this.dojDate = this.formatDate(date);\n    this.companyInfoForm.controls['dateofJoining'].setValue(this.dojDate);\n  }\n\n  formatDate(paramdate) {\n    var date = new Date(paramdate);\n    var months = ['JAN', 'FEB', 'MAR', 'APR', 'MAY',\n      'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'];\n    var day = date.getDate();\n    var year = date.getFullYear();\n    var month = months[date.getMonth()];\n    return day + \" \" + month + \" \" + year;\n  }\n\n  resetDateOfBirth() {\n    this.generalForm.controls['dob'].setValue('');\n  }\n  resetDateOfJoining() {\n    this.companyInfoForm.controls['dateofJoining'].setValue('');\n  }\n  profile() {\n    this.currentFileUpload = this.currentFileUpload ? this.currentFileUpload : null;\n    if (this.currentFileUpload != null) {\n      return this.genericservice.imageUpload(this.currentFileUpload, this.userId).subscribe(data => {\n        console.log(data);\n      }, error => {\n        console.log(error)\n      })\n    }\n  }\n  onKeyPress(event: any) {\n    const pattern = /[0-9]/;\n    const inputChar = String.fromCharCode(event.charCode);\n    if (event.keyCode !== 8 && !pattern.test(inputChar)) {\n      event.preventDefault();\n    }\n  }\n\n  autoCompleteCallback1(EventObject) {\n    if (EventObject.data !== undefined) {\n      const doc = new DOMParser().parseFromString(EventObject.data.adr_address, 'text/html');\n      const taglength = doc.activeElement.querySelectorAll('span').length;\n      this.generalForm.controls.curStreet.setValue('');\n      this.generalForm.controls.curCity.setValue('');\n      this.generalForm.controls.curState.setValue('');\n      this.generalForm.controls.curCountry.setValue('');\n      this.generalForm.controls.curPincode.setValue('');\n      for (let K = 0; K < taglength; K++) {\n        const address_object_attribute = doc.activeElement.querySelectorAll('span')[K].getAttribute('class');\n        const addressobject = doc.activeElement.querySelectorAll('span')[K].innerText;\n        if (address_object_attribute === 'locality') {\n          this.generalForm.controls.curCity.setValue(addressobject);\n        }\n        if (address_object_attribute === 'region') {\n          this.generalForm.controls.curState.setValue(addressobject);\n        }\n        if (address_object_attribute === 'postal-code') {\n          this.generalForm.controls.curPincode.setValue(addressobject);\n        }\n        if (address_object_attribute === 'country-name') {\n          this.generalForm.controls.curCountry.setValue(addressobject);\n        }\n        if (address_object_attribute === 'extended-address') {\n          this.generalForm.controls.curStreet.setValue(addressobject);\n        }\n        this.generalForm.controls.curDoorNo.setValue(EventObject.data.formatted_address.split(',')[0]);\n        console.log(EventObject.data.formatted_address);\n      }\n    }\n  }\n}\n","<ngx-loading-bar [color]=\"'#6747D4'\" [includeSpinner]='false'></ngx-loading-bar>\n<div class=\"dashboard__content\">\n    <h3> Employee</h3>\n    <div class=\"white__border inner__section employee_list__page rounded h-0\">\n        <h5>Employee Directory</h5>\n\n        <div class=\"search__container float-right\">\n            <div class=\"form-group\">\n                <input type=\"text\" placeholder=\"Search\" [(ngModel)]=\"filterkey\" class=\"form-control\">\n                <span class=\"icon_search calender_icon\"></span>\n            </div>\n\n            <div class=\"form-group search__input\">\n                <select class=\"form-control\" [(ngModel)]=\"selectedStatus\" (click)=\"changeStatus()\">\n                    <option value=\"Active\">Active</option>\n                    <option value=\"Suspend\">Suspend</option>\n                    <!-- <option *ngFor=\"let month of months\" [ngValue]=\"month\"> {{ month.viewValue }}</option> -->\n                </select>\n            </div>\n            <a routerLink=\"/admin/employee/add\" class=\"add__employeeLink\"> <span class=\"open__modal icon_add\"\n                    (click)=\"reset()\"></span> </a>\n        </div>\n\n        <div class=\"filters d-flex\">\n            <!-- <div class=\"col-md-3 d-flex\">\n                <div class=\"form-group d-flex search__input\">\n                   \n                    <span class=\"icon_search\"></span>\n                </div>\n            </div> -->\n            <div class=\"col-md-2\">\n\n            </div>\n            <!-- <a routerLink=\"/admin/employee/add\"> <span class=\"open__modal icon_add\" (click)=\"reset()\"></span> </a> -->\n        </div>\n        <!-- </a> -->\n        <div class=\"leave__table\">\n            <div class=\"loa\">\n                <table class=\"table support__table table-fixed\">\n                    <thead>\n                        <tr class=\"border__hide\">\n                            <!-- <th scope=\"col\"class=\"col-md-3\">Ticket Id</th> -->\n                            <th scope=\"col\" [class.active]=\"order == 'employeeCode'\" class=\" col-md-2 pl-0\">Employee\n                                Code <span class=\"arrow-up\" (click)=\"setOrder('employeeCode','asc')\"></span> <span\n                                    class=\"arrow-down\" (click)=\"setOrder('employeeCode','desc')\"></span>\n                                <!-- <i class=\"fa fa-arrow-up\" \n                                    aria-hidden=\"true\"></i> -->\n                                <!-- <i class=\"fa fa-arrow-down\" aria-hidden=\"true\"></i> -->\n                            </th>\n                            <th scope=\"col\" [class.active]=\"order == 'employeeFirstName'\" class=\" col-md-2 pl-0\">\n                                Employee Name <span class=\"arrow-up\"\n                                    (click)=\"setOrder('employeeFirstName','asc')\"></span> <span class=\"arrow-down\"\n                                    (click)=\"setOrder('employeeFirstName','desc')\"></span>\n                                <!-- <i class=\"fa fa-arrow-up\" \n                                    aria-hidden=\"true\"></i>\n                                <i class=\"fa fa-arrow-down\"\n                                    aria-hidden=\"true\"></i> -->\n                            </th>\n                            <th scope=\"col\" class=\"col-md-4 pl-0\">Email Address</th>\n                            <th scope=\"col\" class=\"col-md-1 pl-0\">Status</th>\n                            <th scope=\"col\" class=\"col-md-2 pl-0\">Contact</th>\n                            <th scope=\"col\" class=\"col-md-1 pl-0\">Actions</th>\n\n\n                        </tr>\n                    </thead>\n                    <tbody class=\"scroll-1\">\n                        <tr\n                            *ngFor=\"let employee of totalEmployeeList | search: filterkey | sort: order: orderBy  | paginate: {start: start , limit: limit }; let i = index;\">\n                            <td scope=\"row\" class=\"col-md-2\">{{employee.employeeCode}}</td>\n                            <td scope=\"row\" class=\"col-md-2 d-flex\">\n\n                                <div class=\"placeholder\"><span class=\"profile__text brown\">gt</span>\n                                    <!-- <img class=\"profile__images\" src=\"https://via.placeholder.com/50\"> -->\n                                </div>\n                                <p class=\"employeeFirstName\"> {{employee.employeeFirstName}}</p>\n                            </td>\n                            <td scope=\"row\" class=\"col-md-4\">{{employee.officialEmailid}}</td>\n                            <td *ngIf=\"selectedStatus === 'Active'\" scope=\"row\" class=\"col-md-1\">Active</td>\n                            <td *ngIf=\"selectedStatus === 'Suspend'\" scope=\"row\" class=\"col-md-1\">Suspend</td>\n                            <td scope=\"row\" class=\"col-md-2\">{{employee.officeContactNumber}}</td>\n                            <td scope=\"row\" class=\"col-md-1 mouse-action\"><span class=\"icon_edit_filled mx-1\" (click)=\"goToEmployeeEdit(employee.gemsEmployeeMasterId)\"></span>\n                                <span class=\"icon_delete_filled mx-1\" (click)=\"openDeleteModal(deleteModal,employee)\"></span></td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <div *ngIf=\" (totalEmployeeList | search:filterkey)?.length  > 10\" class=\"table__bottom text-right\">\n                <span class=\"items__nos\">\n                    <div class=\"form-group page__section\">\n                        <label for=\"pageNo\">Items per page:</label>\n                        <select class=\"form-control\" [(ngModel)]=\"selectedItemsPerPage\"\n                            (ngModelChange)=\"changeItemPerPage($event)\">\n                            <option *ngFor=\"let perpageVal of perpageOption\" [value]=\"perpageVal.value\">\n                                {{perpageVal.label}}</option>\n                        </select>\n                    </div>\n                </span>\n                <app-chutti-pagination [currentPage]=\"currentPage\" [count]=\"totalCount\" [pagesToShow]=\"totalPages\"\n                    (goPrev)=\"goToPrev()\" (goNext)=\"goToNext()\" (onPage)=\"goToPageNo($event)\"></app-chutti-pagination>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<ng-template #deleteModal let-modal>\n        <div class=\"modal-header\">\n          <h4 class=\"modal-title\" id=\"modal-basic-title\">Delete Employee </h4>\n          <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"dismissModal()\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button> -->\n        </div>\n        <div class=\"modal-body\">\n          <p>Do you want to remove the  <b>{{deleteEmployeeName | uppercase}}</b> from the Employee list ?</p>\n        </div>\n        <div class=\"bottom__btn mt-0 modal-footer d-flex justify-content-between\">\n          <button type=\"button\" class=\"btn btn-primary cancel \" (click)=\"dismissModal()\">Close</button>\n          <button type=\"button\" class=\"btn btn-primary submit \" (click)=\"suspendEmployee()\">Delete</button>\n        </div>\n      </ng-template>","import { Component, OnInit } from '@angular/core';\nimport { Genericservice } from 'src/app/services/genericservices';\nimport { LoadingBarService } from '@ngx-loading-bar/core';\nimport { UrlConstant } from 'src/app/services/urlConstant';\nimport { PaginatePipe } from 'src/app/commons/chutti-filters/paginate/paginate.pipe';\nimport { EncryptDecryptLocalStorageService } from 'src/app/services/encrypt-decrypt-localstorage.service';\nimport { Router } from '@angular/router';\nimport { DataSharingService } from 'src/app/services/dataSharing.service';\nimport { NgbModalRef, NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.scss'],\n  providers: [PaginatePipe]\n})\nexport class EmployeeListComponent implements OnInit {\n  getEmployeeListURL = UrlConstant.getEmployeeListApi;\n  getEmployeeByIdURL = UrlConstant.getEmployeeByIdApi;\n  saveEmployeeURL = UrlConstant.saveEmployeeApi;\n  suspendOrActiveURL = UrlConstant.suspendOrActiveApi;\n  employeeList: any;\n  public perpageOption = [\n\n    { value: '10', label: '10' },\n    { value: '20', label: '20' },\n    { value: '50', label: '50' },\n    { value: '100', label: '100' },\n    { value: '500', label: '500' },\n  ];\n  selectedItemsPerPage: number = 10;\n  totalEmployeeList: any;\n  totalCount: any;\n  start: any;\n  limit: any;\n  totalPages: number;\n  currentPage = 1;\n  filterkey;\n  status: any = \"Active\";\n  selectedStatus: any;\n  order: any;\n  orderBy: any;\n  public orderBoolean = false;\n  employeeMaster: any;\n  userMaster: any;\n  modalRef:NgbModalRef;\n  deleteEmployeeName:any = '';\n  deleteEmpId:any='';\n\n  constructor(private genericservice: Genericservice,\n     private modalService:NgbModal,\n     private dataSharingService: DataSharingService,\n     private router: Router,\n     private encryptdecryptlocalstorage: EncryptDecryptLocalStorageService,\n     private loadingBar: LoadingBarService) { }\n\n  ngOnInit() {\n    this.start = 0;\n    this.limit = this.selectedItemsPerPage;\n    this.selectedStatus = this.status;\n    this.getEmployeeList();\n  }\n\n  // Employee Directory list\n  getEmployeeList() {\n    let requestPayload = {\n      \"gemsOrganisationId\": 786,\n      \"isActive\": this.selectedStatus === \"Active\" ? true : false\n    }\n    this.genericservice.post(this.getEmployeeListURL, requestPayload, false).subscribe(response => {\n      this.totalEmployeeList = response.data;\n      this.totalCount = response.data.length;\n      this.paginatedEmployeeList();\n      this.findItemsPerPage();\n    });\n  }\n\n  paginatedEmployeeList() {\n    this.employeeList = this.totalEmployeeList.slice(this.start, this.limit);\n  }\n  goToNext() {\n    this.currentPage++;\n    this.start = this.start + this.selectedItemsPerPage;\n    this.limit = this.limit + this.selectedItemsPerPage;\n    this.employeeList = this.totalEmployeeList.slice(this.start, this.limit);\n  }\n  goToPrev() {\n    this.currentPage--;\n    this.start = this.start - this.selectedItemsPerPage;\n    this.limit = this.limit - this.selectedItemsPerPage;\n    this.employeeList = this.totalEmployeeList.slice(this.start, this.limit);\n  }\n  findItemsPerPage() {\n    this.totalPages = Math.ceil(this.totalCount / this.selectedItemsPerPage);\n  }\n  changeItemPerPage(event) {\n    this.currentPage = 1;\n    this.selectedItemsPerPage = parseInt(event);\n    this.start = 0;\n    this.limit = this.selectedItemsPerPage;\n    this.paginatedEmployeeList();\n    this.findItemsPerPage();\n  }\n\n  //STATUS CHANGE (ACTIVE \\ SUSPEND)\n  changeStatus() {\n    this.getEmployeeList();\n  }\n  reset() {\n\n  }\n  setOrder(value: string, orderBy) {\n    if (this.order === value) {\n      // this.reverse = !this.reverse;\n      this.orderBoolean = !this.orderBoolean;\n      this.orderBy = orderBy;\n      // this.orderBy = this.orderBoolean === true ? 'asc' : 'desc';\n    }\n    this.order = value;\n  }\n\n  goToEmployeeEdit(id) {\n    this.encryptdecryptlocalstorage.setToLocalStorage(\"editEmpId\", id);\n    this.router.navigate(['/admin/employee/edit']);\n  }\n  suspendEmployee(id) {\n    this.getEmployeeById(this.deleteEmpId);\n  }\n  getEmployeeById(id) {\n    let employeePayload = {\n      \"gemsEmployeeMasterId\": id\n    }\n    this.genericservice.post(this.getEmployeeByIdURL, employeePayload, false).subscribe(res => {\n      console.log(res.data);\n      this.employeeMaster = res.data;\n      this.saveEmployee(this.employeeMaster);\n    });\n  }\n  saveEmployee(empObj) {\n    empObj.isActive = false;\n    this.genericservice.post(this.saveEmployeeURL, empObj, false).subscribe(response => {\n      //debugger;\n      this.userMaster = response.data.gemsUserMaster;\n      this.suspendOrActiveUser(this.userMaster);\n    })\n  }\n  suspendOrActiveUser(userMaster) {\n    this.genericservice.post(this.suspendOrActiveURL, userMaster, false).subscribe(response => {\n      //debugger;\n      if (response.status.success == 'Success') {\n        this.onCloseModal();\n        this.dataSharingService.successMessage('Employee Suspended successfully.')\n      }\n      console.log(response.data);\n    })\n  }\n\n  openDeleteModal(content,employee){\n    const modalConfig: any = {\n      backdrop: 'static',\n      size: 'md'\n    };\n    this.modalRef = this.modalService.open(content, modalConfig);\n    this.modalRef.result\n      .then((result) => {\n        this.getEmployeeList();\n      }, (onDismiss) => {\n      });\n\n      this.deleteEmployeeName =employee.employeeFirstName;\n      this.deleteEmpId = employee.gemsEmployeeMasterId;\n  }\n\n  public dismissModal() {\n    this.deleteEmpId =''\n    this.deleteEmployeeName = '';\n    this.modalRef.dismiss('Delete Canceled');\n  }\n\n  public onCloseModal(){\n    this.modalRef.close();\n    this.deleteEmpId =''\n    this.deleteEmployeeName = '';\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { EmployeeRoutingModule } from './employee.routing';\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\nimport { LoadingBarModule } from '@ngx-loading-bar/core';\nimport { PaginationModule } from 'src/app/user-module/chutti-pagination/chutti-pagination.module';\nimport { AddEmployeeComponent } from './add-employee/add-employee.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { SharedModule } from 'src/app/commons/chutti-filters/ShareModule';\nimport { EditEmployeeComponent } from './edit-employee/edit-employee.component';\nimport { Ng4GeoautocompleteModule } from 'ng4-geoautocomplete';\n\n@NgModule({\n  declarations: [EmployeeListComponent,AddEmployeeComponent, EditEmployeeComponent],\n  imports: [\n    CommonModule,\n    EmployeeRoutingModule,\n    LoadingBarModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PaginationModule,\n    NgbModule,\n    SharedModule,\n    Ng4GeoautocompleteModule\n  ],\n\n})\nexport class EmployeeModule { }","import { NgModule } from \"@angular/core\";\nimport { RouterModule } from '@angular/router';\n\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\nimport { AddEmployeeComponent } from './add-employee/add-employee.component';\nimport { EditEmployeeComponent } from './edit-employee/edit-employee.component';\n\nvar routes = [\n    { path: '', component: EmployeeListComponent },\n    { path: 'add', component: AddEmployeeComponent },\n    { path: 'edit', component: EditEmployeeComponent }\n\n\n]\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class EmployeeRoutingModule {\n\n}"],"sourceRoot":""}