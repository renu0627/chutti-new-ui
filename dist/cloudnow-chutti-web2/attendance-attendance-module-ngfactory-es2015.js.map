{"version":3,"sources":["webpack:///./src/app/admin-module/attendance/attendance.component.html","webpack:///./src/app/admin-module/attendance/attendance.component.ts","webpack:///./src/app/admin-module/attendance/attendance.module.ts","webpack:///./src/app/admin-module/attendance/attendance.routing.ts","webpack:///./src/app/user-module/attendance/attendance.component.html","webpack:///./src/app/user-module/attendance/attendance.component.ts","webpack:///./src/app/user-module/attendance/attendance.module.ts","webpack:///./src/app/user-module/attendance/attendance.routing.ts","webpack:///./src/app/user-module/attendance/my-attendance/my-attendance.component.html","webpack:///./src/app/user-module/attendance/my-attendance/my-attendance.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yGAuDoC,qyBAA0E,gFAAqC,2BAA5D,kBAAsB,oBAAzE,YAA0E,EAAvB,8BAAsB,oBAAzE,YAA0E,EAAvB,SAAsB,2BAAC,mFAAqC;yGAQ/G,qyBAAyE,uFAA4D,2BAAjF,kBAAoB,oBAAxE,YAAyE,EAArB,8BAAoB,oBAAxE,YAAyE,EAArB,SAAoB,2BAAC,6IAA4D;yGAiC7I,uJAA6L,KACzL,6JAAiC,gFAAwD,MACzF,oKAAwC,KACpC,yJAAmC,KAAC,8JAC4D,KAChG,mJAA6B,gFAAmD,MAEpF,6JAAiC,gFAAmE,MACpG,8JAAiC,iFAA0D,MAC3F,8JAAiC,iFAA2D,MAC5F,8JAAiC,iFAA4C,MAC7E,0KAA6C,KACzC,wQAA2H,YAAtE;;wBAAyC;MAA9F,wBAA2H,wDAX9F,4GAAwD,GAGjF,uLAA2F,GAD3D,YAC4D,EAA5F,SAA2F,GAClE,kGAAmD,GAEnD,kHAAmE,GACnE,+GAA0D,GAC1D,gHAA2D,GAC3D,gGAA4C;yGAczE,6xBAA4E,gFACpD,2BADyB,kBAA0B,0BAA3E,YAA4E,EAA3B,8BAA0B,0BAA3E,YAA4E,EAA3B,SAA0B,2BAAC,mEACpD;yGAP5C,6JAA6G,KACrG,gJAAyB,KACrB,6JAAsC,KAClC,0IAAoB,4FAAe,MACnC;;;;;wBACgD;MADnB;;wBAAkC;MAC3D;;wBAA2C;MAD/C,8sCACgD,IAC5C,sdAA4E,IAKxF,mOAC8E,YAA1E;;wBAAqB;MAAC;;wBAAqB;MAAC;;wBAA6B;MAD7E,mmBAC8E,mDARzC,mBAAkC,uBAA/D,YACgD,EADnB,SAAkC,GAEnD,mBAAwC,gBAAhD,aAA4E,EAApE,SAAwC,GAKrC,mBAA2B,cAAC,oBAAoB,aAAC,oBAA0B,aAAlG,aAC8E,EADvD,SAA2B,EAAC,UAAoB,EAAC,UAA0B,2BAP1F,qtBACgD;yGA4BxD,6xBAA+E,gFACjD,2BADoB,kBAA4B,0BAA9E,YAA+E,EAA7B,8BAA4B,0BAA9E,YAA+E,EAA7B,SAA4B,2BAAC,mEACjD;yGA0DlB,sHAAkD,KAC9C,sIAAgB,gFAAmD,MACnE,sIAAgB,gFAAwB,yDADxB,wGAAmD,GACnD,wEAAwB;+hBAhNhF,wJAAgC,KAC5B,sHAAI,uFAAU,MACd,0JAAkC,KAC9B,6JAAsC,KAClC,sHAAI,gGAAmB,MACvB,mKAA2C,KAEvC,+IAAwB,KACpB;;;;;;;;;;;wBAAsF;MAA9C;;wBAAuB;MAA/D,ixCAAsF,IAE1F,kKAA2C,KACvC,2LAAmD,YAAnC;;wBAAkC;MAAlD,wBAAmD,sJAA0B,KAAO,+EAAO,MAE/F,wNAAqF,KAGrF,uNAA0F,KACtF,kOAAyF,8FAC3E,MACd,2OAAoF,YAAhC;;wBAA8B;MAAlF,wBAAoF,4FAAe,MAK/G,6IAAsB,KACtB,oKAAqC,KACjC,yIAAiB,KACb,+IAAuB,KACnB,uHAAK,uFAAU,MACf;;;;;;qzBAA2C,IAC3C,yIAAiB,KACb,8IAAsB,KAClB,gJAAwB,KACpB,qKAA8C,oFAAO,MACrD,gMAAmE,KAC/D;;;;;;;;;;;wBACgD;MAA5C;;wBAA2C;MAD/C,w5CACgD,IAChD,oKAA6C,KAIzD,8IAAsB,KAClB,gJAAwB,KACpB,qKAA8C,mFAAM,MACpD,8LAAiE,KAC7D;;;;;;;;;;;wBAC8C;MAA1C;;wBAAyC;MAD7C,w5CAC8C,IAC9C,oKAA6C,KAIzD,8IAAsB,KAClB,gJAAwB,KACpB,kLAAqD,0FAAa,MAClE;;;;;;61CAA+F,IAC3F,sdAA0E,IAItF,8IAAsB,KAClB,gJAAwB,KACpB,qKAA8C,wFAAW,MACzD;;;;;;61CAAyF,IACrF,sdAAyE,IAO7F,+JAAwC,KACpC,qJAA8B,KAC1B,iRAA4I,YAAjE;;wBAAwB;MAAnG,wBAA4I,mFAAM,MAClJ,iQAAuG,YAA7B;;wBAA2B;MAArG,wBAAuG,kFAAK,MAM5H,mJAA2B,KACvB,iJAAyB,KACrB,qJAA6B,KACzB,wKAAgD,KAC5C,2HAAO,KACH,iJAAyB,KACrB,oKAAsC,kFAAK,MAC3C,oKAAsC,0FAAa,MACnD,oKAAsC,kFAAK,MAC3C,oKAAsC,oFAAO,MAC7C,oKAAsC,qFAAQ,MAC9C,oKAAsC,0FAAa,MACnD,oKAAsC,wFAAW,MAIzD,uKAAyC,KACrC,udAA6L,GAAzL,kQAA4J,IAkB5K,8YAA6G,GAAtE,yDAAqE,IAqB5H,gSACuB,KACnB,yKAA0C,KACtC,oJAA2B,KACvB,iJAAwB,KACpB,oJAA2B,KACvB,yIAAiB,8FAAiB,MAClC;;;;;;wzBAAmE,IACnE,sJAA6B,KACzB,+JAAiC,4FAAe,MAChD;;;;;wBAC8E;MADhD;;wBAAiC;MAC/D;;wBAA+C;MAD/C,s4CAC8E,IAC9E,udAA+E,IAInF,4LAA8D,KAC1D,mLAAqD,mLAAsD,kFAAkB,MACzH,8RAAgI,YAAlD;;wBAA+B;MAA7G,wBAAgI,KAExI,0OAAgF,YAA/B;;wBAA8B;MAA/E,wBAAgF,8FAAiB,MACjG,sJAA8B,KAC1B,8OAAmF,YAAvB;;wBAAqB;MAAjF,wBAAmF,mFAAM,MACzF,uPAAyI,YAApF;;wBAAoC;MAAzF,wBAAyI,mFAAM,MAYvK,oRACuB,KACnB,0LAA2D,KACvD,oJAA2B,KACvB,iJAAwB,KACpB,iJAAwB,KACpB,wHAAI,yFAAY,wNAA8E,KAE9F,+IAAsB,KAClB,8IAAsB,KAClB,0JAAkC,KAC9B,uLAA+D,KAC/D,2JAAmC,KAAC,gKACU,KAC9C,8JAAsC,kFAAmC,MACzE,6LAAqE,KAG7E,8IAAsB,KAClB,iJAAyB,KACrB,6KAAqD,KACjD,uLAA+D,KAC/D,8JAAsC,kFAAsD,MAC5F,6LAAqE,KAIjF,qJAA4B,KACxB,4JAAoC,KAChC,2HAAO,KACH,iJAAyB,KACrB,wIAAgB,kFAAK,MACrB,2JAA6B,wFAAW,MAGhD,2HAAO,KACH,udAAkD,IAgBtF,wWACwG,KACpG,kMAAyE,KACrE,oJAA2B,KACvB,0LAAkE,KAC9D,4KAAoD,KAEpD,iNAAyF,KACrF,4PACoC,YAAhC;;wBAA+B;MADnC,wBACoC,kFAAK,MACzC,kLAA0D,4JAA+B,KAAO,8EAC5E,MAM5B,0KAAkD,KAC9C,uJAA+B,KAC3B,iNACiE,YAD9C;;wBAAyC;MAA5D,+9DACiE,KAAjE,mFAA4C,KADiB,mFAA0C,MAK/G,4KAAoD,KAChD,oKAA4C,KACxC,yMAAqE,mFAAM,MAE3E,wNAAoF,iFAAI,MAO5G,oWACwG,KACpG,kMAAyE,KACrE,oJAA2B,KACvB,0LAAkE,KAC9D,4KAAoD,KAEpD,iNAAyF,KACrF,4PACkC,YAA9B;;wBAA6B;MADjC,wBACkC,kFAAK,MACvC,kLAA0D,4JAA+B,KAAO,8EAC9E,MAM1B,0KAAkD,KAC9C,uJAA+B,KAC3B,iNAA+E,YAA5D;;wBAAuC;MAA1D,+6DAA+E,MAIvF,4KAAoD,KAChD,oKAA4C,KACxC,yMAAqE,mFAAM,MAE3E,wNAAoF,iFAAI,mDApRhD,mBAAuB,YAA/D,aAAsF,EAA9C,SAAuB,GAqBvD,oBAAkC,uBAA1C,aAA2C,EAAnC,UAAkC,GAMiD,2BAA0B,EAArG,aACgD,EAD2B,UAA0B,GAU5B,yBAAwB,EAAjG,aAC8C,EAD2B,UAAwB,GASrD,8BAA6B,EAA7E,aAA+F,EAA/C,UAA6B,GACjE,oBAA0C,kBAAlD,aAA0E,EAAlE,UAA0C,GAON,2BAA0B,EAA1E,aAAyF,EAAzC,UAA0B,GAC9D,oBAA2C,qBAAnD,aAAyE,EAAjE,UAA2C,GAiCvD,whBAA4J,WAAhK,cAA6L,EAAzL,UAA4J,GAkBrI,uRAAqE,GAA5G,cAA6G,EAAtE,UAAqE,GA4BlG,oBAAwC,6BAA9C,cAAmE,EAA7D,UAAwC,GAGsB,sCAAqC,EAAvE,oBAAiC,sBAA/D,cAC8E,EADd,UAAqC,EAAvE,UAAiC,GAEvD,oBAAyC,eAAjD,cAA+E,EAAvE,UAAyC,GA2DjC,oBAA6C,sBAAjD,cAAkD,EAA9C,UAA6C,GAoCjE,6CAA4C,GADiB,2CAA0C,GAAvG,cACiE,EAAjE,UAA4C,EADiB,UAA0C,GAmCvG,cAA+E,mDA5Q/E,stBAAsF,GAqBtF,guBAA2C,GAM3B,ouBACgD,GAShD,ouBAC8C,GAQlD,ouBAA+F,GAQ/F,ouBAAyF,GAUE,qBAAwC,6BAA3I,aAA4I,EAAzC,UAAwC,GAsE/I,4uBAAmE,GAG/D,4uBAC8E,GAM6B,+DAAkB,GAMnC,qBAA8C,mCAAxI,cAAyI,EAA/C,UAA8C,GAyB5H,gIAAyC,GADT,cACU,EAA1C,UAAyC,GACP,gFAAmC,GAQ/B,wGAAsD,GAwCZ,6DAC5E,GAkC4E,2DAC9E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5QtC;AAAA;AAAA;AAAA;AAAA;AAAkD;AAIS;AACsB;AAQ1E,MAAM,mBAAmB;IAwC9B,YAAoB,cAA8B,EAAU,0BAA6D,EAAU,WAAwB;QAAvI,mBAAc,GAAd,cAAc,CAAgB;QAAU,+BAA0B,GAA1B,0BAA0B,CAAmC;QAAU,gBAAW,GAAX,WAAW,CAAa;QApC3J,WAAM,GAAY,KAAK,CAAC;QACxB,yBAAoB,GAAG,EAAE,CAAC;QAM1B,gBAAW,GAAG,CAAC,CAAC;QAEhB,WAAM,GAAQ,QAAQ,CAAC;QAIhB,iBAAY,GAAG;YACpB,EAAE,KAAK,EAAE,cAAc,EAAE,KAAK,EAAE,eAAe,EAAE;YACjD,EAAE,KAAK,EAAE,cAAc,EAAE,KAAK,EAAE,aAAa,EAAE;SAChD,CAAC;QACK,kBAAa,GAAG;YACrB,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;YAC5B,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;YAC5B,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;YAC5B,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE;YAC9B,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE;SAC/B,CAAC;QAGF,mBAAc,GAAW,+BAA+B,CAAC;QAGlD,oBAAe,GAAQ,MAAM,CAAC;IAO0H,CAAC;IAEhK,QAAQ;QACN,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC;QACvC,IAAI,CAAC,4BAA4B,EAAE,CAAC;QACpC,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,UAAU,EAAE,CAAC;IAEpB,CAAC;IACD,UAAU;QACR,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjD,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,MAAM,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjC,WAAW,EAAE,CAAC,EAAE,CAAC;YACjB,QAAQ,EAAE,CAAC,EAAE,CAAC;SACf,CAAC,CAAC;QACH,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACvD,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,mBAAmB,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC/C,CAAC;IACJ,CAAC;IACD,iBAAiB,CAAC,KAAU;QAC1B,qCAAqC;QACrC,uCAAuC;QACvC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,oBAAoB,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC5C,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC;QACvC,IAAI,CAAC,oCAAoC,EAAE,CAAC;QAC5C,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;IAC5E,CAAC;IAEM,4BAA4B;QACjC,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QACtB,IAAI,QAAQ,GAAI,IAAI,CAAC,WAAW,EAAE,GAAC,GAAG,GAAE,IAAI,CAAC,QAAQ,EAAE,GAAC,GAAG,GAAE,CAAC,CAAC;QAC/D,IAAI,SAAS,GAAI,IAAI,CAAC,WAAW,EAAE,GAAC,GAAG,GAAE,IAAI,CAAC,QAAQ,EAAE,GAAC,GAAG,GAAC,CAAC,IAAI,CAAC,OAAO,EAAE,GAAC,CAAC,CAAC,CAAC;QAChF,IAAI,OAAO,GAAG,EAAE,oBAAoB,EAAE,EAAE,kBAAkB,EAAE,EAAE,WAAW,EAAE,IAAI,CAAC,0BAA0B,CAAC,eAAe,CAAC,gBAAgB,CAAC,EAAE,EAAE,gBAAgB,EAAE,IAAI,EAAE,EAAE;QAC1K,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,wEAAW,CAAC,wBAAwB,GAAG,YAAY,GAAC,QAAQ,GAAC,UAAU,GAAC,SAAS,GAAC,wBAAwB,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACxK,IAAI,QAAQ,KAAK,IAAI,EAAE;gBACrB,IAAI,QAAQ,CAAC,IAAI,KAAK,IAAI,EAAE;oBAC1B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;oBACnB,IAAI,CAAC,0BAA0B,GAAG,QAAQ,CAAC,IAAI;oBAC/C,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,WAAW,CAAC;oBACvC,IAAI,CAAC,oCAAoC,EAAE,CAAC;oBAC5C,IAAI,CAAC,gBAAgB,EAAE,CAAC;iBACzB;qBAAM;oBACL,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;iBACrB;aACF;QACH,CAAC,CAAC;IACJ,CAAC;IAED,oCAAoC;QAClC,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IAC9F,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC;QACpD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC;QACpD,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IAC9F,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC;QACpD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC;QACpD,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IAC9F,CAAC;IAED,kBAAkB,CAAC,SAAiC,EAAE,IAAY;QAChE,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC;QAC/B,IAAI,IAAI,KAAK,MAAM,EAAE;YACnB,IAAI,MAAM,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;gBAC7C,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;YACnD,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;YACzB,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;YAC9B,IAAI,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;YACpC,OAAO,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC;SACvC;aAAM;YACL,OAAO,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAClC;IACH,CAAC;IAED,WAAW,CAAC,QAAa;QACvB,IAAI,QAAQ,IAAI,EAAE,IAAI,QAAQ,IAAI,IAAI,IAAI,QAAQ,IAAI,SAAS,EAAE;YAC/D,IAAI,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC5B,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;SACjC;aAAM;YACL,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAED,WAAW;QACT,CAAC,CAAC;YACA,MAAM,eAAe,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;YACtC,IAAI,eAAe,KAAK,EAAE,EAAE;gBAC1B,CAAC,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;aACtC;QACH,CAAC,CAAC,CAAC;QAEH,CAAC,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC;YACvB,CAAC,CAAC,IAAI,CAAC;iBACJ,OAAO,CAAC,aAAa,CAAC;iBACtB,QAAQ,CAAC,SAAS,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;QAEH,CAAC,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC;YACtB,MAAM,UAAU,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;YACjC,IAAI,UAAU,KAAK,EAAE,EAAE;gBACrB,CAAC,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;gBAC9B,CAAC,CAAC,IAAI,CAAC;qBACJ,OAAO,CAAC,aAAa,CAAC;qBACtB,WAAW,CAAC,SAAS,CAAC,CAAC;aAC3B;iBAAM;gBACL,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;aAC5B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,qBAAqB,CAAC,KAAU;QACrC,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;IACnC,CAAC;IAEM,YAAY,CAAC,KAAU;QAC5B,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YACjC,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACnC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC;YAChC,IAAI,CAAC,0BAA0B,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SAC5D;IAEH,CAAC;IAEM,wBAAwB;QAC7B,IAAI,IAAI,CAAC,0BAA0B,CAAC,KAAK,EAAE;YACzC,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;YAChC,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,0BAA0B,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC;YAC3E,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;YACnD,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,0BAA0B,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC,CAAC;YAC5F,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,wEAAW,CAAC,mBAAmB,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;gBAC9F,IAAI,QAAQ,CAAC,MAAM,CAAC,OAAO,KAAK,SAAS,EAAE;oBACzC,IAAI,CAAC,cAAc,GAAG,+BAA+B,CAAC;oBACtD,CAAC,CAAC,4BAA4B,CAAC,CAAC,KAAK,EAAE;oBACvC,IAAI,CAAC,SAAS,EAAE,CAAC;iBAElB;YACH,CAAC,CAAC;SACH;IAEH,CAAC;IAED,eAAe,CAAC,KAAU;QACxB,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,eAAe,EAAE;QACtB,CAAC,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAC/B,CAAC,CAAC,cAAc,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QAC1C,CAAC,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;IAGzC,CAAC;IAED,eAAe;QACb,CAAC,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAClC,CAAC,CAAC,cAAc,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QAC1C,CAAC,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QACvC,IAAI,CAAC,oBAAoB,CAAC,KAAK,EAAE,CAAC;IACpC,CAAC;IACD,kBAAkB;QAChB,QAAQ,CAAC,IAAI,GAAG,wEAAW,CAAC,qBAAqB,CAAC;IACpD,CAAC;IAED,SAAS;QACP,IAAI,CAAC,0BAA0B,CAAC,KAAK,EAAE,CAAC;QACxC,IAAI,CAAC,cAAc,GAAG,+BAA+B,CAAC;IACxD,CAAC;IAED,kBAAkB;QAChB,IAAI,OAAO,GAAG,EAAE,kBAAkB,EAAE,EAAE,WAAW,EAAE,IAAI,CAAC,0BAA0B,CAAC,eAAe,CAAC,gBAAgB,CAAC,GAAG,EAAE;QACzH,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,wEAAW,CAAC,eAAe,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC,SAAS,CAAC,kBAAkB,CAAC,EAAE;YACnG,IAAI,CAAC,eAAe,GAAG,kBAAkB,CAAC,IAAI,CAAC;QACjD,CAAC,CAAC;IACJ,CAAC;IAED,eAAe;QACb,IAAI,OAAO,GAAG,EAAE,oBAAoB,EAAE,IAAI,CAAC,0BAA0B,CAAC,eAAe,CAAC,gBAAgB,CAAC,EAAE;QACzG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,wEAAW,CAAC,uBAAuB,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC,SAAS,CAAC,oBAAoB,CAAC,EAAE;YAC7G,IAAI,CAAC,kBAAkB,GAAG,oBAAoB,CAAC,IAAI,CAAC;QACtD,CAAC,CAAC;IACJ,CAAC;IAED,YAAY;QACV,IAAI,IAAI,CAAC,oBAAoB,CAAC,KAAK,EAAE;YACnC,IAAI,kBAAkB,GAAG,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;YAC9E,IAAI,OAAO,GAAG;gBACZ,oBAAoB,EAAE;oBACpB,sBAAsB,EAAE,kBAAkB,CAAC,oBAAoB;oBAC/D,kBAAkB,EAAE;wBAClB,WAAW,EAAE,IAAI,CAAC,0BAA0B,CAAC,eAAe,CAAC,gBAAgB,CAAC;qBAC/E;oBACD,gBAAgB,EAAE,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,KAAK;iBAC1E;aACF;YACD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,wEAAW,CAAC,wBAAwB,GAAG,YAAY,GAAG,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,GAAG,UAAU,GAAG,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,KAAK,GAAG,wBAAwB,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;gBACrQ,IAAI,QAAQ,KAAK,IAAI,EAAE;oBACrB,IAAI,CAAC,0BAA0B,GAAG,QAAQ,CAAC,IAAI;oBAC/C,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,WAAW,CAAC;oBACvC,IAAI,QAAQ,CAAC,IAAI,KAAK,IAAI,EAAE;wBAC1B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;wBACnB,IAAI,CAAC,oCAAoC,EAAE,CAAC;wBAC5C,IAAI,CAAC,gBAAgB,EAAE,CAAC;qBACzB;yBACI;wBACH,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;qBACrB;iBACF;YACH,CAAC,CAAC;SAEH;IAEH,CAAC;IAED,sBAAsB,CAAC,KAAU;QAC/B,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACjC,IAAI,KAAK,KAAK,SAAS,EAAE;YACvB,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,GAAG,GAAG,KAAK,CAAC,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;YAC5D,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC;YACxD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SAC1B;IACH,CAAC;IACD,oBAAoB,CAAC,KAAU;QAC7B,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;QAClC,IAAI,KAAK,KAAK,SAAS,EAAE;YACvB,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,GAAG,GAAG,KAAK,CAAC,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;YAC5D,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SACxD;IACH,CAAC;IACD,mBAAmB;QACjB,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC;QACtD,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;IACzB,CAAC;IACD,iBAAiB;QACf,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IACvD,CAAC;IAED,mBAAmB,CAAC,UAAe;QACjC,IAAG,UAAU,KAAK,IAAI,EAAE;YACtB,IAAI,CAAC,uBAAuB,GAAG,UAAU,CAAC,cAAc,CAAC;YACzD,IAAI,CAAC,+BAA+B,GAAG,UAAU,CAAC,kBAAkB,CAAC,iBAAiB,CAAC;YACvF,IAAI,CAAC,+BAA+B,GAAE,wBAAwB,GAAE,UAAU,CAAC,kBAAkB,CAAC,cAAc,CAAC,cAAc,CAAC;YAC5H,IAAI,OAAO,GAAG,EAAE;YAChB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,wEAAW,CAAC,sBAAsB,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;gBAChG,IAAG,QAAQ,KAAK,IAAI,EAAE;oBACpB,IAAI,CAAC,mBAAmB,GAAG,QAAQ,CAAC,IAAI,CAAC;iBAC1C;YACH,CAAC,CAAC;SACH;IAEH,CAAC;CAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1SD;AAAA;AAAO,MAAM,gBAAgB;CAAI;;;;;;;;;;;;;ACnBjC;AAAA;AAAA;AAA6D;AAC7D,MAAM,MAAM,GAAG;IACX,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,yEAAmB,EAAE;CAC/C;AAKM,MAAM,iBAAiB;CAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yGCVjC,urBAA8D,IAC9D,iKAA2C,KACvC,sHAAI,uFAAU,MACd,8KAAwD,KAChD,sHAAI,+FAAkB,MACtB,4sBAAmB,yBALM,qBAAwB,EAA5C,yBAAmB,EAApC,YAA8D,EAAzB,SAAwB,EAA5C,SAAmB,GAKxB,YAAmB,2BAL/B,wGAA8D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;AAET;AACY;AACS;AAEpB;AAEhC;AAOrB,MAAM,mBAAmB;IA6C9B,YAAoB,cAA8B,EAAU,0BAA6D,EAAU,UAA6B;QAA5I,mBAAc,GAAd,cAAc,CAAgB;QAAU,+BAA0B,GAA1B,0BAA0B,CAAmC;QAAU,eAAU,GAAV,UAAU,CAAmB;QAxChK,UAAK,GAAa,EAAE,CAAC;QAGd,kBAAa,GAAG,wEAAW,CAAC,aAAa,CAAC;QAC1C,yBAAoB,GAAG,wEAAW,CAAC,cAAc,CAAC;QAClD,mBAAc,GAAG,wEAAW,CAAC,cAAc,CAAC;QAC5C,oBAAe,GAAG,wEAAW,CAAC,eAAe,CAAC;QASrD,kBAAa,GAAG,IAAI,oFAAe,EAAE,CAAC;QACtC,4BAAuB,GAAG,IAAI,6FAAmB,EAAE,CAAC;QAEpD,gBAAW,GAAG,CAAC,CAAC;QAGT,UAAK,GAAG,CAAC,CAAC;QACjB,eAAU,GAAG,CAAC,CAAC;QAER,kBAAa,GAAG;YAErB,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;YAC5B,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;YAC5B,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;YAC5B,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE;YAC9B,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE;SAC/B,CAAC;QACF,yBAAoB,GAAG,EAAE,CAAC;QACnB,WAAM,GAAG,EAAE,CAAC;QAEnB,sBAAiB,GAAG,IAAI,yEAAU,EAAE,CAAC;QACrC,WAAM,GAAY,KAAK,CAAC;QAExB,WAAM,GAAY,KAAK,CAAC;QACxB,cAAS,GAAY,KAAK,CAAC;QAY3B,qBAAgB,GAAG,CAAC,gBAAgB,EAAE,kBAAkB,EAAE,mBAAmB,EAAE,wBAAwB,EAAE,eAAe;YACtH,QAAQ,CAAC,CAAC;QAXV,IAAI,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;QACrC,IAAI,YAAY,GAAG,IAAI,GAAG,CAAC,SAAS,CAAC,CAAC;QACtC,IAAI,SAAS,GAAG,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QACxD,IAAI,SAAS,EAAE;YACb,mCAAC,CAAC,eAAe,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YACzC,mCAAC,CAAC,kBAAkB,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YACzC,mDAAmD;SACpD;IACH,CAAC;IAMD,QAAQ;QACF,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;QAE5B,+BAA+B;QAC/B,gDAAgD;QAChD,kDAAkD;QAClD,kEAAkE;QAClE,uCAAuC;QACvC,wDAAwD;QACxD,KAAK;QAEL,kBAAkB;QAClB,2CAA2C;QAC3C,4CAA4C;QAC5C,yCAAyC;QACzC,yCAAyC;QACzC,uCAAuC;QACvC,wCAAwC;QACxC,wCAAwC;QACxC,0CAA0C;QAC1C,6CAA6C;QAC7C,2CAA2C;QAC3C,4CAA4C;QAC5C,2CAA2C;QAC3C,KAAK;QAEL,kDAAkD;QAClD,mCAAmC;QACnC,0BAA0B;QAC1B,sCAAsC;QACtC,mDAAmD;QACnD,iDAAiD;QACjD,wBAAwB;QACxB,IAAI;QACJ,wBAAwB;QACxB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,+BAA+B;QAC/B,oBAAoB;QACpB,eAAe;QACf,mBAAmB;QACnB,IAAI;QACJ,2GAA2G;QAC3G,6FAA6F;QAC7F,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IAE7B,CAAC;IAED,WAAW;QACT,IAAI,OAAO,GACX;YACE,kBAAkB,EAAE,IAAI,CAAC,0BAA0B,CAAC,eAAe,CAAC,QAAQ,CAAC;SAC9E;QACD,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE;YAClG,IAAI,CAAC,kBAAkB,GAAG,YAAY,CAAC,IAAI,CAAC;YAC5C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,cAAc,CAAC,QAAQ,CAAC;YAE/E,IAAI,YAAY,CAAC,kBAAkB,KAAK,MAAM,EAAE;gBAC9C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;aACvB;iBAAM;gBACL,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;aACpB;YACD,kCAAkC;YAClC,wBAAwB;YACxB,uCAAuC;YACvC,2BAA2B;YAC3B,IAAI;QACN,CAAC,CAAC,CAAC;IAEL,CAAC;CAyTF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnbD;AAAA;AAAO,MAAM,gBAAgB;CAAI;;;;;;;;;;;;;ACpBjC;AAAA;AAAA;AAA6D;AAE7D,IAAI,MAAM,GAAC;IACP,EAAC,IAAI,EAAC,EAAE,EAAC,SAAS,EAAC,yEAAmB,EAAC;CAE1C;AAMM,MAAM,uBAAuB;CAEnC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2GCNmB,qyBAAuD,gFAAsB,2BAAxC,kBAAiB,oBAAtD,YAAuD,EAAlB,8BAAiB,oBAAtD,YAAuD,EAAlB,SAAiB,2BAAC,uEAAsB;2GAS7E,uvBAAmC,6KAAQ;2GAiCnD,uKAAuF,KACnF,uLAAqD,sMAA4E,IACjI,wKAA4C,gFAAmD,MAC/F,yKAA6C,gFAAoD,MACjG,8KAAkD,iFAA4C,MAC9F,oLAAuD,kFAAyB,yDAJ3B,0ZAA4E,GACrF,sGAAmD,GAClD,uGAAoD,GAC/C,gGAA4C,GACvC,wEAAyB;2GANxF,4IAAqC,KACjC,udAAuF,iDAApE,mBAA4C,oBAA/D,YAAuF,EAApE,SAA4C;2GA6DnE,yHAAuB,KACnB,0JAAoC,KAChC,uIAAiB,8FAAiB;2GAU9B,6xBAA4E,gFACpD,2BADyB,kBAA0B,0BAA3E,YAA4E,EAA3B,8BAA0B,0BAA3E,YAA4E,EAA3B,SAA0B,2BAAC,mEACpD;2GAPxC,6JAAqE,KACjE,gJAAyB,KACrB,6JAAsC,KAClC,0IAAoB,4FAAe,MACnC;;;;;wBACgD;MADnB;;wBAAkC;MAC3D;;wBAA2C;MAD/C,8sCACgD,IAC5C,wdAA4E,IAKxF,mOAC8E,YAA1E;;wBAAqB;MAAC;;wBAAqB;MAAC;;wBAA6B;MAD7E,+jBAC8E,mDARzC,mBAAkC,uBAA/D,YACgD,EADnB,SAAkC,GAEnD,mBAAwC,gBAAhD,aAA4E,EAApE,SAAwC,GAKrC,mBAA2B,cAAC,oBAAoB,aAAC,oBAA0B,aAAlG,aAC8E,EADvD,SAA2B,EAAC,UAAoB,EAAC,UAA0B,2BAP1F,qtBACgD;2GAoB5C,wHACiD,soBAA+E;iZA7IpJ,4IAAsB,KACtB,uJAAgC,KAC5B,wIAAiB,KACb,8JAAwC,KACpC,4JAAsC,KAClC;;;;;wBAAkG;MAArE;;wBAA2B;MAAC;;wBAAwC;MAAjG,+sCAAkG,IAC9F,wdAAuD,IAMnE,+JAAwC,KACpC,6JAAsC,KAClC;;;;;wBAAiG;MAApE;;wBAA0B;MAAC;;wBAAwC;MAAhG,gtCAAiG,IAC7F,wdAAmC,IAiBvD,iKAAyC,KAErC,yJAAiC,KAC7B,2HAAO,KACH,iJAAyB,KACrB,mKAAsC,iFAAI,MAC1C,mKAAsC,oFAAO,MAC7C,mKAAsC,qFAAQ,MAC9C,mKAAsC,0FAAa,MACnD,mKAAsC,+FAAkB,MAMhE,+YAAqC,IA8DrC,+YAAuB,IAM3B,+YAAqE,IAkBzE,oRACuB,KACnB,+MAAiF,KAC7E,mJAA2B,KACvB,uKAA+C,KAE3C,uHAAI,uGACA,qZACiD,IAErD;;;;;;qzBAA2D,IACvD,yIAAiB,KACb,+IAAuB,KACnB,wKAAgD,KAC5C,uJAAgC,qGAAwB,MACxD;;;;;;61CAAwF,IACpF,0vBAAQ,mFAAO,MACf,0vBAAQ,6FAAiB,MACzB,0vBAAQ,4FAAgB,MACxB,0vBAAQ,6FAAiB,MACzB,0vBAAQ,kFAAM,MAO9B,gJAAyB,KAErB,6MAA0E,mFAAM,MAChF,iRACoE,YAA7B;;wBAA4B;MADnE,wBACoE,mFAAM,mDA/JrD,mBAA2B,gBAAxD,aAAkG,EAArE,SAA2B,GAC5C,mBAA4B,SAApC,aAAuD,EAA/C,SAA4B,GAQX,oBAA0B,eAAvD,aAAiG,EAApE,UAA0B,GAC3C,oBAA0B,QAAlC,aAAmC,EAA3B,UAA0B,GAgCxB,oBAAc,SAApC,aAAqC,EAAf,UAAc,GA8D7B,qBAAe,SAAtB,aAAuB,EAAhB,UAAe,GAMY,oDAA8B,IAApE,aAAqE,EAA/B,UAA8B,GA0BhD,0DAA4C,GADhD,aACiD,EAA7C,UAA4C,GAErB,oBAA2B,gBAA1D,aAA2D,EAA5B,UAA2B,GAKb,4BAA2B,EAAxD,aAAwF,EAA3D,UAA2B,mDA/IxE,qtBAAkG,GASlG,kuBAAiG,GAiIjG,ouBAA2D,GAK3C,ouBAAwF,GAgB5F,oBAAkC,wBADtC,aACoE,EAAhE,UAAkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvK9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;AAET;AACY;AACS;AAEpB;AAOrD,MAAM,qBAAqB;IA2ChC,YAAoB,cAA8B,EAAU,0BAA6D;QAArG,mBAAc,GAAd,cAAc,CAAgB;QAAU,+BAA0B,GAA1B,0BAA0B,CAAmC;QAtCzH,UAAK,GAAa,EAAE,CAAC;QAGd,kBAAa,GAAG,wEAAW,CAAC,aAAa,CAAC;QAC1C,yBAAoB,GAAG,wEAAW,CAAC,cAAc,CAAC;QAClD,mBAAc,GAAG,wEAAW,CAAC,cAAc,CAAC;QAC5C,oBAAe,GAAG,wEAAW,CAAC,eAAe,CAAC;QAErD,sBAAiB,GAAG,IAAI,yEAAU,EAAE,CAAC;QAOrC,kBAAa,GAAG,IAAI,oFAAe,EAAE,CAAC;QACtC,4BAAuB,GAAG,IAAI,6FAAmB,EAAE,CAAC;QAEpD,gBAAW,GAAG,CAAC,CAAC;QAGT,UAAK,GAAG,CAAC,CAAC;QACjB,eAAU,GAAG,CAAC,CAAC;QAER,kBAAa,GAAG;YAErB,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;YAC5B,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;YAC5B,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;YAC5B,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE;YAC9B,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE;SAC/B,CAAC;QACF,yBAAoB,GAAG,EAAE,CAAC;QACnB,WAAM,GAAG,EAAE,CAAC;QAEnB,sBAAiB,GAAE,IAAI,yEAAU,EAAE,CAAC;QACpC,WAAM,GAAY,KAAK,CAAC;QAIxB,qBAAgB,GAAG,CAAC,gBAAgB,EAAE,kBAAkB,EAAE,mBAAmB,EAAE,wBAAwB,EAAE,eAAe;YACtH,QAAQ,CAAC,CAAC;IAHiH,CAAC;IAM9H,QAAQ;QACN,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;QAC5B,IAAI,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;QAE7C,IAAI,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;QAC/C,IAAI,CAAC,oBAAoB,GAAI,YAAY,CAAC,oBAAoB,CAAC;QAC/D,IAAI,CAAC,aAAa,GAAG,IAAI,wDAAS,CAAC;YACjC,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnD,WAAW,EAAG,IAAI,0DAAW,CAAC,EAAE,CAAC;SAClC,CAAC;QAEF,IAAI,CAAC,MAAM,GAAG;YACZ,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE;YACrC,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE;YACtC,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE;YACnC,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE;YACnC,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE;YACjC,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE;YAClC,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE;YAClC,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE;YACpC,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,WAAW,EAAE;YACvC,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE;YACrC,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE;YACtC,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE;SACvC,CAAC;QAEF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QAC/C,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;QAChC,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QACvB,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;QACnC,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC,CAAC;QAChD,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,EAAE,EAAE;YAC3C,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACpB;QACD,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;QACrB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC9B,CAAC;IAED,WAAW;QACT,IAAI,OAAO,GACX;YACE,kBAAkB,EAAE,IAAI,CAAC,0BAA0B,CAAC,eAAe,CAAC,QAAQ,CAAC;SAC9E;QACD,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,OAAO,EAAC,KAAK,CAAC,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE;YACjG,IAAI,CAAC,kBAAkB,GAAG,YAAY,CAAC,IAAI,CAAC;YAC5C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,cAAc,CAAC,QAAQ,CAAC;QACjF,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,gBAAgB,CAAC,cAAc;QAC7B,IAAI,CAAC,aAAa,GAAG,cAAc,CAAC;QACpC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IAE7B,CAAC;IACD,gBAAgB;QACf,EAAE;QACD,IAAI,CAAC,uBAAuB,CAAC,SAAS,GAAG,IAAI,CAAC,0BAA0B,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;QACvG,IAAI,CAAC,uBAAuB,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;QACpD,IAAI,CAAC,uBAAuB,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;QACpD,IAAI,CAAC,uBAAuB,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC7C,IAAI,CAAC,uBAAuB,CAAC,SAAS,GAAG,CAAC,CAAC;QAC3C,IAAI,CAAC,uBAAuB,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;QACpD,IAAI,CAAC,uBAAuB,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QAC1E,IAAI,CAAC,uBAAuB,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC;QACtF,IAAI,CAAC,uBAAuB,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;QAC5F,IAAI,CAAC,uBAAuB,CAAC,MAAM,GAAG,SAAS,CAAC;QAChD,IAAI,CAAC,uBAAuB,CAAC,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC;QACjF,IAAI,CAAC,uBAAuB,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC;QAChF,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,uBAAuB,EAAC,IAAI,CAAC,CAAC,SAAS,CAAC,eAAe,CAAC,EAAE;YAC5G,IAAI,CAAC,iBAAiB,CAAC,sBAAsB,GAAG,eAAe,CAAC,IAAI,CAAC;YACrE,IAAI,CAAC,iBAAiB,CAAC,cAAc,GAAC,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC;YACxE,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,GAAC,IAAI,CAAC,kBAAkB,CAAC;YAClE,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,GAAG,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC;YACxF,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,GAAC,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC;YAC5E,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,GAAC,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC;YAC9E,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC,SAAS,CAAC,gBAAgB,CAAC,EAAE;gBACxG,IAAI,CAAC,cAAc,GAAG,gBAAgB,CAAC,IAAI,CAAC;gBAC5C,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAE9B,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAIM,oBAAoB;QAEzB,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC;QACpB,IAAI,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;QAC/C,IAAI,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC;QACvC,IAAI,CAAC,OAAO,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;QACrC,IAAI,CAAC,QAAQ,GAAG,cAAc,GAAG,GAAG;YAClC,eAAe,GAAG,GAAG,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,MAAM,GAAG,cAAc,GAAG,GAAG;YAChC,eAAe,GAAG,GAAG;YACrB,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE,cAAc,CAAC,CAAC;QAElD,MAAM,iBAAiB,GAAG;YACxB,UAAU,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;YACnC,QAAQ,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;YAC/B,sBAAsB,EAAE,IAAI,CAAC,0BAA0B,CAAC,eAAe,CAAC,YAAY,CAAC;SACtF,CAAC;QAEF,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC;QAEvC,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,GAAC,SAAS,GAAC,IAAI,CAAC,KAAK,GAAC,SAAS,GAAC,IAAI,CAAC,KAAK,GAAC,mBAAmB,EAAE,iBAAiB,EAAC,KAAK,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAC9J,IAAI,QAAQ,CAAC,MAAM,CAAC,OAAO,KAAK,SAAS,EAAE;gBAC3C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACnB,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC,IAAI,CAAC;gBACvC,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,WAAW,CAAC;gBACvC,IAAI,CAAC,SAAS,GAAC,KAAK,CAAC;gBACrB,IAAI,CAAC,gBAAgB,EAAE,CAAC;aACzB;iBAAM;gBACL,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;QACD,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QACpB,CAAC,CAAC;IAEJ,CAAC;IAGD,QAAQ;QACN,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC;QACpB,IAAI,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;QAC/C,IAAI,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC;QACvC,IAAI,CAAC,OAAO,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;QACrC,IAAI,CAAC,QAAQ,GAAG,cAAc,GAAG,GAAG;YAClC,eAAe,GAAG,GAAG,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,MAAM,GAAG,cAAc,GAAG,GAAG;YAChC,eAAe,GAAG,GAAG;YACrB,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE,cAAc,CAAC,CAAC;QAElD,MAAM,iBAAiB,GAAG;YACxB,UAAU,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;YACnC,QAAQ,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;YAC/B,sBAAsB,EAAE,IAAI,CAAC,0BAA0B,CAAC,eAAe,CAAC,YAAY,CAAC;SACtF,CAAC;QAEF,IAAI,CAAC,KAAK,GAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACpC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC;QAEtC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,GAAC,SAAS,GAAC,IAAI,CAAC,KAAK,GAAC,SAAS,GAAC,IAAI,CAAC,KAAK,GAAC,mBAAmB,EAAE,iBAAiB,EAAC,KAAK,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACxJ,IAAI,QAAQ,CAAC,MAAM,CAAC,OAAO,KAAK,SAAS,EAAE;gBAC3C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACnB,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC,IAAI,CAAC;gBACvC,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,WAAW,CAAC;gBACvC,IAAI,CAAC,SAAS,GAAC,KAAK,CAAC;gBACrB,IAAI,CAAC,gBAAgB,EAAE,CAAC;aACzB;iBAAM;gBACL,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;QACD,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QACpB,CAAC,CAAC;IAEJ,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC;QACpB,IAAI,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;QAC/C,IAAI,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC;QACvC,IAAI,CAAC,OAAO,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;QACrC,IAAI,CAAC,QAAQ,GAAG,cAAc,GAAG,GAAG;YAClC,eAAe,GAAG,GAAG,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,MAAM,GAAG,cAAc,GAAG,GAAG;YAChC,eAAe,GAAG,GAAG;YACrB,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE,cAAc,CAAC,CAAC;QAElD,MAAM,iBAAiB,GAAG;YACxB,UAAU,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;YACnC,QAAQ,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;YAC/B,sBAAsB,EAAE,IAAI,CAAC,0BAA0B,CAAC,eAAe,CAAC,YAAY,CAAC;SACtF,CAAC;QAEF,IAAI,CAAC,KAAK,GAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACpC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC;QAEtC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,GAAC,SAAS,GAAC,IAAI,CAAC,KAAK,GAAC,SAAS,GAAC,IAAI,CAAC,KAAK,GAAC,mBAAmB,EAAE,iBAAiB,EAAC,KAAK,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACxJ,IAAI,QAAQ,CAAC,MAAM,CAAC,OAAO,KAAK,SAAS,EAAE;gBAC3C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACnB,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC,IAAI,CAAC;gBACvC,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,WAAW,CAAC;gBACvC,IAAI,CAAC,SAAS,GAAC,KAAK,CAAC;gBACrB,IAAI,CAAC,gBAAgB,EAAE,CAAC;aACzB;iBAAM;gBACL,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;QACD,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QACpB,CAAC,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,MAAM,EAAE,OAAO;QACpB,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC1B,IAAI,OAAO,IAAI,IAAI,EAAE;YACnB,OAAO,GAAG,UAAU;SACrB;QACD,IAAI,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC3B,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;YACnC,OAAO,IAAI,CAAC;SACb;QACD,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;YACpC,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;gBACnC,OAAO,IAAI,CAAC;aACb;SACF;QACD,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;YACxE,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;gBACnC,OAAO,IAAI,CAAC;aACb;SACF;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,4BAA4B,CAAC,SAAc;QACzC,IAAI,SAAS,IAAI,IAAI,EAAE;YACrB,IAAI,eAAe,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC;YAC1C,IAAI,UAAU,GAAG,IAAI,IAAI,EAAE,CAAC;YAC5B,eAAe,CAAC,UAAU,CAAC,eAAe,CAAC,UAAU,EAAE,GAAG,UAAU,CAAC,iBAAiB,EAAE,CAAC,CAAC;YAC1F,IAAI,SAAS,GAAG,eAAe,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACtD,OAAO,SAAS,CAAC,CAAC,CAAC,CAAC;SACrB;aAAM;YAAE,OAAO,IAAI,CAAC;SAAE;IACzB,CAAC;IAED,aAAa,CAAC,IAAS;QAErB,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1B,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC;QAC/B,IAAI,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC1E,OAAO,WAAW,CAAC;IACrB,CAAC;IAED,kBAAkB,CAAC,SAAc;QAC/B,IAAI,SAAS,IAAI,IAAI,EAAE;YACrB,IAAI,eAAe,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC;YAC1C,IAAI,UAAU,GAAG,IAAI,IAAI,EAAE,CAAC;YAC5B,eAAe,CAAC,UAAU,CAAC,eAAe,CAAC,UAAU,EAAE,GAAG,UAAU,CAAC,iBAAiB,EAAE,CAAC,CAAC;YAC1F,IAAI,SAAS,GAAG,eAAe,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACtD,OAAO,SAAS,CAAC,CAAC,CAAC,CAAC;SACrB;aAAM;YAAE,OAAO,IAAI,CAAC;SAAE;IACzB,CAAC;IAED,sBAAsB,CAAC,UAAU;QAE/B,IAAI,cAAc,GAAG,IAAI,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QACzD,QAAQ,cAAc,CAAC,MAAM,EAAE,EAAE;YAC/B,KAAK,CAAC;gBAAE,IAAI,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,IAAI,CAAC,EAAE;oBAC/D,OAAO,YAAY;iBACpB;gBACC,MAAM;YACR,KAAK,CAAC;gBAAE,IAAI,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,IAAI,CAAC,EAAE;oBAC/D,OAAO,YAAY;iBACpB;gBACC,MAAM;YACR,KAAK,CAAC;gBAAE,IAAI,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,IAAI,CAAC,EAAE;oBAChE,OAAO,YAAY;iBACpB;gBACC,MAAM;YACR,KAAK,CAAC;gBAAE,IAAI,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,IAAI,CAAC,EAAE;oBAClE,OAAO,YAAY;iBACpB;gBACC,MAAM;YACR,KAAK,CAAC;gBAAE,IAAI,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,IAAI,CAAC,EAAE;oBACjE,OAAO,YAAY;iBACpB;gBACC,MAAM;YACR,KAAK,CAAC;gBAAE,IAAI,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,IAAI,CAAC,EAAE;oBAC/D,OAAO,YAAY;iBACpB;gBACC,MAAM;YACR,KAAK,CAAC;gBAAE,IAAI,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,IAAI,CAAC,EAAE;oBACjE,OAAO,YAAY;iBACpB;gBACC,MAAM;SACT;IACH,CAAC;IAED,SAAS,CAAC,KAAK,EAAE,IAAI;QAEnB,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE,IAAI,KAAK,IAAI,EAAE,EAAE;YACpG,OAAO,EAAE,CAAC;SACX;aACI,IAAI,KAAK,IAAI,CAAC,EAAE;YACnB,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE;gBACjB,OAAO,EAAE,CAAC;aACX;iBAAM;gBACL,OAAO,EAAE,CAAC;aACX;SACF;aACI,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE,EAAE;YAC9D,OAAO,EAAE,CAAC;SACX;IACH,CAAC;IAED,WAAW,CAAC,QAAQ;QAClB,IAAI,QAAQ,IAAI,EAAE,IAAI,QAAQ,IAAI,IAAI,IAAI,QAAQ,IAAI,SAAS,EAAE;YAC/D,IAAI,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC5B,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;SACjC;aAAM;YACL,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAED,iBAAiB,CAAC,KAAK;QACrB,OAAO,CAAC,GAAG,CAAC,eAAe,GAAG,KAAK,CAAC;QACpC,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;QAClC,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;IAC5E,CAAC;IACD,WAAW;QAET,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC;QACpB,IAAI,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;QAC/C,IAAI,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC;QACvC,IAAI,CAAC,OAAO,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;QACrC,IAAI,CAAC,QAAQ,GAAG,cAAc,GAAG,GAAG;YAClC,eAAe,GAAG,GAAG,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,MAAM,GAAG,cAAc,GAAG,GAAG;YAChC,eAAe,GAAG,GAAG;YACrB,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE,cAAc,CAAC,CAAC;QAElD,MAAM,iBAAiB,GAAG;YACxB,UAAU,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;YACnC,QAAQ,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;YAC/B,sBAAsB,EAAE,IAAI,CAAC,0BAA0B,CAAC,eAAe,CAAC,YAAY,CAAC;SACtF,CAAC;QAEF,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC;QAEvC,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,GAAC,SAAS,GAAC,IAAI,CAAC,KAAK,GAAC,SAAS,GAAC,IAAI,CAAC,KAAK,GAAC,mBAAmB,EAAE,iBAAiB,EAAC,KAAK,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAC9J,IAAI,QAAQ,CAAC,MAAM,CAAC,OAAO,KAAK,SAAS,EAAE;gBAC3C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACnB,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC,IAAI,CAAC;gBACvC,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,WAAW,CAAC;gBACvC,IAAI,CAAC,SAAS,GAAC,KAAK,CAAC;gBACrB,IAAI,CAAC,gBAAgB,EAAE,CAAC;aACzB;iBAAM;gBACL,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;QACD,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QACpB,CAAC,CAAC;IACJ,CAAC;CAGF","file":"attendance-attendance-module-ngfactory-es2015.js","sourcesContent":["<div class=\"dashboard__content\">\n    <h3>Attendance</h3>\n    <div class=\"inner__section  px-0\">\n        <section class=\"section-1 attendance\">\n            <h5>Employee Attendance</h5>\n            <div class=\"search__container float-right\">\n\n                <div class=\"form-group\">\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"filterkey\"  placeholder=\"Search\">\n                </div>\n                <div class=\"filter align-self-center mr-4\">\n                    <p class=\"mb-0\" (click) =\"filterByClicked($event)\"><span class=\"icon_filter\"></span> Filter</p>\n                </div>\n                <div class=\"open__modal icon_add\" data-toggle=\"dropdown\" data-target=\"#downloadLink\">\n\n                </div>\n                <div class=\"dropdown-menu dropdown-menu-left downloadLink\" aria-labelledby=\"downloadLink\">\n                    <a class=\"dropdown-item\" href=\"#.\" data-toggle=\"modal\" data-target=\"#import__attendance\">Update\n                        Attendance</a>\n                    <a class=\"dropdown-item\" role=\"button\" tabindex=\"0\" (click)=\"sampleDownloadFile()\" >Download Report</a>\n                </div>\n            </div>\n\n        </section>\n        <div class=\"clearfix\"></div>\n        <div class=\"filter__input\"id='flter'>\n            <div class=\"row\">\n                <div class=\"col-lg-10\">\n                    <h6 >Filter by:</h6>\n                    <form   [formGroup]=\"attendanceFilterForm\">\n                    <div class=\"row\">\n                        <div class=\"col-lg-2\">\n                            <div class=\"form-group\">\n                                <label class=\"custom-label align-self-center\">Form : </label>\n                                <span data-toggle=\"modal\" data-target=\".fromdate-example-modal-lg\">\n                                    <input class=\"form-control CustomForm-control\" name=\"fromDate\" type=\"text\" formControlName=\"fromDate\" placeholder=\"Select Date *\"\n                                        (selected)=\"onFilterFormDatechange($event)\">\n                                    <span class=\"calender_icon icon_date_picker\"></span>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-lg-2\">\n                            <div class=\"form-group\">\n                                <label class=\"custom-label align-self-center\"> to : </label>\n                                <span data-toggle=\"modal\" data-target=\".toDate-example-modal-lg\">\n                                    <input class=\"form-control CustomForm-control\" name=\"toDate\" type=\"text\" formControlName=\"toDate\" placeholder=\"Select Date *\"\n                                        (selected)=\"onFilterToDatechange($event)\">\n                                    <span class=\"calender_icon icon_date_picker\"></span>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-lg-4\">\n                            <div class=\"form-group\">\n                                <label for=\"\" class=\"custom-label align-self-center\">Department : </label>\n                                <select class=\"form-control CustomForm-control\" formControlName=\"departments\" id=\"departments\">\n                                    <option *ngFor=\"let department of departmentslist\" [ngValue]=\"department\">{{department.departmentDescription}} </option>\n                                </select>\n                            </div>\n                        </div>\n                        <div class=\"col-lg-4\">\n                            <div class=\"form-group\">\n                                <label class=\"custom-label align-self-center\">Employee : </label>\n                                <select class=\"form-control CustomForm-control\" formControlName=\"employee\" id=\"employee\">\n                                    <option *ngFor=\"let employee of filterEmployeeList\" [ngValue]=\"employee\">{{ employee.employeeFirstName}} ({{employee.employeeCode}}) </option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                    </form>\n                </div>\n                <div class=\"col-lg-2 align-self-center\">\n                    <div class=\"bottom__btn mt-2\">\n                        <button class=\"btn btn-primary submit\" data-dismiss=\"modal\" type=\"submit\"  (click)='submitFilter()'[disabled]=\"!attendanceFilterForm.valid\">Submit</button>\n                        <button class=\"btn btn-primary cancel\" data-dismiss=\"modal\" type=\"submit\" (click)='closeFilterForm()' >clear</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <section class=\"section-2\">\n            <div class=\"data__table\">\n                <div class=\"table-container\">\n                    <table class=\"table support__table table-fixed\">\n                        <thead>\n                            <tr class=\"border__hide\">\n                                <th scope=\"col\" class=\"col-md-2 pl-0\">Date </th>\n                                <th scope=\"col\" class=\"col-md-4 pl-0\">Employee Name</th>\n                                <th scope=\"col\" class=\"col-md-1 pl-0\">Shift</th>\n                                <th scope=\"col\" class=\"col-md-1 pl-0\">In-Time</th>\n                                <th scope=\"col\" class=\"col-md-1 pl-0\">Out-Time</th>\n                                <th scope=\"col\" class=\"col-md-2 pl-0\">Working Hours</th>\n                                <th scope=\"col\" class=\"col-md-1 pl-0\">Access Time</th>\n\n                            </tr>\n                        </thead>\n                        <tbody class=\"scroll-2\" id='tableReSize'>\n                            <tr *ngFor=\"let attendance of employeeAttendanceDataList | search: filterkey | sort: order: orderBy  | paginate: {start: start , limit: limit }; let i = index;\" id=\"employeeAttendanceData\">\n                                <td scope=\"row\" class=\"col-md-2\">{{formateDateAndTime(attendance.attendanceDate,\"date\")}}</td>\n                                <td scope=\"row\" class=\"col-md-4 d-flex\">\n                                    <div class=\"placeholder bg__brown\"> <img class=\"profile__images\"\n                                        src=\"data:image/png;base64,{{attendance.gemsEmployeeMaster.gemsUserMaster.profileImgData}}\"></div>\n                                    <p class=\"employeeFirstName\">{{attendance.gemsEmployeeMaster.employeeFirstName}}</p>\n                                </td>\n                                <td scope=\"row\" class=\"col-md-1\">{{attendance.gemsEmployeeMaster.gemsEmployeeShiftDetail.shiftName}}</td>\n                                <td scope=\"row\" class=\"col-md-1\">{{formateDateAndTime(attendance.attendanceInTime,\"Time\")}}</td>\n                                <td scope=\"row\" class=\"col-md-1\">{{formateDateAndTime(attendance.attendanceOutTime,\"Time\")}}</td>\n                                <td scope=\"row\" class=\"col-md-2\">{{getDuration(attendance.durationBtwInOut)}}</td>\n                                <td scope=\"row\" class=\"col-md-1 text-center\">\n                                    <span class=\"icon_show_password\" data-toggle=\"modal\" (click)='getAttendanceSwipes(attendance)' data-target=\"#access__time\"></span>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n                <div class=\"table__bottom text-right\"  *ngIf=\"(employeeAttendanceDataList | search:filterkey)?.length  > 10\">\n                        <span class=\"items__nos\">\n                            <div class=\"form-group page__section\">\n                                <label for=\"pageNo\">Items per page:</label>\n                                <select class=\"form-control\" [(ngModel)]=\"selectedItemsPerPage\" id=\"pageNo\"\n                                    (ngModelChange)=\"changeItemPerPage($event)\">\n                                    <option *ngFor=\"let perpageVal of perpageOption\" [value]=\"perpageVal.value\">\n                                        {{perpageVal.label}}</option>\n                                </select>\n                            </div>\n                        </span>\n                        <app-chutti-pagination [currentPage]=\"currentPage\" [count]=\"totalCount\" [pagesToShow]=\"totalPages\"\n                            (goPrev)=\"goToPrev()\" (goNext)=\"goToNext()\" (onPage)=\"goToPageNo($event)\"></app-chutti-pagination>\n                </div>\n            </div>\n        </section>\n    </div>\n\n</div>\n\n<!--Import Attendance Modal -->\n<div class=\"modal fade\" id=\"import__attendance\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"import__attendanceLabel\"\n    aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-body\">\n                <div class=\"import__modal\">\n                    <h5 class=\"mb-3\">Import Attendance</h5>\n                    <form [formGroup]=\"uploadImportAttendanceForm\" class=\"text-center\">\n                    <div class=\"form-group mt-4\">\n                        <label class=\"form-label\" for=\"\">Assign Employee</label>\n                        <select class=\"form-control\"  [(ngModel)]=\"selectedImportUsing\" formControlName='selectedImportUsing'\n                        (ngModelChange)=\"changeItemImportUsing($event)\"id=\"exampleFormControlSelect1\">\n                        <option *ngFor=\"let importoption of importOption\" [value]=\"importoption.value\">\n                                {{importoption.label}}</option>\n                        </select>\n                    </div>\n                    <div class=\"download text-center\" style=\"position: relative;\">\n                        <label  for=\"fileToUpload\"class=\"download-file my-4\"><img src=\"../../../assets/images/cloud-computing.svg\">{{uploadFileName}}</label>\n                            <input class=\"download-file-input my-4\" type=\"file\" accept=\".xls,.xlsx,.csv\"  (change)=\"onFileSelect($event)\" id=\"fileToUpload\">\n                    </div>\n                    <a  class=\"text-center\"role=\"button\" tabindex=\"0\"(click)=\"sampleDownloadFile()\">Download a Sample</a>\n                    <div class=\"bottom__btn mt-5\">\n                        <button class=\"btn btn-primary cancel\" data-dismiss=\"modal\" (click)=\"resetForm()\" >Cancel</button>\n                        <button class=\"btn btn-primary submit\" type=\"submit\" (click)=\"uploadEmployeeAttendance()\" [disabled]=\"!uploadImportAttendanceForm.valid\">Submit</button>\n                    </div>\n                </form>\n                </div>\n            </div>\n\n        </div>\n\n    </div>\n</div>\n\n<!--Access Time Modal -->\n<div class=\"modal fade\" id=\"access__time\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"access__timeLabel\"\n    aria-hidden=\"true\">\n    <div class=\"modal-dialog timeModal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-body\">\n                <div class=\"accessTime\">\n                    <h5>Access Time <span class=\"icon_cancel float-right\" data-dismiss=\"modal\" aria-label=\"Close\">\n                        </span></h5>\n                    <div class=\"row mt-4\">\n                        <div class=\"col-lg-8\">\n                            <div class=\"d-flex name__select \">\n                                <span class=\"icon_arrow_thin_left nav-arrow align-self-center\"></span>\n                                <div class=\"placeholder bg__brown\"> <img class=\"profile__images\"\n                                    src=\"{{showAttendanceSwipeProfileImage}}\"></div>\n                                <p class=\"m-0 align-self-center pl-2\">{{showAttendanceSwipeEmployeeName}}</p>\n                                <span class=\"icon_arrow_thin_right nav-arrow align-self-center pl-2\"></span>\n                            </div>\n                        </div>\n                        <div class=\"col-lg-4\">\n                            <h6 class=\"access__date\">\n                                <div class=\"d-flex date__select justify-content-end\">\n                                    <span class=\"icon_arrow_thin_left nav-arrow align-self-center\"></span>\n                                    <p class=\"m-0 align-self-center pl-2\">{{formateDateAndTime(showAttendanceSwipeDate,\"date\")}}</p>\n                                    <span class=\"icon_arrow_thin_right nav-arrow align-self-center pl-2\"></span>\n                                </div>\n                            </h6>\n                        </div>\n                        <div class=\"col-lg-12 mt-4\">\n                            <table class=\"table support__table\">\n                                <thead>\n                                    <tr class=\"border__hide\">\n                                        <th scope=\"col\">Time </th>\n                                        <th scope=\"col\" class=\"pl-0\">Accessed At</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr *ngFor='let cardSwipe of attendanceSwipeList'>\n                                        <td scope=\"row\">{{formateDateAndTime(cardSwipe.accessedOn,'time')}}</td>\n                                        <td scope=\"row\">{{cardSwipe.accessedAT}}</td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n\n    </div>\n</div>\n<!-- Form Date Model -->\n<div class=\"modal fade fromdate-example-modal-lg\" tabindex=\"-1\" id=\"formdatemodel\" role=\"dialog\"\n    aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\" data-backdrop=\"static\" data-keyboard=\"false\">\n    <div class=\"modal-dialog modal-lg modal-dialog-centered permissionModel\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header row mx-0 px-0 mt-3 date__picker--header\">\n                <div class=\"col-md-4 align-self-center time__title\">\n                </div>\n                <div class=\"col-md-8 float-right text-right datePicker__header--right align-self-center\">\n                    <a class=\"reset-permission  align-self-center\" href=\"javascript:void(0);\"\n                        (click)='resetFilterFormDate()'>Reset</a>\n                    <span class=\"pl-2 ml-2 permissionDate  align-self-center\"><span class=\"icon_date_picker\"></span>\n                        {{showFromDate}}</span>\n                    <!-- <span class=\"pl-2 ml-2 permissionStartTimepicker  text-right  align-self-center\">\n                        <span class=\"icon_time  align-self-center\"></span>\n                    </span> -->\n                </div>\n            </div>\n            <div class=\"row justify-content-center px-0 mx-0\">\n                <div class=\"col-7 text-center\">\n                    <ngb-datepicker #d (select)=\"onFilterFormDatechange($event)\" [minDate]=\"{year: 2010, month: 1, day: 1}\"\n                    [maxDate]=\"{year: 2048, month: 12, day: 31}\" class=\"date__table\">\n                    </ngb-datepicker>\n                </div>\n            </div>\n            <div class=\"row justify-content-end mx-0 px-0 mb-5\">\n                <div class=\"col-6  text-right time__submit\">\n                    <button type=\"button\" class=\"btn cancel-button\" data-dismiss=\"modal\">Cancel</button> \n                    <!-- (click)='resetPermissionForm()' -->\n                    <button type=\"button\" class=\"btn theme__btn btn-hover color-3\" data-dismiss=\"modal\">Done</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<!-- To Date Model -->\n<div class=\"modal fade toDate-example-modal-lg\" tabindex=\"-1\" id=\"todatemodel\" role=\"dialog\"\n    aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\" data-backdrop=\"static\" data-keyboard=\"false\">\n    <div class=\"modal-dialog modal-lg modal-dialog-centered permissionModel\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header row mx-0 px-0 mt-3 date__picker--header\">\n                <div class=\"col-md-4 align-self-center time__title\">\n                </div>\n                <div class=\"col-md-8 float-right text-right datePicker__header--right align-self-center\">\n                    <a class=\"reset-permission  align-self-center\" href=\"javascript:void(0);\"\n                        (click)='resetFilterToDate()'>Reset</a>\n                    <span class=\"pl-2 ml-2 permissionDate  align-self-center\"><span class=\"icon_date_picker\"></span>\n                        {{showToDate}}</span>\n                    <!-- <span class=\"pl-2 ml-2 permissionStartTimepicker  text-right  align-self-center\">\n                        <span class=\"icon_time  align-self-center\"></span>\n                    </span> -->\n                </div>\n            </div>\n            <div class=\"row justify-content-center px-0 mx-0\">\n                <div class=\"col-7 text-center\">\n                    <ngb-datepicker #d (select)=\"onFilterToDatechange($event)\" class=\"date__table\">\n                    </ngb-datepicker>\n                </div>\n            </div>\n            <div class=\"row justify-content-end mx-0 px-0 mb-5\">\n                <div class=\"col-6  text-right time__submit\">\n                    <button type=\"button\" class=\"btn cancel-button\" data-dismiss=\"modal\">Cancel</button> \n                    <!-- (click)='resetPermissionForm()' -->\n                    <button type=\"button\" class=\"btn theme__btn btn-hover color-3\" data-dismiss=\"modal\">Done</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { EncryptDecryptLocalStorageService } from 'src/app/services/encrypt-decrypt-localstorage.service';\n// import { AttendanceLeave } from 'src/app/model/attendanceDetail.model';\nimport { Genericservice } from 'src/app/services/genericservices';\nimport { UrlConstant } from 'src/app/services/urlConstant';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\ndeclare var $: any\n\n@Component({\n  selector: 'app-attendance',\n  templateUrl: './attendance.component.html',\n  styleUrls: ['./attendance.component.scss']\n})\nexport class AttendanceComponent implements OnInit {\n  uploadImportAttendanceForm: FormGroup;\n  attendanceFilterForm: FormGroup;\n  departmentslist: any;\n  isData: boolean = false;\n  selectedItemsPerPage = 10;\n  selectedImportUsing: string;\n  totalCount: any;\n  start: any;\n  limit: any;\n  totalPages: number;\n  currentPage = 1;\n  filterkey;\n  status: any = \"Active\";\n  selectedStatus: any;\n  order: any;\n  orderBy: any;\n  public importOption = [\n    { value: 'attendanceID', label: 'Attendance Id' },\n    { value: 'employeeCode', label: 'Employee Id' },\n  ];\n  public perpageOption = [\n    { value: '10', label: '10' },\n    { value: '20', label: '20' },\n    { value: '50', label: '50' },\n    { value: '100', label: '100' },\n    { value: '500', label: '500' },\n  ];\n  employeeAttendanceDataList: any;\n  employeeAttendanceData: any;\n  uploadFileName: string = 'Upload .xls /.xlxs /.csv file';\n  public showFromDate: any;\n  public showToDate: any;\n  public showDateToModel: any = 'Date';\n  public methodChangeFromDate: boolean;\n  public filterEmployeeList: any;\n  public attendanceSwipeList: any;\n  public showAttendanceSwipeEmployeeName:string;\n  public showAttendanceSwipeProfileImage:any;\n  public showAttendanceSwipeDate: any;\n  constructor(private genericservice: Genericservice, private encryptdecryptlocalstorage: EncryptDecryptLocalStorageService, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.start = 0;\n    this.limit = this.selectedItemsPerPage;\n    this.getEmployeeAttendanceByMonth();\n    this.inputActive();\n    this.createForm();\n\n  }\n  createForm() {\n    this.attendanceFilterForm = this.formBuilder.group({\n      fromDate: ['', Validators.required],\n      toDate: ['', Validators.required],\n      departments: [''],\n      employee: ['']\n    });\n    this.uploadImportAttendanceForm = this.formBuilder.group({\n      file: ['', Validators.required],\n      selectedImportUsing: ['', Validators.required],\n    })\n  }\n  changeItemPerPage(event: any) {\n    // this.selectedItemsPerPage = event;\n    // this.getEmployeeAttendanceByMonth();\n    this.currentPage = 1;\n    this.selectedItemsPerPage = parseInt(event);\n    this.start = 0;\n    this.limit = this.selectedItemsPerPage;\n    this.paginatedEemployeeAttendanceDataList();\n    this.findItemsPerPage();\n  }\n\n  findItemsPerPage() {\n    this.totalPages = Math.ceil(this.totalCount / +this.selectedItemsPerPage);\n  }\n\n  public getEmployeeAttendanceByMonth() {\n    var date = new Date(); \n    var firstDay =  date.getFullYear()+'-'+ date.getMonth()+'-'+ 1; \n    var yesterDay =  date.getFullYear()+'-'+ date.getMonth()+'-'+(date.getDate()-1); \n    let payload = { \"gemsEmployeeMaster\": { \"gemsOrganisation\": { \"gemsOrgId\": this.encryptdecryptlocalstorage.getLocalStorage('organizationId') }, \"gemsDepartment\": null } }\n    this.genericservice.post(UrlConstant.getEmployeeAttendanceApi + '?fromDate='+firstDay+'&toDate='+yesterDay+'&reportType=attendance', payload, false).subscribe(response => {\n      if (response !== null) {\n        if (response.data !== null) {\n          this.isData = true;\n          this.employeeAttendanceDataList = response.data\n          this.totalCount = response.totalResult;\n          this.paginatedEemployeeAttendanceDataList();\n          this.findItemsPerPage();\n        } else {\n          this.isData = false;\n        }\n      }\n    })\n  }\n\n  paginatedEemployeeAttendanceDataList() {\n    this.employeeAttendanceData = this.employeeAttendanceDataList.slice(this.start, this.limit);\n  }\n\n  goToNext() {\n    this.currentPage++;\n    this.start = this.start + this.selectedItemsPerPage;\n    this.limit = this.limit + this.selectedItemsPerPage;\n    this.employeeAttendanceData = this.employeeAttendanceDataList.slice(this.start, this.limit);\n  }\n\n  goToPrev() {\n    this.currentPage--;\n    this.start = this.start - this.selectedItemsPerPage;\n    this.limit = this.limit - this.selectedItemsPerPage;\n    this.employeeAttendanceData = this.employeeAttendanceDataList.slice(this.start, this.limit);\n  }\n\n  formateDateAndTime(dateParam: string | number | Date, type: String): any {\n    var date = new Date(dateParam);\n    if (type === 'date') {\n      var months = ['JAN', 'FEB', 'MAR', 'APR', 'MAY',\n        'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'];\n      var day = date.getDate();\n      var year = date.getFullYear();\n      var month = months[date.getMonth()];\n      return day + \" \" + month + \" \" + year;\n    } else {\n      return date.toLocaleTimeString();\n    }\n  }\n\n  getDuration(duration: any) {\n    if (duration != '' && duration != null && duration != undefined) {\n      let d = duration.split(':');\n      return d[0] + 'h ' + d[1] + 'm';\n    } else {\n      return '--';\n    }\n  }\n\n  inputActive() {\n    $(function () {\n      const inputValueCheck = $(this).val();\n      if (inputValueCheck === '') {\n        $('.form-group').addClass('focused');\n      }\n    });\n\n    $('.form-control').focus(function () {\n      $(this)\n        .parents('.form-group')\n        .addClass('focused');\n    });\n\n    $('.form-control').blur(function () {\n      const inputValue = $(this).val();\n      if (inputValue === '') {\n        $(this).removeClass('filled');\n        $(this)\n          .parents('.form-group')\n          .removeClass('focused');\n      } else {\n        $(this).addClass('filled');\n      }\n    });\n  }\n\n  public changeItemImportUsing(event: any) {\n    this.selectedImportUsing = event;\n  }\n\n  public onFileSelect(event: any) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.uploadFileName = file.name;\n      this.uploadImportAttendanceForm.get('file').setValue(file);\n    }\n\n  }\n\n  public uploadEmployeeAttendance() {\n    if (this.uploadImportAttendanceForm.valid) {\n      const formData = new FormData();\n      formData.append('file', this.uploadImportAttendanceForm.get('file').value);\n      formData.append('field', this.selectedImportUsing);\n      formData.append('orgId', this.encryptdecryptlocalstorage.getLocalStorage('organizationId'));\n      this.genericservice.post(UrlConstant.importAttendanceApi, formData, false).subscribe(response => {\n        if (response.status.success === 'Success') {\n          this.uploadFileName = 'Upload .xls /.xlxs /.csv file';\n          $(\"#import__attendance .close\").click()\n          this.resetForm();\n\n        }\n      })\n    }\n\n  }\n\n  filterByClicked(event: any) {\n    this.getDepartmentLists();\n    this.getEmployeeList()\n    $(\"#flter\").addClass(\"active\");\n    $(\"#tableReSize\").removeClass(\"scroll-2\");\n    $(\"#tableReSize\").addClass(\"scroll-1\");\n\n\n  }\n\n  closeFilterForm() {\n    $(\"#flter\").removeClass(\"active\");\n    $(\"#tableReSize\").removeClass(\"scroll-1\");\n    $(\"#tableReSize\").addClass(\"scroll-2\");\n    this.attendanceFilterForm.reset();\n  }\n  sampleDownloadFile() {\n    location.href = UrlConstant.downloadAttendanceApi;\n  }\n\n  resetForm() {\n    this.uploadImportAttendanceForm.reset();\n    this.uploadFileName = 'Upload .xls /.xlxs /.csv file';\n  }\n\n  getDepartmentLists() {\n    let payload = { \"gemsOrganisation\": { \"gemsOrgId\": this.encryptdecryptlocalstorage.getLocalStorage('organizationId'), } }\n    this.genericservice.post(UrlConstant.leavereportsApi, payload, false).subscribe(departmentresponse => {\n      this.departmentslist = departmentresponse.data;\n    })\n  }\n\n  getEmployeeList() {\n    let payload = { \"gemsOrganisationId\": this.encryptdecryptlocalstorage.getLocalStorage('organizationId') }\n    this.genericservice.post(UrlConstant.leavereportsemployeeApi, payload, false).subscribe(employeelistresponse => {\n      this.filterEmployeeList = employeelistresponse.data;\n    })\n  }\n\n  submitFilter() {\n    if (this.attendanceFilterForm.valid) {\n      var gemsEmployeeMaster = this.attendanceFilterForm.controls['employee'].value;\n      let payload = {\n        \"gemsEmployeeMaster\": {\n          \"gemsEmployeeMasterId\": gemsEmployeeMaster.gemsEmployeeMasterId,\n          \"gemsOrganisation\": {\n            \"gemsOrgId\": this.encryptdecryptlocalstorage.getLocalStorage('organizationId')\n          },\n          \"gemsDepartment\": this.attendanceFilterForm.controls['departments'].value\n        },\n      }\n      this.genericservice.post(UrlConstant.getEmployeeAttendanceApi + '?fromDate=' + this.attendanceFilterForm.controls['fromDate'].value + '&toDate=' + this.attendanceFilterForm.controls['toDate'].value + '&reportType=attendance', payload, false).subscribe(response => {\n        if (response !== null) {\n          this.employeeAttendanceDataList = response.data\n          this.totalCount = response.totalResult;\n          if (response.data !== null) {\n            this.isData = true;\n            this.paginatedEemployeeAttendanceDataList();\n            this.findItemsPerPage();\n          }\n          else {\n            this.isData = false;\n          }\n        }\n      })\n\n    }\n\n  }\n\n  onFilterFormDatechange(event: any) {\n    this.methodChangeFromDate = true;\n    if (event !== undefined) {\n      var date = event.year + '-' + event.month + '-' + event.day;\n      this.attendanceFilterForm.get('fromDate').setValue(date)\n      this.showFromDate = date;\n    }\n  }\n  onFilterToDatechange(event: any) {\n    this.methodChangeFromDate = false;\n    if (event !== undefined) {\n      var date = event.year + '-' + event.month + '-' + event.day;\n      this.showToDate = date;\n      this.attendanceFilterForm.get('toDate').setValue(date);\n    }\n  }\n  resetFilterFormDate() {\n    this.attendanceFilterForm.get('fromDate').setValue('')\n    this.showFromDate = '';\n  }\n  resetFilterToDate() {\n    this.showToDate = '';\n    this.attendanceFilterForm.get('toDate').setValue('');\n  }\n\n  getAttendanceSwipes(attendance: any) {\n    if(attendance !== null) {\n      this.showAttendanceSwipeDate = attendance.attendanceDate;\n      this.showAttendanceSwipeEmployeeName = attendance.gemsEmployeeMaster.employeeFirstName;\n      this.showAttendanceSwipeProfileImage ='data:image/png;base64,'+ attendance.gemsEmployeeMaster.gemsUserMaster.profileImgData;\n      let payload = {}\n      this.genericservice.post(UrlConstant.getAttendanceSwipesApi, payload, false).subscribe(response => {\n        if(response !== null) {\n          this.attendanceSwipeList = response.data;\n        }\n      })\n    }\n\n  }\n\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AttendanceComponent } from './attendance.component';\nimport { AttendanceRouting } from './attendance.routing';\nimport { PaginationModule } from '../../user-module/chutti-pagination/chutti-pagination.module';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { SharedModule } from 'src/app/commons/chutti-filters/ShareModule';\n@NgModule({\n    declarations: [AttendanceComponent,],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        AttendanceRouting,\n        PaginationModule,\n        NgbModule,\n        SharedModule,\n    ],\n\n})\nexport class AttendanceModule { }\n","import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { AttendanceComponent } from './attendance.component';\nconst routes = [\n    { path: '', component: AttendanceComponent },\n]\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class AttendanceRouting {}\n","<ngx-loading-bar [color]=\"'#6747D4'\" [includeSpinner]='false'></ngx-loading-bar>\n<div class=\"attendance dashboard__content\">\n    <h3>Attendance</h3>\n    <div class=\"inner__section attendance__section rounded\">\n            <h5>Attendance Records</h5>\n            <app-my-attendance></app-my-attendance>\n        </div>\n    <!-- <div *ngIf=\"isManager\" class=\"nav nav-tabs attendance__tab\" id=\"nav-tab\" role=\"tablist\">\n        <a class=\" active\" id=\"nav-home-tab\" data-toggle=\"tab\" href=\"#nav-home\" role=\"tab\" aria-controls=\"nav-home\"\n            aria-selected=\"true\">My Attendance</a>\n        <a class=\"\" id=\"nav-profile-tab\" data-toggle=\"tab\" href=\"#nav-profile\" role=\"tab\" aria-controls=\"nav-profile\"\n            aria-selected=\"false\">Attendance Requests</a>\n\n    </div> -->\n    <!-- <div *ngIf=\"isManager\" class=\"tab-content h-100\" id=\"nav-tabContent\">\n            <div class=\"tab-pane fade show active h-100\" id=\"nav-home\" role=\"tabpanel\" aria-labelledby=\"nav-home-tab\">\n    <div class=\"inner__section attendance__section rounded\">\n        <h5>My Attendance</h5>\n        <app-my-attendance></app-my-attendance>\n    </div>\n    </div>\n    \n    <div  class=\"tab-pane fade\" id=\"nav-profile\" role=\"tabpanel\" aria-labelledby=\"nav-profile-tab\">\n        <app-attendanceapprovals></app-attendanceapprovals>\n</div>\n</div> -->\n    <!-- Modal -->\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Genericservice } from 'src/app/services/genericservices';\nimport { UrlConstant } from 'src/app/services/urlConstant';\nimport { AttendanceLeave } from 'src/app/model/attendanceDetail.model';\nimport { EmployeeLateRequest } from 'src/app/model/attendancelateRequest.model';\nimport { EncryptDecryptLocalStorageService } from 'src/app/services/encrypt-decrypt-localstorage.service';\nimport { Attendance } from 'src/app/model/attendance.model';\nimport { LoadingBarService } from '@ngx-loading-bar/core';\nimport * as $ from 'jquery';\n@Component({\n  selector: 'app-attendance',\n  templateUrl: './attendance.component.html',\n  styleUrls: ['./attendance.component.scss']\n})\n\nexport class AttendanceComponent implements OnInit {\n\n  months: { value: string; viewValue: string; }[];\n  temp: Date;\n  pastYears: number;\n  years: number[] = [];\n  userObject: { \"gemsUserMasterId\": any; };\n  getattendanceURL;\n  public attendanceUrl = UrlConstant.attendanceApi;\n  public getEmployeeDetailUrl = UrlConstant.getEmployeeApi;\n  public saveAttendance = UrlConstant.saveAttendance;\n  public saveLateRequest = UrlConstant.saveLaterequest;\n  addreasonform: FormGroup;\n  attendancerecords;\n  todayDate: Date;\n  selectedmonth: { value: string; viewValue: string; };\n  selectedyear: any;\n  minDate: Date;\n  FromDate: string;\n  ToDate: string;\n  attendanceObj = new AttendanceLeave();\n  gemsEmployeeLateRequest = new EmployeeLateRequest();\n  gemsEmployeeMaster: any;\n  currentPage = 1;\n  totalCount: any;\n  public start: number;\n  public limit = 3;\n  totalPages = 1;\n  gemsEmployeeMasterId: number;\n  public perpageOption = [\n\n    { value: '10', label: '10' },\n    { value: '20', label: '20' },\n    { value: '50', label: '50' },\n    { value: '100', label: '100' },\n    { value: '500', label: '500' },\n  ];\n  selectedItemsPerPage = 10;\n  public status = \"\";\n  PreLoader: boolean;\n  attendanceDetails = new Attendance();\n  isData: boolean = false;\n  roleName: any;\n  isUser: boolean = false;\n  isManager: boolean = false;\n  constructor(private genericservice: Genericservice, private encryptdecryptlocalstorage: EncryptDecryptLocalStorageService, private loadingBar: LoadingBarService) {\n    var urlString = window.location.href;\n    var convertedURL = new URL(urlString);\n    var fromEmail = convertedURL.href.includes('fromEmail');\n    if (fromEmail) {\n      $('#nav-home-tab').removeClass('active');\n      $('#nav-profile-tab').addClass('active');\n      // $('.nav-tabs a[href=\"#' + \"nav-profile\" + '\"]').\n    }\n  }\n\n  displayedColumns = ['attendanceDate', 'attendanceInTime', 'attendanceOutTime', 'gemsAttendanceDuration', 'leaveTypeCode',\n    'status'];\n\n\n  ngOnInit() {\n        this.loadingBar.start();\n\n    // this.todayDate = new Date();\n    // let currentmonth = this.todayDate.getMonth();\n    // let currentyear = this.todayDate.getFullYear();\n    // this.gemsEmployeeMasterId =  localStorage.gemsEmployeeMasterId;\n    // this.addreasonform = new FormGroup({\n    //   addreason: new FormControl('', Validators.required)\n    // })\n\n    // this.months = [\n    //   { value: '01', viewValue: 'January' },\n    //   { value: '02', viewValue: 'February' },\n    //   { value: '03', viewValue: 'March' },\n    //   { value: '04', viewValue: 'April' },\n    //   { value: '05', viewValue: 'May' },\n    //   { value: '06', viewValue: 'June' },\n    //   { value: '07', viewValue: 'July' },\n    //   { value: '08', viewValue: 'August' },\n    //   { value: '09', viewValue: 'September' },\n    //   { value: '10', viewValue: 'October' },\n    //   { value: '11', viewValue: 'November' },\n    //   { value: '12', viewValue: 'December' }\n    // ];\n\n    // this.selectedmonth = this.months[currentmonth];\n    // this.selectedyear = currentyear;\n    // this.temp = new Date();\n    // let year = this.temp.getFullYear();\n    // this.pastYears = (this.temp.getFullYear() - 10);\n    // for (let i = this.pastYears; i <= year; i++) {\n    //   this.years.push(i);\n    // }\n    // this.years.reverse();\n    this.getEmployee();\n    // this.getAttendanceByMonth();\n    // let permission ={\n    //   \"id\": \"1\",\n    //   \"name\": \"renu\"\n    // }\n    // console.log(this.encryptdecryptlocalstorage.setToLocalStorageForObjectTypes(\"permissions\", permission));\n    // console.log(this.encryptdecryptlocalstorage.getLocalStorageForObjectTypes(\"permissions\"));\n    this.loadingBar.complete();\n\n  }\n\n  getEmployee() {\n    let userObj =\n    {\n      \"gemsUserMasterId\": this.encryptdecryptlocalstorage.getLocalStorage('userId')\n    }\n    return this.genericservice.post(this.getEmployeeDetailUrl, userObj, false).subscribe(employeedata => {\n      this.gemsEmployeeMaster = employeedata.data;\n      this.roleName = this.gemsEmployeeMaster.gemsUserMaster.gemsRoleMaster.roleCode;\n     \n      if (localStorage.isReportingManager === 'true') {\n        this.isManager = true;\n      } else {\n        this.isUser = true;\n      }\n      // if (this.roleName === 'USER') {\n      //   this.isUser = true;\n      // } else if(this.roleName === 'ADM') {\n      //   this.isManager = true;\n      // }\n    });\n\n  }\n\n  //   addreasonClicked(attendanceData) {\n  //     this.attendanceObj = attendanceData;\n  //     this.addreasonform.reset();\n\n  //   }\n  //   addReasonForLate() {\n\n  //     this.gemsEmployeeLateRequest.createdBy = this.encryptdecryptlocalstorage.getLocalStorage('employeeId');\n  //     this.gemsEmployeeLateRequest.createdOn = new Date();\n  //     this.gemsEmployeeLateRequest.updatedOn = new Date();\n  //     this.gemsEmployeeLateRequest.isActive = true;\n  //     this.gemsEmployeeLateRequest.updatedBy = 1;\n  //     this.gemsEmployeeLateRequest.updatedOn = new Date();\n  //     this.gemsEmployeeLateRequest.gemsEmployeeMaster = this.gemsEmployeeMaster;\n  //     this.gemsEmployeeLateRequest.remarks = this.addreasonform.controls['addreason'].value;\n  //     this.gemsEmployeeLateRequest.status = 'PENDING';\n  //     this.gemsEmployeeLateRequest.lateRequestDate = this.attendanceObj.attendanceDate;\n  //     this.gemsEmployeeLateRequest.lateDuration = this.attendanceObj.attendanceInTime;\n  //     this.genericservice.post(this.saveLateRequest, this.gemsEmployeeLateRequest,false).subscribe(lateRequestData => {\n  //       this.attendanceDetails.cntEmployeeLateRequest = lateRequestData.data;\n  //       this.attendanceDetails.attendanceDate=this.attendanceObj.attendanceDate;\n  //       this.attendanceDetails.gemsEmployeeMaster=this.gemsEmployeeMaster;\n  //       this.attendanceDetails.cntAttendanceDetailId = this.attendanceObj.cntAttendanceDetailId;\n  //       this.attendanceDetails.attendanceInTime=this.attendanceObj.attendanceInTime;\n  //       this.attendanceDetails.attendanceOutTime=this.attendanceObj.attendanceOutTime;\n  //       this.genericservice.post(this.saveAttendance, this.attendanceDetails, false).subscribe(attendanceMaster => {\n  //         this.saveAttendance = attendanceMaster.data;\n  //         this.getAttendanceByMonth();\n\n  //       })\n  //     });\n  //   }\n\n\n\n  //   public getAttendanceByMonth() {\n\n  //     this.PreLoader=true;\n  //     this.loadingBar.start();\n  //     let attendancemonth = this.selectedmonth.value;\n  //     let attendanceyear = this.selectedyear;\n  //     this.minDate = new Date(this.todayDate);\n  //     let month = this.selectedmonth.value;\n  //     this.FromDate = attendanceyear + '-' +\n  //       attendancemonth + '-' + '01';\n  //     this.ToDate = attendanceyear + '-' +\n  //       attendancemonth + '-' +\n  //       this.getToDate(attendancemonth, attendanceyear);\n\n  //     const attendanceViewObj = {\n  //       \"fromDate\": new Date(this.FromDate),\n  //       \"toDate\": new Date(this.ToDate),\n  //       \"gemsEmployeeMasterId\": this.encryptdecryptlocalstorage.getLocalStorage('employeeId'),\n  //     };\n\n  //     this.start = 0;\n  //     this.limit = this.selectedItemsPerPage;\n\n  //     return this.genericservice.post(this.attendanceUrl+'?start='+this.start+'&limit='+this.limit+'&attendanceType=0', attendanceViewObj,false).subscribe(response => {\n  //       if (response.status.success === 'Success') {\n  //       this.isData = true;\n  //       this.attendancerecords = response.data;\n  //       this.totalCount = response.totalResult;\n  //       this.loadingBar.complete();\n  //       this.findItemsPerPage();\n  //     } else {\n  //       this.isData = false;\n  //       this.loadingBar.complete();\n  //     }\n  //     }, error => {\n  //       console.log(error)\n  //     })\n\n  //   }\n\n\n  //   goToNext(): void {\n  //     this.currentPage++;\n  //     this.loadingBar.start();\n  //     let attendancemonth = this.selectedmonth.value;\n  //     let attendanceyear = this.selectedyear;\n  //     this.minDate = new Date(this.todayDate);\n  //     let month = this.selectedmonth.value;\n  //     this.FromDate = attendanceyear + '-' +\n  //       attendancemonth + '-' + '01';\n  //     this.ToDate = attendanceyear + '-' +\n  //       attendancemonth + '-' +\n  //       this.getToDate(attendancemonth, attendanceyear);\n\n  //     const attendanceViewObj = {\n  //       \"fromDate\": new Date(this.FromDate),\n  //       \"toDate\": new Date(this.ToDate),\n  //       \"gemsEmployeeMasterId\": this.encryptdecryptlocalstorage.getLocalStorage('employeeId'),\n  //     };\n\n  //     this.start =this.start + this.limit;\n  //     this.limit = this.selectedItemsPerPage;\n\n  //      this.genericservice.post(this.attendanceUrl+'?start='+this.start+'&limit='+this.limit+'&attendanceType=0', attendanceViewObj,false).subscribe(response => {\n  //       if (response.status.success === 'Success') {\n  //       this.isData = true;\n  //       this.attendancerecords = response.data;\n  //       this.totalCount = response.totalResult;\n  //       this.loadingBar.complete();\n  //       this.findItemsPerPage();\n  //     } else {\n  //       this.isData = false;\n  //       this.loadingBar.complete();\n  //     }\n  //     }, error => {\n  //       console.log(error)\n  //     })\n\n  //   }\n  //   goToPrev(): void {\n  //     this.currentPage--;\n  //     this.loadingBar.start();\n  //     let attendancemonth = this.selectedmonth.value;\n  //     let attendanceyear = this.selectedyear;\n  //     this.minDate = new Date(this.todayDate);\n  //     let month = this.selectedmonth.value;\n  //     this.FromDate = attendanceyear + '-' +\n  //       attendancemonth + '-' + '01';\n  //     this.ToDate = attendanceyear + '-' +\n  //       attendancemonth + '-' +\n  //       this.getToDate(attendancemonth, attendanceyear);\n\n  //     const attendanceViewObj = {\n  //       \"fromDate\": new Date(this.FromDate),\n  //       \"toDate\": new Date(this.ToDate),\n  //       \"gemsEmployeeMasterId\": this.encryptdecryptlocalstorage.getLocalStorage('employeeId'),\n  //     };\n\n  //     this.start =this.start - this.limit;\n  //     this.limit = this.selectedItemsPerPage;\n\n  //      this.genericservice.post(this.attendanceUrl+'?start='+this.start+'&limit='+this.limit+'&attendanceType=0', attendanceViewObj,false).subscribe(response => {\n  //       if (response.status.success === 'Success') {\n  //       this.isData = true;\n  //       this.attendancerecords = response.data;\n  //       this.totalCount = response.totalResult;\n  //       this.loadingBar.complete();\n  //       this.findItemsPerPage();\n  //     } else {\n  //       this.isData = false;\n  //       this.loadingBar.complete();\n  //     }\n  //     }, error => {\n  //       console.log(error)\n  //     })\n  //   }\n\n  //   isLate(intime, maxtime) {\n  //     var a = intime.split(\":\");\n  //     if (maxtime == null) {\n  //       maxtime = '09:30:00'\n  //     }\n  //     var b = maxtime.split(\":\");\n  //     if (parseInt(a[0]) > parseInt(b[0])) {\n  //       return true;\n  //     }\n  //     if (parseInt(a[0]) == parseInt(b[0])) {\n  //       if (parseInt(a[1]) > parseInt(b[1])) {\n  //         return true;\n  //       }\n  //     }\n  //     if (parseInt(a[0]) == parseInt(b[0]) && parseInt(a[1]) == parseInt(b[1])) {\n  //       if (parseInt(a[2]) > parseInt(b[2])) {\n  //         return true;\n  //       }\n  //     }\n  //     return false;\n  //   }\n\n  //   getTimeByTimeStampWithReturn(timeStamp: any): any {\n  //     if (timeStamp != null) {\n  //       var date_to_convert = new Date(timeStamp);\n  //       var local_date = new Date();\n  //       date_to_convert.setMinutes(date_to_convert.getMinutes() + local_date.getTimezoneOffset());\n  //       let DateValue = date_to_convert.toString().split(' ');\n  //       return DateValue[4];\n  //     } else { return null; }\n  //   }\n\n  //   getDateByTime(time: any): any {\n\n  //     var date = new Date(time);\n  //     var month = date.getMonth() + 1\n  //     var dateFormate = date.getFullYear() + \"-\" + month + \"-\" + date.getDate();\n  //     return dateFormate;\n  //   }\n\n  //   getTimeByTimeStamp(timeStamp: any): any {\n  //     if (timeStamp != null) {\n  //       var date_to_convert = new Date(timeStamp);\n  //       var local_date = new Date();\n  //       date_to_convert.setMinutes(date_to_convert.getMinutes() + local_date.getTimezoneOffset());\n  //       let DateValue = date_to_convert.toString().split(' ');\n  //       return DateValue[4];\n  //     } else { return '--'; }\n  //   }\n\n  //   getOrganisationWeekOff(attendance) {\n\n  //     let attendanceDate = new Date(attendance.attendanceDate);\n  //     switch (attendanceDate.getDay()) {\n  //       case 0: if ((!attendance.sunday) && (attendance.sunday != null)) {\n  //         return '(Week Off)'\n  //       }\n  //         break;\n  //       case 1: if ((!attendance.monday) && (attendance.sunday != null)) {\n  //         return '(Week Off)'\n  //       }\n  //         break;\n  //       case 2: if ((!attendance.tuesday) && (attendance.sunday != null)) {\n  //         return '(Week Off)'\n  //       }\n  //         break;\n  //       case 3: if ((!attendance.wednesday) && (attendance.sunday != null)) {\n  //         return '(Week Off)'\n  //       }\n  //         break;\n  //       case 4: if ((!attendance.thursday) && (attendance.sunday != null)) {\n  //         return '(Week Off)'\n  //       }\n  //         break;\n  //       case 5: if ((!attendance.friday) && (attendance.sunday != null)) {\n  //         return '(Week Off)'\n  //       }\n  //         break;\n  //       case 6: if ((!attendance.saturday) && (attendance.sunday != null)) {\n  //         return '(Week Off)'\n  //       }\n  //         break;\n  //     }\n  //   }\n\n  //   getToDate(month, year): any {\n\n  //     if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n  //       return 31;\n  //     }\n  //     else if (month == 2) {\n  //       if (year % 4 == 0) {\n  //         return 29;\n  //       } else {\n  //         return 28;\n  //       }\n  //     }\n  //     else if (month == 4 || month == 6 || month == 9 || month == 11) {\n  //       return 30;\n  //     }\n  //   }\n\n  //   getDuration(duration) {\n  //     if (duration != '' && duration != null && duration != undefined) {\n  //       let d = duration.split(':');\n  //       return d[0] + 'h ' + d[1] + 'm';\n  //     } else {\n  //       return '--';\n  //     }\n  //   }\n\n  //   changeItemPerPage(event) {\n  //     console.log('event printed' + event)\n  //     this.selectedItemsPerPage = event;\n  //     this.getAttendanceByMonth();\n  //     this.refreshList();\n  //   }\n\n  //   findItemsPerPage() {\n  //     this.totalPages = Math.ceil(this.totalCount / +this.selectedItemsPerPage);\n  //   }\n  //   refreshList()\n  //   {\n  //     this.loadingBar.start();\n  //     let attendancemonth = this.selectedmonth.value;\n  //     let attendanceyear = this.selectedyear;\n  //     this.minDate = new Date(this.todayDate);\n  //     let month = this.selectedmonth.value;\n  //     this.FromDate = attendanceyear + '-' +\n  //       attendancemonth + '-' + '01';\n  //     this.ToDate = attendanceyear + '-' +\n  //       attendancemonth + '-' +\n  //       this.getToDate(attendancemonth, attendanceyear);\n\n  //     const attendanceViewObj = {\n  //       \"fromDate\": new Date(this.FromDate),\n  //       \"toDate\": new Date(this.ToDate),\n  //       \"gemsEmployeeMasterId\": this.encryptdecryptlocalstorage.getLocalStorage('employeeId'),\n  //     };\n\n  //     this.start = 0;\n  //     this.limit = this.selectedItemsPerPage;\n\n  //     return this.genericservice.post(this.attendanceUrl+'?start='+this.start+'&limit='+this.limit+'&attendanceType=0', attendanceViewObj,false).subscribe(response => {\n  //       if (response.status.success === 'Success') {\n  //       this.isData = true;\n  //       this.attendancerecords = response.data;\n  //       this.totalCount = response.totalResult;\n  //       this.loadingBar.complete();\n  //       this.findItemsPerPage();\n  //     } else {\n  //       this.isData = false;\n  //       this.loadingBar.complete();\n  //     }\n  //     }, error => {\n  //       console.log(error)\n  //     })\n  //   }\n\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AttendanceComponent } from './attendance.component';\nimport { AttendanceRoutingModule } from './attendance.routing';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ChuttiPaginationComponent } from '../chutti-pagination/chutti-pagination.component';\nimport { PaginationModule } from '../chutti-pagination/chutti-pagination.module';\nimport { ApprovalsModule } from '../approvals/approvals.module';\nimport { MyAttendanceComponent } from './my-attendance/my-attendance.component';\nimport { LoadingBarModule } from '@ngx-loading-bar/core';\n@NgModule({\n  declarations: [AttendanceComponent, MyAttendanceComponent],\n  imports: [\n    CommonModule,\n    AttendanceRoutingModule, \n    FormsModule,\n    ReactiveFormsModule,\n    FormsModule,\n    PaginationModule,\n    ApprovalsModule,LoadingBarModule\n  ]\n})\nexport class AttendanceModule { }\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule } from '@angular/router';\nimport { AttendanceComponent } from './attendance.component';\n\nvar routes=[\n    {path:'',component:AttendanceComponent},\n\n]\n\n@NgModule({\n    imports:[RouterModule.forChild(routes)],\n    exports:[RouterModule],\n})\nexport class AttendanceRoutingModule{\n\n}","<!-- <div class=\"inner__section attendance__section rounded\">\n        <h5>Attendance Records</h5> -->\n\n<div class=\"clearfix\"></div>\n<div class=\"attendance__filter\">\n    <div class=\"row\">\n        <div class=\"col-md-6 align-self-center\">\n            <div class=\"form-group search__input\">\n                <select class=\"form-control\" [(ngModel)]=\"selectedmonth\" (ngModelChange)=\"getAttendanceByMonth()\">\n                    <option *ngFor=\"let month of months\" [ngValue]=\"month\"> {{ month.viewValue }}</option>\n                </select>\n\n            </div>\n        </div>\n\n        <div class=\"col-md-6 align-self-center\">\n            <div class=\"form-group search__input\">\n                <select class=\"form-control\" [(ngModel)]=\"selectedyear\" (ngModelChange)=\"getAttendanceByMonth()\">\n                    <option *ngFor=\"let year of years\">{{year}}</option>\n                </select>\n            </div>\n        </div>\n        <!-- <div class=\"col-md-6 align-self-center\">\n                    <div class=\"form-group search__input\">\n                        <input type=\"text\" placeholder=\"search\" class=\"form-control\">\n                        <span class=\"search__btn\"><i class=\"fa fa-search\" aria-hidden=\"true\"></i>\n                        </span>\n                    </div>\n                </div> -->\n        <!-- <div class=\"col-md-2 align-self-center\">\n                        <p><span class=\"icon_filter\"></span> Filter </p>\n                    </div> -->\n\n    </div>\n</div>\n<div class=\"attendance__table rwd-table\">\n\n    <table class=\"table table-fixed\">\n        <thead>\n            <tr class=\"border__hide\">\n                <th scope=\"col\" class=\"col-md-2 pl-0\">Date</th>\n                <th scope=\"col\" class=\"col-md-2 pl-0\">In-Time</th>\n                <th scope=\"col\" class=\"col-md-2 pl-0\">Out-Time</th>\n                <th scope=\"col\" class=\"col-md-3 pl-0\">Working Hours</th>\n                <th scope=\"col\" class=\"col-md-3 pl-0\">Leave / Permission</th>\n                <!-- <th scope=\"col\" class=\"col-md-1 pl-0\">Reason</th> -->\n                <!-- <th scope=\"col\" class=\"col-md-2 pl-0\">Status</th> -->\n\n            </tr>\n        </thead>\n        <tbody class=\"scroll\" *ngIf=\"isData\">\n            <tr class=\"d-flex\" *ngFor=\"let attendance of attendancerecords\" id=\"attendancerecords\">\n                <td scope=\"row\" class=\"col-md-2 pl-0\" data-th=\"Date\">{{getDateByTime(attendance.attendanceDate)| date:\"dd MMM yyyy\" | uppercase}}</td>\n                <td class=\"col-md-2 pl-0\" data-th=\"In-time\">{{getTimeByTimeStamp(attendance.attendanceInTime)}}</td>\n                <td class=\"col-md-2 pl-0\" data-th=\"Out-Time\">{{getTimeByTimeStamp(attendance.attendanceOutTime)}}</td>\n                <td class=\"col-md-3 pl-0\" data-th=\"Working Hours\">{{getDuration(attendance.durationBtwInOut)}}</td>\n                <td class=\"col-md-3 pl-0\" data-th=\"Leave / Permission\"> {{attendance.leaveCode}}</td>\n                <!-- <td class=\"col-md-1 pl-0\" data-th=\"Reason\"> {{attendance.reason}}</td> -->\n                <!-- <td class=\"col-md-2 pl-0\" data-th=\"Status\">\n                            \n                                <div>\n                                <button class=\"btn reason__btn\"\n                                    *ngIf=\"(isLate(getTimeByTimeStamp(attendance.attendanceInTime),getTimeByTimeStampWithReturn(attendance.shiftIntime)) == true && attendance.cntAttendanceLateRequestId == null)\"\n                                    data-toggle=\"modal\" data-target=\"#trigger\"\n                                    (click)=\"addreasonClicked(attendance)\">Add\n                                    Reason</button>\n                                <span\n                                    *ngIf=\"attendance.cntAttendanceLateRequestId != null &&  attendance.status=='APPROVED'\"\n                                    class=\"status__btn text-capitalize leave_approved\">\n                                  \n                                    {{attendance.status | lowercase}}</span>\n                                    <span class=\"text-capitalize leave_notApproved\"\n                                    *ngIf=\"attendance.cntAttendanceLateRequestId != null &&  attendance.status=='REJECTED'\">\n                                    <span class=\"leave_notApproved\"></span>\n                                    {{attendance.status | lowercase}}</span>\n                                <span class=\"text-capitalize leave_pending\"\n                                    *ngIf=\"attendance.cntAttendanceLateRequestId != null &&  attendance.status=='PENDING'\">\n                                    <span class=\"leave_pending\"></span>\n                                    {{attendance.status | lowercase}}</span>\n                                </div>\n                        \n                        </td> -->\n                <!-- <td class=\"col-md-2 pl-0\"> \n                            <span *ngIf=\"attendance.cntAttendanceLateRequestId != null\">\n                             \n                           \n                            {{attendance.status | lowercase}}</span></td> -->\n                <!-- <td class=\"col-md-2 pl-0\"> -->\n                <!-- <span> -->\n                <!-- <div>\n                                <button class=\"btn reason__btn\"\n                                    *ngIf=\"(isLate(getTimeByTimeStamp(attendance.attendanceInTime),getTimeByTimeStampWithReturn(attendance.shiftIntime)) == true && attendance.cntAttendanceLateRequestId == null)\"\n                                    data-toggle=\"modal\" data-target=\"#trigger\"\n                                    (click)=\"addreasonClicked(attendance)\">Add\n                                    Reason</button>\n                                <span\n                                    *ngIf=\"attendance.cntAttendanceLateRequestId != null &&  attendance.status=='APPROVED'\"\n                                    class=\"status__btn text-capitalize \">\n                                    <span style='font-size:18px;'>&#10003;</span>\n                                    {{attendance.status | lowercase}}</span>\n                                <span class=\"text-capitalize \"\n                                    *ngIf=\"attendance.cntAttendanceLateRequestId != null &&  attendance.status=='PENDING'\">\n                                    {{attendance.status | lowercase}}</span>\n                                </div> -->\n                <!-- </span> -->\n                <!-- <span *ngIf=\"!noreportingManager && (isLate(getTimeByTimeStamp(gemsAttendanceMaster.attendanceInTime),getTimeByTimeStampWithReturn(gemsAttendanceMaster.shiftIntime)))== true\">\n                                    <p class=\"text-danger\" style=\"font-size: 10px;\">{{NO_REPORTING_MANAGER}}</p> \n                            </span> -->\n                <!-- </td> -->\n\n            </tr>\n        </tbody>\n        <tbody *ngIf=\"!isData\">\n            <div class=\"text-center w-100 py-5\">\n                <h4 class=\"mt-4\">No Records Found!</h4>\n            </div>\n        </tbody>\n    </table>\n    <div class=\"table__bottom text-right\" *ngIf=\"isData &&totalCount>10\">\n        <span class=\"items__nos\">\n            <div class=\"form-group page__section\">\n                <label for=\"pageNo\">Items per page:</label>\n                <select class=\"form-control\" [(ngModel)]=\"selectedItemsPerPage\" id=\"pageNo\"\n                    (ngModelChange)=\"changeItemPerPage($event)\">\n                    <option *ngFor=\"let perpageVal of perpageOption\" [value]=\"perpageVal.value\">\n                        {{perpageVal.label}}</option>\n                </select>\n            </div>\n        </span>\n        <app-chutti-pagination [currentPage]=\"currentPage\" [count]=\"totalCount\" [pagesToShow]=\"totalPages\"\n            (goPrev)=\"goToPrev()\" (goNext)=\"goToNext()\" (onPage)=\"goToPageNo($event)\"></app-chutti-pagination>\n    </div>\n\n</div>\n\n<!-- </div> -->\n<div class=\"modal fade\" id=\"trigger\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\"\n    aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-top modal-dialog--support\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-body support__request-modal\">\n\n                <h5>Reason for Late coming on\n                    <span\n                        *ngIf=\"attendanceObj.attendanceDate != null\">{{getDateByTime(attendanceObj.attendanceDate)| date:\"dd MMM yyyy\" | uppercase}}</span>\n                </h5>\n                <form class=\"support__request\" [formGroup]=\"addreasonform\">\n                    <div class=\"row\">\n                        <div class=\"col-md-12\">\n                            <div class=\"form-group support__request--input\">\n                                <label for=\"exampleInputEmail1\">Select a reason template</label>\n                                <select class=\"form-control\" formControlName=\"addreason\" id=\"exampleFormControlSelect1\">\n                                    <option>Traffic</option>\n                                    <option>Vehicle breakdown</option>\n                                    <option>Not feeling well</option>\n                                    <option>Worked late night</option>\n                                    <option>Others</option>\n                                </select>\n                            </div>\n                        </div>\n\n                    </div>\n\n                    <div class=\"bottom__btn\">\n\n                        <button type=\"submit\" class=\"btn btn-primary cancel\" data-dismiss=\"modal\">Cancel</button>\n                        <button type=\"submit\" class=\"btn btn-primary submit\" data-dismiss=\"modal\"\n                            [disabled]=\"addreasonform.invalid\" (click)=\"addReasonForLate()\">Submit</button>\n                    </div>\n\n\n                </form>\n            </div>\n        </div>\n\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Genericservice } from 'src/app/services/genericservices';\nimport { UrlConstant } from 'src/app/services/urlConstant';\nimport { AttendanceLeave } from 'src/app/model/attendanceDetail.model';\nimport { EmployeeLateRequest } from 'src/app/model/attendancelateRequest.model';\nimport { EncryptDecryptLocalStorageService } from 'src/app/services/encrypt-decrypt-localstorage.service';\nimport { Attendance } from 'src/app/model/attendance.model';\n\n@Component({\n  selector: 'app-my-attendance',\n  templateUrl: './my-attendance.component.html',\n  styleUrls: ['./my-attendance.component.scss']\n})\nexport class MyAttendanceComponent implements OnInit {\n\n  months: { value: string; viewValue: string; }[];\n  temp: Date;\n  pastYears: number;\n  years: number[] = [];\n  userObject: { \"gemsUserMasterId\": any; };\n  getattendanceURL;\n  public attendanceUrl = UrlConstant.attendanceApi;\n  public getEmployeeDetailUrl = UrlConstant.getEmployeeApi;\n  public saveAttendance = UrlConstant.saveAttendance;\n  public saveLateRequest = UrlConstant.saveLaterequest;\n  addreasonform: FormGroup;\n  attendancerecords = new Attendance();\n  todayDate: Date;\n  selectedmonth: { value: string; viewValue: string; };\n  selectedyear: any;\n  minDate: Date;\n  FromDate: string;\n  ToDate: string;\n  attendanceObj = new AttendanceLeave();\n  gemsEmployeeLateRequest = new EmployeeLateRequest();\n  gemsEmployeeMaster: any;\n  currentPage = 1;\n  totalCount: any;\n  public start: number;\n  public limit = 3;\n  totalPages = 1;\n  gemsEmployeeMasterId:number;\n  public perpageOption = [\n  \n    { value: '10', label: '10' },\n    { value: '20', label: '20' },\n    { value: '50', label: '50' },\n    { value: '100', label: '100' },\n    { value: '500', label: '500' },\n  ];\n  selectedItemsPerPage = 10;\n  public status = \"\";\n  PreLoader: boolean;\n  attendanceDetails =new Attendance();\n  isData: boolean = false;\n  roleName: any;\n  constructor(private genericservice: Genericservice, private encryptdecryptlocalstorage: EncryptDecryptLocalStorageService) { }\n\n  displayedColumns = ['attendanceDate', 'attendanceInTime', 'attendanceOutTime', 'gemsAttendanceDuration', 'leaveTypeCode',\n    'status'];\n\n\n  ngOnInit() {\n    this.PreLoader=true;\n    this.todayDate = new Date();\n    let currentmonth = this.todayDate.getMonth();\n    \n    let currentyear = this.todayDate.getFullYear();\n    this.gemsEmployeeMasterId =  localStorage.gemsEmployeeMasterId;\n    this.addreasonform = new FormGroup({\n      addreason: new FormControl('', Validators.required),\n      description : new FormControl('')\n    })\n\n    this.months = [\n      { value: '01', viewValue: 'January' },\n      { value: '02', viewValue: 'February' },\n      { value: '03', viewValue: 'March' },\n      { value: '04', viewValue: 'April' },\n      { value: '05', viewValue: 'May' },\n      { value: '06', viewValue: 'June' },\n      { value: '07', viewValue: 'July' },\n      { value: '08', viewValue: 'August' },\n      { value: '09', viewValue: 'September' },\n      { value: '10', viewValue: 'October' },\n      { value: '11', viewValue: 'November' },\n      { value: '12', viewValue: 'December' }\n    ];\n\n    this.selectedmonth = this.months[currentmonth];\n    this.selectedyear = currentyear;\n    this.temp = new Date();\n    let year = this.temp.getFullYear();\n    this.pastYears = (this.temp.getFullYear() - 10);\n    for (let i = this.pastYears; i <= year; i++) {\n      this.years.push(i);\n    }\n    this.years.reverse();\n    this.getEmployee();\n    this.getAttendanceByMonth();\n  }\n\n  getEmployee() {\n    let userObj =\n    {\n      \"gemsUserMasterId\": this.encryptdecryptlocalstorage.getLocalStorage('userId')\n    }\n    return this.genericservice.post(this.getEmployeeDetailUrl, userObj,false).subscribe(employeedata => {\n      this.gemsEmployeeMaster = employeedata.data;\n      this.roleName = this.gemsEmployeeMaster.gemsUserMaster.gemsRoleMaster.roleCode;\n    });\n\n  }\n\n  addreasonClicked(attendanceData) {\n    this.attendanceObj = attendanceData;\n    this.addreasonform.reset();\n    \n  }\n  addReasonForLate() {\n   //\n    this.gemsEmployeeLateRequest.createdBy = this.encryptdecryptlocalstorage.getLocalStorage('employeeId');\n    this.gemsEmployeeLateRequest.createdOn = new Date();\n    this.gemsEmployeeLateRequest.updatedOn = new Date();\n    this.gemsEmployeeLateRequest.isActive = true;\n    this.gemsEmployeeLateRequest.updatedBy = 1;\n    this.gemsEmployeeLateRequest.updatedOn = new Date();\n    this.gemsEmployeeLateRequest.gemsEmployeeMaster = this.gemsEmployeeMaster;\n    this.gemsEmployeeLateRequest.remarks = this.addreasonform.controls['addreason'].value;\n    this.gemsEmployeeLateRequest.description = this.addreasonform.controls['description'].value;\n    this.gemsEmployeeLateRequest.status = 'PENDING';\n    this.gemsEmployeeLateRequest.lateRequestDate = this.attendanceObj.attendanceDate;\n    this.gemsEmployeeLateRequest.lateDuration = this.attendanceObj.attendanceInTime;\n    this.genericservice.post(this.saveLateRequest, this.gemsEmployeeLateRequest,true).subscribe(lateRequestData => {\n      this.attendanceDetails.cntEmployeeLateRequest = lateRequestData.data;\n      this.attendanceDetails.attendanceDate=this.attendanceObj.attendanceDate;\n      this.attendanceDetails.gemsEmployeeMaster=this.gemsEmployeeMaster;\n      this.attendanceDetails.cntAttendanceDetailId = this.attendanceObj.cntAttendanceDetailId;\n      this.attendanceDetails.attendanceInTime=this.attendanceObj.attendanceInTime;\n      this.attendanceDetails.attendanceOutTime=this.attendanceObj.attendanceOutTime;\n      this.genericservice.post(this.saveAttendance, this.attendanceDetails, false).subscribe(attendanceMaster => {\n        this.saveAttendance = attendanceMaster.data;\n        this.getAttendanceByMonth();\n\n      })\n    });\n  }\n\n\n\n  public getAttendanceByMonth() {\n  \n    this.PreLoader=true;\n    let attendancemonth = this.selectedmonth.value;\n    let attendanceyear = this.selectedyear;\n    this.minDate = new Date(this.todayDate);\n    let month = this.selectedmonth.value;\n    this.FromDate = attendanceyear + '-' +\n      attendancemonth + '-' + '01';\n    this.ToDate = attendanceyear + '-' +\n      attendancemonth + '-' +\n      this.getToDate(attendancemonth, attendanceyear);\n\n    const attendanceViewObj = {\n      \"fromDate\": new Date(this.FromDate),\n      \"toDate\": new Date(this.ToDate),\n      \"gemsEmployeeMasterId\": this.encryptdecryptlocalstorage.getLocalStorage('employeeId'),\n    };\n\n    this.start = 0;\n    this.limit = this.selectedItemsPerPage;\n    \n    return this.genericservice.post(this.attendanceUrl+'?start='+this.start+'&limit='+this.limit+'&attendanceType=0', attendanceViewObj,false).subscribe(response => {\n      if (response.status.success === 'Success') {\n      this.isData = true;\n      this.attendancerecords = response.data;\n      this.totalCount = response.totalResult;\n      this.PreLoader=false;\n      this.findItemsPerPage();\n    } else {\n      this.isData = false;\n      this.PreLoader = false;\n    }\n    }, error => {\n      console.log(error)\n    })\n\n  }\n\n\n  goToNext(): void {\n    this.currentPage++;\n    this.PreLoader=true;\n    let attendancemonth = this.selectedmonth.value;\n    let attendanceyear = this.selectedyear;\n    this.minDate = new Date(this.todayDate);\n    let month = this.selectedmonth.value;\n    this.FromDate = attendanceyear + '-' +\n      attendancemonth + '-' + '01';\n    this.ToDate = attendanceyear + '-' +\n      attendancemonth + '-' +\n      this.getToDate(attendancemonth, attendanceyear);\n\n    const attendanceViewObj = {\n      \"fromDate\": new Date(this.FromDate),\n      \"toDate\": new Date(this.ToDate),\n      \"gemsEmployeeMasterId\": this.encryptdecryptlocalstorage.getLocalStorage('employeeId'),\n    };\n\n    this.start =this.start + this.limit;\n    this.limit = this.selectedItemsPerPage;\n    \n     this.genericservice.post(this.attendanceUrl+'?start='+this.start+'&limit='+this.limit+'&attendanceType=0', attendanceViewObj,false).subscribe(response => {\n      if (response.status.success === 'Success') {\n      this.isData = true;\n      this.attendancerecords = response.data;\n      this.totalCount = response.totalResult;\n      this.PreLoader=false;\n      this.findItemsPerPage();\n    } else {\n      this.isData = false;\n      this.PreLoader = false;\n    }\n    }, error => {\n      console.log(error)\n    })\n\n  }\n  goToPrev(): void {\n    this.currentPage--;\n    this.PreLoader=true;\n    let attendancemonth = this.selectedmonth.value;\n    let attendanceyear = this.selectedyear;\n    this.minDate = new Date(this.todayDate);\n    let month = this.selectedmonth.value;\n    this.FromDate = attendanceyear + '-' +\n      attendancemonth + '-' + '01';\n    this.ToDate = attendanceyear + '-' +\n      attendancemonth + '-' +\n      this.getToDate(attendancemonth, attendanceyear);\n\n    const attendanceViewObj = {\n      \"fromDate\": new Date(this.FromDate),\n      \"toDate\": new Date(this.ToDate),\n      \"gemsEmployeeMasterId\": this.encryptdecryptlocalstorage.getLocalStorage('employeeId'),\n    };\n\n    this.start =this.start - this.limit;\n    this.limit = this.selectedItemsPerPage;\n    \n     this.genericservice.post(this.attendanceUrl+'?start='+this.start+'&limit='+this.limit+'&attendanceType=0', attendanceViewObj,false).subscribe(response => {\n      if (response.status.success === 'Success') {\n      this.isData = true;\n      this.attendancerecords = response.data;\n      this.totalCount = response.totalResult;\n      this.PreLoader=false;\n      this.findItemsPerPage();\n    } else {\n      this.isData = false;\n      this.PreLoader = false;\n    }\n    }, error => {\n      console.log(error)\n    })\n  }\n\n  isLate(intime, maxtime) {\n    var a = intime.split(\":\");\n    if (maxtime == null) {\n      maxtime = '09:30:00'\n    }\n    var b = maxtime.split(\":\");\n    if (parseInt(a[0]) > parseInt(b[0])) {\n      return true;\n    }\n    if (parseInt(a[0]) == parseInt(b[0])) {\n      if (parseInt(a[1]) > parseInt(b[1])) {\n        return true;\n      }\n    }\n    if (parseInt(a[0]) == parseInt(b[0]) && parseInt(a[1]) == parseInt(b[1])) {\n      if (parseInt(a[2]) > parseInt(b[2])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getTimeByTimeStampWithReturn(timeStamp: any): any {\n    if (timeStamp != null) {\n      var date_to_convert = new Date(timeStamp);\n      var local_date = new Date();\n      date_to_convert.setMinutes(date_to_convert.getMinutes() + local_date.getTimezoneOffset());\n      let DateValue = date_to_convert.toString().split(' ');\n      return DateValue[4];\n    } else { return null; }\n  }\n\n  getDateByTime(time: any): any {\n\n    var date = new Date(time);\n    var month = date.getMonth() + 1\n    var dateFormate = date.getFullYear() + \"-\" + month + \"-\" + date.getDate();\n    return dateFormate;\n  }\n\n  getTimeByTimeStamp(timeStamp: any): any {\n    if (timeStamp != null) {\n      var date_to_convert = new Date(timeStamp);\n      var local_date = new Date();\n      date_to_convert.setMinutes(date_to_convert.getMinutes() + local_date.getTimezoneOffset());\n      let DateValue = date_to_convert.toString().split(' ');\n      return DateValue[4];\n    } else { return '--'; }\n  }\n\n  getOrganisationWeekOff(attendance) {\n\n    let attendanceDate = new Date(attendance.attendanceDate);\n    switch (attendanceDate.getDay()) {\n      case 0: if ((!attendance.sunday) && (attendance.sunday != null)) {\n        return '(Week Off)'\n      }\n        break;\n      case 1: if ((!attendance.monday) && (attendance.sunday != null)) {\n        return '(Week Off)'\n      }\n        break;\n      case 2: if ((!attendance.tuesday) && (attendance.sunday != null)) {\n        return '(Week Off)'\n      }\n        break;\n      case 3: if ((!attendance.wednesday) && (attendance.sunday != null)) {\n        return '(Week Off)'\n      }\n        break;\n      case 4: if ((!attendance.thursday) && (attendance.sunday != null)) {\n        return '(Week Off)'\n      }\n        break;\n      case 5: if ((!attendance.friday) && (attendance.sunday != null)) {\n        return '(Week Off)'\n      }\n        break;\n      case 6: if ((!attendance.saturday) && (attendance.sunday != null)) {\n        return '(Week Off)'\n      }\n        break;\n    }\n  }\n\n  getToDate(month, year): any {\n\n    if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n      return 31;\n    }\n    else if (month == 2) {\n      if (year % 4 == 0) {\n        return 29;\n      } else {\n        return 28;\n      }\n    }\n    else if (month == 4 || month == 6 || month == 9 || month == 11) {\n      return 30;\n    }\n  }\n\n  getDuration(duration) {\n    if (duration != '' && duration != null && duration != undefined) {\n      let d = duration.split(':');\n      return d[0] + 'h ' + d[1] + 'm';\n    } else {\n      return '--';\n    }\n  }\n\n  changeItemPerPage(event) {\n    console.log('event printed' + event)\n    this.selectedItemsPerPage = event;\n    this.getAttendanceByMonth();\n    this.refreshList();\n  }\n\n  findItemsPerPage() {\n    this.totalPages = Math.ceil(this.totalCount / +this.selectedItemsPerPage);\n  }\n  refreshList()\n  {\n    this.PreLoader=true;\n    let attendancemonth = this.selectedmonth.value;\n    let attendanceyear = this.selectedyear;\n    this.minDate = new Date(this.todayDate);\n    let month = this.selectedmonth.value;\n    this.FromDate = attendanceyear + '-' +\n      attendancemonth + '-' + '01';\n    this.ToDate = attendanceyear + '-' +\n      attendancemonth + '-' +\n      this.getToDate(attendancemonth, attendanceyear);\n\n    const attendanceViewObj = {\n      \"fromDate\": new Date(this.FromDate),\n      \"toDate\": new Date(this.ToDate),\n      \"gemsEmployeeMasterId\": this.encryptdecryptlocalstorage.getLocalStorage('employeeId'),\n    };\n\n    this.start = 0;\n    this.limit = this.selectedItemsPerPage;\n    \n    return this.genericservice.post(this.attendanceUrl+'?start='+this.start+'&limit='+this.limit+'&attendanceType=0', attendanceViewObj,false).subscribe(response => {\n      if (response.status.success === 'Success') {\n      this.isData = true;\n      this.attendancerecords = response.data;\n      this.totalCount = response.totalResult;\n      this.PreLoader=false;\n      this.findItemsPerPage();\n    } else {\n      this.isData = false;\n      this.PreLoader = false;\n    }\n    }, error => {\n      console.log(error)\n    })\n  }\n\n\n}\n"],"sourceRoot":""}